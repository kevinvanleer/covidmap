{"version":3,"sources":["components/presentation/Link.js","components/structural/About.js","components/presentation/FloatingPanel.js","components/presentation/ToggleButton.js","components/presentation/LoadingIndicator.js","state/util/loadingStatus.js","components/structural/ControlPanel.js","state/core/time.js","components/structural/DateSelector.js","components/structural/Stats.js","components/core/d3AreaChart.js","state/ui/map.js","components/structural/Details.js","components/presentation/LayerItem.js","components/structural/Layers.js","components/structural/DrawerButton.js","components/structural/AliveStatusWait.js","state/core/usCovidData.js","state/core/apiServerStatus.js","state/request/usCasesByCounty.js","workflows/fetchCovidData.js","components/core/Map.js","components/presentation/FullscreenMap.js","mapboxConfig.js","App.js","serviceWorker.js","services/time.js","state/core/index.js","state/ui/index.js","state/request/index.js","state/rootReducer.js","index.js","state/configureAppStore.js"],"names":["Link","styled","a","props","color","defaultProps","About","onHide","flexDirection","backgroundColor","padding","maxWidth","margin","fontSize","height","href","id","onClick","FloatingPanel","Flexbox","zIndex","ToggleButton","icon","active","fixedWidth","LoadingIndicator","div","progress","loadingStatus","loadStatusDefaults","status","success","error","result","ControlPanel","layers","activeLayers","updateActiveLayers","detailsData","onShowAbout","onSetDate","date","useState","collapsed","setCollapsed","hideLayers","setHideLayers","hideDetails","setHideDetails","mapLoading","useSelector","state","ui","map","mapLoadStatus","sourcesLoading","sourcesLoadStatus","dataProgress","request","usCasesByCounty","loadingMessage","width","right","top","alignItems","nowrap","flexGrow","marginBetween","faLayerGroup","faChartBar","horizontal","moment","entity","setDate","withChart","faInfoCircle","updateCurrentTime","createAsyncThunk","timestamp","previous","dispatch","time","getState","core","delay","pause","tick","window","requestAnimationFrame","next","setTimeout","timeSlice","createSlice","name","initialState","min","parseInt","format","max","subtract","current","rate","reducers","setCurrent","action","payload","newTime","togglePlayPause","setMax","setMin","setRate","setPause","actions","DateSelector","useDispatch","timeState","onChange","value","faPlay","faPause","Stats","deathRate","recentData","newCases","ongoingCases","Intl","NumberFormat","get","twoWeek","toFixed","AreaChart","data","currentDate","currentValue","showIntercept","d3svg","useRef","yTicks","casesData","Object","assign","slice","cases","deaths","y","useEffect","svg","d3","selectAll","remove","x","domain","range","yc","Math","last","nice","curve","areaC","d","y0","y1","areaM","append","datum","attr","call","g","ticks","tickFormat","tickSizeOuter","select","clone","text","isEmpty","style","className","role","ref","pointerEvents","mapSlice","hold","selectedFeature","layersLoadStatus","releaseHold","setHold","setSelectedFeature","beginMapInitialization","beginLoadingMap","mapFinishedLoading","beginLoadingSources","sourcesFinishedLoading","beginLoadingLayers","layersFinishedLoading","beingLoadingLayers","Details","fourWeek","eightWeek","findLast","yesterday","twoWeekLagData","fourWeekLagData","eightWeekLagData","set","closeStats","useCallback","inline","bold","displayName","faFlagUsa","undefined","LayerItem","config","label","toLowerCase","size","Layers","flexWrap","wrapMargin","layer","legend","key","includes","DrawerButton","faPlusSquare","faMinusSquare","AliveStatusWait","position","bottom","left","centerAlign","usCovidDataSlice","totals","casesByCounty","badRecords","load","addBoundaries","addBoundary","boundary","properties","FEATURE_ID","county","NAME","STATE","insertStatus","entries","forEach","statusArray","appendStatus","appendBadRecords","setTotals","apiServerStatusSlice","aliveCheck","pending","complete","object","aliveCheckPending","aliveCheckPassed","aliveCheckFailed","usCasesByCountySlice","requestPending","requestSucceeded","requestFailed","fetchUsCasesByCounty","startIndex","pageSize","reverse","fetch","response","json","fetchUsTotals","fetchUsCovidBoundaries","resolution","fetchAliveCheck","sortCasesByCounty","newStatus","countyId","fips","isNaN","push","mapboxgl","accessToken","centroidState","twoWeeksBefore","twoWeeksPrior","firstCase","hotspot","choroplethState","setFeatureState","featureId","mapSource","sourceLayer","stateFunc","source","MapboxMap","sources","initialized","hoveredFeatures","setHoveredFeatures","mapContainer","getLayer","setLayoutProperty","Map","container","center","zoom","minZoom","on","Promise","all","resolve","reject","loadImage","image","addImage","addSource","detectLoadedSources","reduce","loaded","isSourceLoaded","off","removeLayer","addLayer","twoWeeksAgo","selectFeature","theMap","selected","selectNewFeature","onMouseUp","e","theFeature","features","find","feature","onMouseMove","newArray","length","concat","onMouseLeave","FullscreenMap","type","url","promoteId","faSkullCrossbones","paint","faHeadSideCough","faViruses","layout","faVirus","minzoom","App","aliveStatus","apiServerStatus","usCovidData","setActiveLayers","showAbout","setShowAbout","show","layerId","currentState","filter","item","done","aliveResponse","ok","totalsPromise","boundaries","boundaryStates","usCasesByCountyStatus","NaN","newDate","Boolean","location","hostname","match","combineReducers","store","preloadedState","storeConfig","reducer","rootReducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","enhancers","configureStore","configureAppStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7c530c05.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Link = styled.a`\n  color: ${(props) => props.color};\n  text-decoration: none;\n\n  &:visited {\n    color: ${(props) => props.color};\n  }\n\n  &:hover {\n    color: cyan;\n  }\n\n  &:active {\n    color: #1790a7;\n  }\n\n  &:focus {\n    color: cyan;\n  }\n`;\n\nLink.defaultProps = {\n  color: '#38c9e4',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flexbox, Spacer, Text, Button } from 'kvl-ui';\n\nimport { Link } from '../presentation/Link';\n\nexport const About = ({ onHide }) => (\n  <Flexbox\n    flexDirection=\"column\"\n    backgroundColor=\"#444\"\n    color=\"#eee\"\n    padding=\"1em\"\n    maxWidth=\"80ch\"\n    margin=\"1em\"\n  >\n    <Text fontSize=\"heading\">About this visualization</Text>\n    <Spacer height=\"0.5em\" />\n    <Text>\n      COVID-19 cases and deaths are displayed as blue and red choropleths as\n      reported by the New York Times. Onset, the date of the first case in each\n      county are represented by green icons. Hotspots are displays as red icons.\n      The geographic visuals are rendered with MapBox. The charts are built with\n      D3.\n    </Text>\n    <Spacer height=\"1em\" />\n    <Text fontSize=\"label\">Statistics explained</Text>\n    <Spacer height=\"0.2em\" />\n    <Text>\n      Hotspots are those counties that have at least 100 cases and in which\n      total cases have increased 20% in the past two weeks.\n    </Text>\n    <Spacer height=\"0.3em\" />\n    <Text>\n      New cases are those reported on most recent day for the county, typically\n      yesterday.\n    </Text>\n    <Spacer height=\"0.3em\" />\n    <Text>\n      Ongoing cases is an estimate represented by cases reported within the past\n      two weeks.\n    </Text>\n    <Spacer height=\"0.3em\" />\n    <Text>\n      Death rate compares the current number of deaths to the total number of\n      cases two weeks prior.\n    </Text>\n    <Spacer height=\"1em\" />\n    <Text fontSize=\"label\">Data sources</Text>\n    <Spacer height=\"0.5em\" />\n    <Text>US 2010 census county boundaries</Text>\n    <Link href=\"https://eric.clst.org/tech/usgeojson/\">\n      <Text fontSize=\"detail\">https://eric.clst.org/tech/usgeojson/</Text>\n    </Link>\n    <Spacer height=\"0.5em\" />\n    <Text>New York Times COVID-19 US county-level historic data</Text>\n    <Link href=\"https://github.com/nytimes/covid-19-data\">\n      <Text fontSize=\"detail\">https://github.com/nytimes/covid-19-data</Text>\n    </Link>\n    <Spacer height=\"0.5em\" />\n    <Text>Source code</Text>\n    <Link href=\"https://github.com/kevinvanleer/covidmap\">\n      <Text fontSize=\"detail\">https://github.com/kevinvanleer/covidmap</Text>\n    </Link>\n    <Link href=\"https://github.com/kevinvanleer/coviddata\">\n      <Text fontSize=\"detail\">https://github.com/kevinvanleer/coviddata</Text>\n    </Link>\n    <Spacer height=\"0.5em\" />\n    <Text fontSize=\"detail\">\n      Assembled by Kevin Van Leer. Feedback welcome at:\n    </Text>\n    <Link href=\"mailto:kevin.vanleer@gmail.com\">kevin.vanleer@gmail.com</Link>\n    <Spacer height=\"1em\" />\n    <Button id=\"covidmap-about-hide-self\" onClick={onHide}>\n      <Text color=\"#eee\">Dismiss</Text>\n    </Button>\n  </Flexbox>\n);\n\nAbout.propTypes = { onHide: PropTypes.func };\n","import styled from 'styled-components';\nimport { Flexbox } from 'kvl-ui';\n\nexport const FloatingPanel = styled(Flexbox)`\n  position: absolute;\n`;\n\nFloatingPanel.defaultProps = {\n  zIndex: 10,\n  flexDirection: 'column',\n  backgroundColor: '#444',\n  color: '#eee',\n  padding: '1em',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { SquareButton } from 'kvl-ui';\n\nexport const ToggleButton = ({ id, onClick, icon, active }) => (\n  <SquareButton\n    id={id}\n    onClick={onClick}\n    backgroundColor={active ? '#777' : '#333'}\n  >\n    <FontAwesomeIcon icon={icon} color={active ? '#eee' : '#777'} fixedWidth />\n  </SquareButton>\n);\n\nToggleButton.propTypes = {\n  id: PropTypes.string,\n  onClick: PropTypes.func,\n  icon: PropTypes.object,\n  active: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nexport const LoadingIndicator = styled.div`\n  transform-origin: bottom left;\n  ${({ progress }) =>\n    progress === 0\n      ? `animation: pulse 2s ease infinite;`\n      : `transform: scale(${1 - progress});\n        transition: transform 1s ease-in-out;`}\n\n  @keyframes pulse {\n    0%,\n    100% {\n      transform: scale(1);\n    }\n    25% {\n      transform: scale(1.02);\n    }\n    75% {\n      transform: scale(0.98);\n    }\n  }\n`;\n","export const loadingStatus = {\n  pending: 'LOADING_PENDING',\n  loading: 'LOADING_LOADING',\n  complete: 'LOADING_COMPLETE',\n};\n\nexport const loadStatusDefaults = {\n  status: null,\n  success: null,\n  error: null,\n  result: null,\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faInfoCircle,\n  faLayerGroup,\n  faChartBar,\n} from '@fortawesome/free-solid-svg-icons';\nimport { Flexbox, Spacer, Text, SquareButton, Divider } from 'kvl-ui';\nimport { Details, Layers, DateSelector, DrawerButton } from '.';\nimport { FloatingPanel } from '../presentation/FloatingPanel';\nimport { ToggleButton } from '../presentation/ToggleButton';\nimport { LoadingIndicator } from '../presentation/LoadingIndicator';\nimport { loadingStatus } from '../../state/util/loadingStatus.js';\n\nexport const ControlPanel = ({\n  layers,\n  activeLayers,\n  updateActiveLayers,\n  detailsData,\n  onShowAbout,\n  onSetDate,\n  date,\n}) => {\n  const [collapsed, setCollapsed] = useState(false);\n  const [hideLayers, setHideLayers] = useState(false);\n  const [hideDetails, setHideDetails] = useState(false);\n  const mapLoading = useSelector(\n    (state) => state.ui.map.mapLoadStatus.status !== loadingStatus.complete\n  );\n  const sourcesLoading = useSelector(\n    (state) => state.ui.map.sourcesLoadStatus.status !== loadingStatus.complete\n  );\n  const dataProgress = useSelector(\n    (state) => state.request.usCasesByCounty.progress\n  );\n\n  let loadingMessage = null;\n  let progress = sourcesLoading || mapLoading ? 0 : dataProgress;\n  if (dataProgress < 1) loadingMessage = 'Downloading pandemic statistics...';\n  if (dataProgress === 0) loadingMessage = 'Requesting pandemic statistics...';\n  if (sourcesLoading) loadingMessage = 'Downloading boundary tiles...';\n  if (mapLoading) loadingMessage = 'Initializing base map...';\n\n  return (\n    <FloatingPanel\n      width=\"min-content\"\n      right=\"1em\"\n      top=\"1em\"\n      backgroundColor=\"rgba(68,68,68,0.85)\"\n      zIndex={100}\n    >\n      <Flexbox alignItems=\"center\">\n        <Text nowrap fontSize=\"heading\">\n          COVID-19\n        </Text>\n        <Spacer width=\"1em\" flexGrow={1} />\n        <Flexbox marginBetween=\"0.2em\" alignItems=\"center\">\n          <ToggleButton\n            id=\"button-covidmap-control-panel-hide-layers\"\n            flexGrow={0}\n            onClick={() => setHideLayers(!hideLayers)}\n            icon={faLayerGroup}\n            active={!hideLayers}\n            backgroundColor=\"#777\"\n          />\n          <ToggleButton\n            id=\"button-covidmap-control-panel-hide-details\"\n            flexGrow={0}\n            onClick={() => setHideDetails(!hideDetails)}\n            icon={faChartBar}\n            active={!hideDetails}\n            backgroundColor=\"#777\"\n          />\n          <DrawerButton\n            id=\"button-covidmap-control-panel-collapse\"\n            flexGrow={0}\n            color=\"white\"\n            onClick={() => setCollapsed(!collapsed)}\n            collapsed={collapsed}\n            backgroundColor=\"#777\"\n          />\n        </Flexbox>\n      </Flexbox>\n      <Divider horizontal margin=\"0.5em 0\" />\n      {!hideLayers ? (\n        <>\n          <Layers\n            layers={layers}\n            activeLayers={activeLayers}\n            updateActiveLayers={updateActiveLayers}\n            collapsed={collapsed}\n          />\n          <Divider horizontal margin=\"1em 0 0.5em 0\" />\n        </>\n      ) : null}\n      {!hideDetails ? (\n        <Details\n          date={moment(date)}\n          entity={detailsData}\n          collapsed={collapsed}\n        />\n      ) : null}\n      <DateSelector date={date} setDate={onSetDate} withChart={!hideDetails} />\n      <Flexbox alignItems=\"flex-end\">\n        <LoadingIndicator progress={progress}>\n          {loadingMessage}\n        </LoadingIndicator>\n        <Spacer flexGrow={1} />\n        {!collapsed ? (\n          <>\n            <Spacer height=\"1em\" />\n            <SquareButton\n              id=\"covidmap-show-about-box\"\n              onClick={onShowAbout}\n              backgroundColor=\"#777\"\n            >\n              <FontAwesomeIcon color=\"#eee\" icon={faInfoCircle} />\n            </SquareButton>\n          </>\n        ) : null}\n      </Flexbox>\n    </FloatingPanel>\n  );\n};\n\nControlPanel.propTypes = {\n  layers: PropTypes.array,\n  activeLayers: PropTypes.array,\n  updateActiveLayers: PropTypes.func,\n  detailsData: PropTypes.object,\n  onShowAbout: PropTypes.func,\n  onSetDate: PropTypes.func,\n  date: PropTypes.object,\n};\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport moment from 'moment';\n\nconst updateCurrentTime = createAsyncThunk(\n  'time/updateCurrentTime',\n  ({ timestamp, previous }, { dispatch, getState }) => {\n    const state = getState();\n    const time = state.core.time;\n    let delay = 100;\n    if (!time.pause) {\n      delay = 0;\n      if (!previous) {\n        previous = timestamp;\n      }\n      dispatch(tick(timestamp - previous));\n    }\n\n    window.requestAnimationFrame((next) =>\n      setTimeout(() => dispatch(updateCurrentTime(next, timestamp)), delay)\n    );\n  }\n);\n\nexport const start = createAsyncThunk('time/startPlayback', ({ dispatch }) =>\n  window.requestAnimationFrame((timestamp) =>\n    dispatch(updateCurrentTime(timestamp))\n  )\n);\n\nconst timeSlice = createSlice({\n  name: 'time',\n  initialState: {\n    min: parseInt(moment('2020-01-01').format('x')),\n    max: parseInt(moment().subtract(1, 'days').format('x')),\n    current: parseInt(moment().subtract(1, 'days').format('x')),\n    pause: true,\n    rate: 0,\n  },\n  reducers: {\n    setCurrent: (state, action) => {\n      state.current = parseInt(action.payload);\n    },\n    tick: (state, action) => {\n      let newTime;\n      if (state.current >= state.max) {\n        newTime = state.min;\n      } else {\n        newTime = state.current + action.payload * state.rate;\n        if (newTime > state.max) {\n          newTime = state.max;\n          //delay = 1000;\n        }\n      }\n      state.current = newTime;\n    },\n    togglePlayPause: (state, action) => {\n      state.pause = !state.pause;\n      state.rate = state.pause ? 0 : 864000;\n    },\n    setMax: (state, action) => {\n      state.max = action.payload;\n    },\n    setMin: (state, action) => {\n      state.min = action.payload;\n    },\n    setRate: (state, action) => {\n      state.rate = action.payload;\n    },\n    setPause: (state, action) => {\n      state.pause = action.pause;\n    },\n  },\n});\n\nexport const {\n  setCurrent,\n  tick,\n  setMax,\n  setMin,\n  setRate,\n  setPause,\n  togglePlayPause,\n} = timeSlice.actions;\nexport default timeSlice.reducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Slider from 'rc-slider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons';\nimport 'rc-slider/assets/index.css';\n\nimport { Text, Flexbox, SquareButton, Spacer } from 'kvl-ui';\nimport { togglePlayPause } from '../../state/core/time.js';\n\nexport const DateSelector = ({ date, setDate, withChart }) => {\n  const dispatch = useDispatch();\n  const timeState = useSelector((state) => state.core.time);\n  return (\n    <Flexbox margin={withChart ? '0 0 0 30px' : '0'} flexDirection=\"column\">\n      <Slider\n        min={timeState.min}\n        max={timeState.max}\n        onChange={(value) => {\n          setDate(value);\n        }}\n        value={timeState.current}\n      />\n      <Flexbox>\n        <SquareButton\n          id=\"button-legend-play-pause\"\n          onClick={() => dispatch(togglePlayPause())}\n          backgroundColor=\"#777\"\n        >\n          <FontAwesomeIcon\n            color=\"#eee\"\n            icon={timeState.rate === 0 ? faPlay : faPause}\n          />\n        </SquareButton>\n        <Spacer flexGrow={1} />\n        <Text>{moment(timeState.current, 'x').format('YYYY-MM-DD')}</Text>\n      </Flexbox>\n    </Flexbox>\n  );\n};\n\nDateSelector.propTypes = {\n  date: PropTypes.object,\n  setDate: PropTypes.func,\n  withChart: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport { Text } from 'kvl-ui';\n\nexport const Stats = ({\n  collapsed,\n  entity,\n  deathRate,\n  recentData,\n  newCases,\n  ongoingCases,\n}) => {\n  return !collapsed ? (\n    <>\n      <Text>{`Total cases: ${new Intl.NumberFormat('en-US').format(\n        get(recentData, 'cases', 0)\n      )}`}</Text>\n      <Text>{`Total deaths: ${new Intl.NumberFormat('en-US').format(\n        get(recentData, 'deaths', 0)\n      )}`}</Text>\n      <Text>{`New cases: ${new Intl.NumberFormat('en-US').format(\n        newCases\n      )}`}</Text>\n      <Text>{`Ongoing cases: ${new Intl.NumberFormat('en-US').format(\n        ongoingCases\n      )}`}</Text>\n      <Text>{`Death rate: ${(deathRate.twoWeek * 100).toFixed()}%`}</Text>\n    </>\n  ) : null;\n};\n\nStats.propTypes = {\n  collapsed: PropTypes.bool,\n  entity: PropTypes.object,\n  deathRate: PropTypes.object,\n  recentData: PropTypes.object,\n  newCases: PropTypes.number,\n  ongoingCases: PropTypes.number,\n};\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { last, get, isEmpty } from 'lodash';\n\nconst AreaChart = ({\n  height,\n  data,\n  currentDate,\n  currentValue,\n  showIntercept,\n}) => {\n  const d3svg = useRef(null);\n  const width = 300;\n\n  const yTicks = height * (7 / 200);\n\n  const casesData = Object.assign(\n    data.slice(1).map(({ date, cases, deaths }) => ({\n      date: moment(date),\n      cases: cases,\n      deaths: deaths,\n    })),\n    { y: 'Cases' }\n  );\n\n  useEffect(() => {\n    const margin = { top: 20, right: 0, bottom: 30, left: 30 };\n    if (data && d3svg.current) {\n      let svg = d3.select(d3svg.current);\n      svg.selectAll('*').remove();\n      let x = d3\n        .scaleTime()\n        //.domain(d3.extent(casesData, (d) => d.date))\n        .domain([\n          moment('2020-01-01', 'YYYY-MM-DD'),\n          moment().subtract(1, 'days'),\n        ])\n        .range([margin.left, width - margin.right]);\n\n      let yc = d3\n        .scaleLinear()\n        .domain([0, Math.max(get(last(casesData), 'cases', 0), 10)])\n        .nice()\n        .range([height - margin.bottom, margin.top]);\n\n      /*\n      let ym = d3\n        .scaleLinear()\n        .domain([0, last(mortalityData).value])\n        .nice()\n        .range([height - margin.bottom, margin.top]);\n        */\n\n      let xAxis = (g) =>\n        g\n          .attr('transform', `translate(0,${height - margin.bottom})`)\n          .call(\n            d3\n              .axisBottom(x)\n              .ticks(5)\n              .tickFormat(d3.timeFormat('%b'))\n              .tickSizeOuter(0)\n          );\n\n      let ycAxis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .call(d3.axisLeft(yc).ticks(yTicks, 's'))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .select('.tick:last-of-type text')\n              .clone()\n              .attr('x', 3)\n              .attr('text-anchor', 'start')\n              .attr('font-weight', 'bold')\n              .text(casesData.y)\n          );\n      /*\n      let ymAxis = (g) =>\n        g\n          .attr('transform', `translate(${width - margin.right},0)`)\n          .call(d3.axisRight(ym))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .select('.tick:last-of-type text')\n              .clone()\n              .attr('x', 3)\n              .attr('text-anchor', 'start')\n              .attr('font-weight', 'bold')\n              .text(mortalityData.y)\n          );\n          */\n\n      let curve = d3.curveStep;\n      let areaC = d3\n        .area()\n        .curve(curve)\n        .x((d) => x(d.date))\n        .y0(yc(0))\n        .y1((d) => yc(d.cases));\n      let areaM = d3\n        .area()\n        .curve(curve)\n        .x((d) => x(d.date))\n        .y0(yc(0))\n        .y1((d) => yc(d.deaths));\n\n      svg\n        .append('path')\n        .datum(casesData)\n        .attr('fill', 'steelblue')\n        .attr('d', areaC);\n      svg.append('path').datum(casesData).attr('fill', 'red').attr('d', areaM);\n      svg.append('g').call(xAxis);\n      svg.append('g').call(ycAxis);\n      //svg.append('g').call(ymAxis);\n\n      const radius = 2;\n      const markerColor = '#ccc';\n      if (!isEmpty(data)) {\n        svg\n          .append('line')\n          .attr('x1', x(currentDate))\n          .attr('x2', x(currentDate))\n          .attr('y1', height - margin.bottom)\n          .attr('y2', yc(currentValue) + radius)\n          .style('stroke-width', 1)\n          .style('stroke', markerColor)\n          .style('fill', 'none');\n        svg\n          .append('circle')\n          .attr('cx', x(currentDate))\n          .attr('cy', yc(currentValue))\n          .attr('r', radius)\n          .style('stroke-width', 1)\n          .style('stroke', markerColor)\n          .style('fill', 'none');\n      }\n\n      if (showIntercept && casesData[0]) {\n        svg\n          .append('line')\n          .attr('x1', x(casesData[0].date))\n          .attr('x2', x(casesData[0].date))\n          .attr('y1', height - margin.bottom)\n          .attr('y2', height / 2)\n          .style('stroke-width', 1)\n          .style('stroke', markerColor)\n          .style('fill', 'none');\n        svg\n          .append('text')\n          .attr('x', x(casesData[0].date))\n          .attr('y', height / 2 - 5)\n          .text(casesData[0].date.format('MMM D'))\n          .attr('text-anchor', 'middle')\n          .attr('font-family', 'sans-serif')\n          .attr('font-size', '10px')\n          .attr('fill', '#eee');\n      }\n      if (isEmpty(data)) {\n        svg\n          .append('text')\n          .attr('x', width / 2)\n          .attr('y', height / 2)\n          .text('No data')\n          .attr('text-anchor', 'middle')\n          .attr('font-family', 'sans-serif')\n          .attr('font-size', '20px')\n          .attr('fill', '#eee');\n      }\n    }\n  }, [\n    data,\n    casesData,\n    height,\n    yTicks,\n    currentDate,\n    currentValue,\n    showIntercept,\n  ]);\n\n  return (\n    <svg\n      className=\"area-chart-container\"\n      width={width}\n      height={height}\n      role=\"img\"\n      ref={d3svg}\n      pointerEvents=\"none\"\n    ></svg>\n  );\n};\n\nAreaChart.propTypes = {\n  height: PropTypes.number,\n  data: PropTypes.array,\n  currentDate: PropTypes.object,\n  currentValue: PropTypes.number,\n  showIntercept: PropTypes.bool,\n};\n\nAreaChart.defaultProps = {\n  height: 200,\n  data: [],\n  currentValue: 0,\n};\n\nexport default AreaChart;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { loadingStatus, loadStatusDefaults } from '../util/loadingStatus.js';\n\nconst mapSlice = createSlice({\n  name: 'map',\n  initialState: {\n    hold: false,\n    selectedFeature: null,\n    mapLoadStatus: { ...loadStatusDefaults },\n    sourcesLoadStatus: { ...loadStatusDefaults },\n    layersLoadStatus: { ...loadStatusDefaults },\n    map: null,\n  },\n  reducers: {\n    hold: (state) => {\n      state.hold = true;\n    },\n    releaseHold: (state) => {\n      state.hold = false;\n    },\n    setHold: (state, action) => {\n      state.hold = action.payload;\n    },\n    setSelectedFeature: (state, action) => {\n      state.selectedFeature = action.payload;\n    },\n    beginMapInitialization: (state) => {\n      state.mapLoadStatus.status = loadingStatus.pending;\n      state.sourcesLoadStatus.status = loadingStatus.pending;\n      state.layersLoadStatus.status = loadingStatus.pending;\n    },\n    beginLoadingMap: (state, action) => {\n      state.map = action.payload;\n      state.mapLoadStatus.status = loadingStatus.loading;\n    },\n    mapFinishedLoading: (state) => {\n      state.mapLoadStatus.status = loadingStatus.complete;\n    },\n    beginLoadingSources: (state) => {\n      state.sourcesLoadStatus.status = loadingStatus.loading;\n    },\n    sourcesFinishedLoading: (state) => {\n      state.sourcesLoadStatus.status = loadingStatus.complete;\n    },\n    beginLoadingLayers: (state) => {\n      state.layersLoadStatus.status = loadingStatus.loading;\n    },\n    layersFinishedLoading: (state) => {\n      state.layersLoadStatus.status = loadingStatus.complete;\n    },\n  },\n});\n\nexport const {\n  setHold,\n  hold,\n  releaseHold,\n  setSelectedFeature,\n  beginMapInitialization,\n  beginLoadingMap,\n  mapFinishedLoading,\n  beginLoadingSources,\n  sourcesFinishedLoading,\n  beingLoadingLayers,\n  layersFinishedLoading,\n} = mapSlice.actions;\nexport default mapSlice.reducer;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { get, findLast, set, isEmpty } from 'lodash';\nimport { Flexbox, Spacer, Text, SquareButton } from 'kvl-ui';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlagUsa } from '@fortawesome/free-solid-svg-icons';\n\nimport { Stats } from './Stats.js';\nimport AreaChart from '../core/d3AreaChart.js';\n\nimport { releaseHold, setSelectedFeature } from '../../state/ui/map.js';\n\nexport const Details = ({ date, entity, collapsed }) => {\n  const dispatch = useDispatch();\n  const selectedFeature = useSelector((state) => state.ui.map.selectedFeature);\n  const data = entity.data;\n  let recentData = null;\n  let deathRate = {};\n  let newCases = 0;\n  let ongoingCases = 0;\n\n  if (!isEmpty(data)) {\n    recentData = findLast(\n      data,\n      (status) => status.date <= date.format('YYYY-MM-DD')\n    ) || { deaths: 0, cases: 0 };\n    const yesterday = findLast(\n      data,\n      (status) =>\n        status.date <= moment(date).subtract(1, 'days').format('YYYY-MM-DD')\n    );\n    const twoWeekLagData = findLast(\n      data,\n      (status) =>\n        status.date <= moment(date).subtract(2, 'weeks').format('YYYY-MM-DD')\n    );\n    const fourWeekLagData = findLast(\n      data,\n      (status) =>\n        status.date <= moment(date).subtract(4, 'weeks').format('YYYY-MM-DD')\n    );\n    const eightWeekLagData = findLast(\n      data,\n      (status) =>\n        status.date <= moment(date).subtract(8, 'weeks').format('YYYY-MM-DD')\n    );\n    set(deathRate, 'current', recentData.deaths / recentData.cases);\n    set(\n      deathRate,\n      'twoWeek',\n      recentData.deaths / get(twoWeekLagData, 'cases') || 0\n    );\n    set(\n      deathRate,\n      'fourWeek',\n      recentData.deaths / get(fourWeekLagData, 'cases') || 0\n    );\n    set(\n      deathRate,\n      'eightWeek',\n      recentData.deaths / get(eightWeekLagData, 'cases') || 0\n    );\n    newCases = get(recentData, 'cases', 0) - get(yesterday, 'cases', 0);\n    ongoingCases =\n      get(recentData, 'cases', 0) - get(twoWeekLagData, 'cases', 0);\n  } else {\n    recentData = {\n      date: '2020-01-01',\n      cases: 0,\n      deaths: 0,\n    };\n    deathRate = {\n      current: 0,\n      twoWeek: 0,\n      fourWeek: 0,\n      eightWeek: 0,\n    };\n  }\n\n  const closeStats = useCallback(() => {\n    dispatch(releaseHold());\n    dispatch(setSelectedFeature(null));\n  }, [dispatch]);\n\n  return recentData ? (\n    <Flexbox flexDirection=\"column\">\n      <Flexbox inline>\n        <Flexbox flexDirection=\"column\">\n          <Text bold fontSize=\"label\">\n            {entity.displayName}\n          </Text>\n          <Text fontSize=\"detail\">{`reporting on ${recentData.date}`}</Text>\n          <Spacer height=\"0.5em\" />\n          <Stats\n            deathRate={deathRate}\n            collapsed={collapsed}\n            entity={entity}\n            recentData={recentData}\n            newCases={newCases}\n            ongoingCases={ongoingCases}\n          />\n        </Flexbox>\n        <Spacer flexGrow={1} />\n        {selectedFeature != null ? (\n          <SquareButton\n            id=\"covid19-button-close-stats\"\n            onClick={closeStats}\n            backgroundColor=\"#777\"\n          >\n            <FontAwesomeIcon color=\"#eee\" icon={faFlagUsa} fixedWidth />\n          </SquareButton>\n        ) : null}\n      </Flexbox>\n      <AreaChart\n        data={data}\n        currentDate={date}\n        height={collapsed ? 100 : undefined}\n        currentValue={parseInt(get(recentData, 'cases', 0))}\n        showIntercept={true}\n      />\n    </Flexbox>\n  ) : null;\n};\n\nDetails.propTypes = {\n  date: PropTypes.object,\n  entity: PropTypes.object,\n  collapsed: PropTypes.bool,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Flexbox, Spacer, Text, SquareButton } from 'kvl-ui';\n\nexport const LayerItem = styled(\n  ({ className, onClick, config, active, collapsed }) => (\n    <Flexbox alignItems=\"center\" onClick={onClick}>\n      <SquareButton\n        id={`covidmap-button-layer-item-${config.label.toLowerCase()}`}\n        onClick={onClick}\n        backgroundColor={active ? '#777' : '#333'}\n      >\n        <FontAwesomeIcon\n          size={collapsed ? 'sm' : 'lg'}\n          icon={config.icon}\n          color={active ? '#eee' : '#777'}\n          fixedWidth\n        />\n      </SquareButton>\n      {!collapsed ? (\n        <>\n          <Spacer width=\"0.5em\" />\n          <Text fontSize=\"label\" bold={active} className={className}>\n            {config.label}\n          </Text>\n        </>\n      ) : null}\n    </Flexbox>\n  )\n)`\n  cursor: pointer;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flexbox, Text, Spacer } from 'kvl-ui';\n\nimport { LayerItem } from '../presentation/LayerItem.js';\n\nexport const Layers = ({\n  layers,\n  activeLayers,\n  updateActiveLayers,\n  collapsed,\n}) => (\n  <Flexbox flexDirection=\"column\">\n    {!collapsed ? (\n      <>\n        <Text bold fontSize=\"label\">\n          Layers\n        </Text>\n        <Spacer height=\"0.5em\" />\n      </>\n    ) : null}\n    <Flexbox flexWrap=\"wrap\" wrapMargin=\"0.5em\">\n      {layers.map((layer) =>\n        layer.legend === undefined ? null : (\n          <LayerItem\n            key={layer.id}\n            onClick={() => updateActiveLayers(layer.id)}\n            config={layer.legend}\n            active={activeLayers.includes(layer.id)}\n            collapsed={collapsed}\n          />\n        )\n      )}\n    </Flexbox>\n  </Flexbox>\n);\n\nLayers.propTypes = {\n  layers: PropTypes.array,\n  activeLayers: PropTypes.array,\n  updateActiveLayers: PropTypes.func,\n  collapsed: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { SquareButton } from 'kvl-ui';\n\nexport const DrawerButton = ({ collapsed, ...props }) => (\n  <SquareButton {...props}>\n    <FontAwesomeIcon\n      color=\"#eee\"\n      icon={collapsed ? faPlusSquare : faMinusSquare}\n      fixedWidth\n    />\n  </SquareButton>\n);\n\nDrawerButton.propTypes = {\n  collapsed: PropTypes.bool,\n  setCollapsed: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flexbox, Text } from 'kvl-ui';\n\nexport const AliveStatusWait = ({ status }) => (\n  <Flexbox\n    backgroundColor=\"#222\"\n    position=\"absolute\"\n    top=\"0\"\n    bottom=\"0\"\n    left=\"0\"\n    right=\"0\"\n  >\n    <Text\n      position=\"absolute\"\n      margin=\"0 auto\"\n      top=\"50%\"\n      zIndex={100}\n      width=\"100%\"\n      centerAlign\n      fontSize=\"title\"\n      color=\"#eee\"\n    >\n      {status.error\n        ? `API server failed to respond`\n        : `Waiting for API server to wake up...`}\n    </Text>\n  </Flexbox>\n);\n\nAliveStatusWait.propTypes = {\n  status: PropTypes.object,\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst usCovidDataSlice = createSlice({\n  name: 'usCovidData',\n  initialState: { totals: [], casesByCounty: {}, badRecords: [] },\n  reducers: {\n    load: (state, action) => {\n      state.casesByCounty = action.payload;\n    },\n    addBoundaries: (state, action) => {\n      state.casesByCounty = { ...state.casesByCounty, ...action.payload };\n    },\n    addBoundary: (state, action) => {\n      const boundary = action.payload;\n      state.casesByCounty[parseInt(boundary.properties.FEATURE_ID)] = [\n        {\n          date: '2020-01-01',\n          cases: 0,\n          deaths: 0,\n          county: boundary.properties.NAME,\n          state: boundary.properties.STATE,\n        },\n      ];\n    },\n    insertStatus: (state, action) => {\n      Object.entries(action.payload).forEach(([id, statusArray]) => {\n        if (id in state.casesByCounty) {\n          state.casesByCounty[id] = [\n            state.casesByCounty[id][0],\n            ...statusArray,\n            ...state.casesByCounty[id].slice(1),\n          ];\n        } else {\n          state.casesByCounty[id] = statusArray;\n        }\n      });\n    },\n    appendStatus: (state, action) => {\n      Object.entries(action.payload).forEach(([id, statusArray]) => {\n        if (id in state.casesByCounty) {\n          state.casesByCounty[id] = [\n            ...state.casesByCounty[id],\n            ...statusArray,\n          ];\n        } else {\n          state.casesByCounty[id] = statusArray;\n        }\n      });\n    },\n    appendBadRecords: (state, action) => {\n      state.badRecords = action.payload;\n    },\n    setTotals: (state, action) => {\n      state.totals = action.payload.data;\n    },\n  },\n});\n\nexport const {\n  load,\n  appendStatus,\n  insertStatus,\n  appendBadRecords,\n  addBoundary,\n  addBoundaries,\n  setTotals,\n} = usCovidDataSlice.actions;\nexport default usCovidDataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst apiServerStatusSlice = createSlice({\n  name: 'apiServerStatus',\n  initialState: {\n    aliveCheck: {\n      pending: null,\n      error: null,\n      complete: null,\n      success: null,\n      result: null,\n      object: null,\n    },\n  },\n  reducers: {\n    aliveCheckPending: (state) => {\n      state.aliveCheck = {\n        pending: true,\n        error: null,\n        complete: false,\n        success: null,\n        result: null,\n        object: null,\n      };\n    },\n    aliveCheckPassed: (state, action) => {\n      state.aliveCheck = {\n        pending: false,\n        error: false,\n        complete: true,\n        success: true,\n        result: action.payload,\n        object: null,\n      };\n    },\n    aliveCheckFailed: (state, action) => {\n      state.aliveCheck = {\n        pending: false,\n        error: true,\n        complete: true,\n        success: false,\n        result: action.payload,\n        object: null,\n      };\n    },\n  },\n});\n\nexport const {\n  aliveCheckPending,\n  aliveCheckPassed,\n  aliveCheckFailed,\n} = apiServerStatusSlice.actions;\nexport default apiServerStatusSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst usCasesByCountySlice = createSlice({\n  name: 'usCasesByCounty',\n  initialState: {\n    pending: null,\n    error: null,\n    complete: null,\n    success: null,\n    result: null,\n    object: null,\n    progress: null,\n  },\n  reducers: {\n    requestPending: (state, action) => {\n      state.pending = true;\n      state.error = null;\n      state.complete = false;\n      state.success = null;\n      state.result = null;\n      state.object = null;\n      state.progress = action.payload || 0;\n    },\n    requestSucceeded: (state, action) => {\n      state.pending = false;\n      state.error = false;\n      state.complete = true;\n      state.success = true;\n      state.result = action.payload;\n      state.object = null;\n      state.progress = 1;\n    },\n    requestFailed: (state, action) => {\n      state.pending = false;\n      state.error = true;\n      state.complete = true;\n      state.success = false;\n      state.result = action.payload;\n      state.object = null;\n      state.progress = null;\n    },\n  },\n});\n\nexport const {\n  requestPending,\n  requestSucceeded,\n  requestFailed,\n} = usCasesByCountySlice.actions;\n\nexport default usCasesByCountySlice.reducer;\n","import { get } from 'lodash';\nimport {\n  addBoundaries,\n  insertStatus,\n  appendBadRecords,\n  setTotals,\n} from '../state/core/usCovidData.js';\nimport {\n  aliveCheckPending,\n  aliveCheckPassed,\n  aliveCheckFailed,\n} from '../state/core/apiServerStatus.js';\n\nimport * as usCasesByCountyStatus from '../state/request/usCasesByCounty.js';\n\nexport const fetchUsCasesByCounty = async (startIndex, pageSize, reverse) => {\n  const response = await fetch(\n    `/api/us-cases-by-county?startIndex=${startIndex}&pageSize=${pageSize}&reverse=${reverse}`\n  );\n  return response.json();\n};\n\nexport const fetchUsTotals = async () => {\n  const response = await fetch(`/api/us-totals`);\n  return response.json();\n};\n\nexport const fetchUsCovidBoundaries = async (resolution) => {\n  const response = await fetch(`/api/us-counties?resolution=${resolution}`);\n  return response.json();\n};\n\nexport const fetchAliveCheck = async () => {\n  return fetch(`/api/alive`);\n};\n\nconst sortCasesByCounty = (newCases) => async (dispatch) => {\n  let badRecords = [];\n  let newStatus = {};\n\n  newCases.forEach((status) => {\n    const countyId = parseInt(status.fips);\n\n    if (isNaN(countyId)) {\n      badRecords.push(status);\n    } else {\n      const countyId = parseInt(status.fips);\n\n      if (countyId in newStatus) {\n        newStatus[countyId].push({\n          date: status.date,\n          cases: status.cases,\n          deaths: status.deaths,\n          county: status.county,\n          state: status.state,\n        });\n      } else {\n        newStatus[countyId] = [\n          {\n            date: status.date,\n            cases: status.cases,\n            deaths: status.deaths,\n            county: status.county,\n            state: status.state,\n          },\n        ];\n      }\n    }\n  });\n\n  dispatch(insertStatus(newStatus));\n  dispatch(appendBadRecords(badRecords));\n};\n\nexport const initializeFeatureState = () => async (dispatch) => {\n  let done = false;\n  let startIndex = 0;\n  let pageSize = 1000;\n\n  dispatch(aliveCheckPending());\n  try {\n    const aliveResponse = await fetchAliveCheck();\n    if (aliveResponse.ok) {\n      dispatch(aliveCheckPassed(await aliveResponse.text()));\n    } else {\n      dispatch(aliveCheckFailed(aliveResponse.error(aliveResponse.error())));\n    }\n  } catch (e) {\n    dispatch(aliveCheckFailed(e));\n  }\n\n  const totalsPromise = fetchUsTotals();\n\n  const boundaries = await fetchUsCovidBoundaries('20m');\n  const boundaryStates = {};\n  boundaries.features.forEach((boundary) => {\n    boundaryStates[parseInt(boundary.properties.FEATURE_ID)] = [\n      {\n        date: '2020-01-01',\n        cases: 0,\n        deaths: 0,\n        county: boundary.properties.NAME,\n        state: boundary.properties.STATE,\n      },\n    ];\n  });\n  dispatch(addBoundaries(boundaryStates));\n  dispatch(setTotals(await totalsPromise));\n\n  try {\n    dispatch(usCasesByCountyStatus.requestPending(0));\n    while (!done) {\n      const newCases = await fetchUsCasesByCounty(startIndex, pageSize, true);\n      const data = newCases.data || newCases;\n      dispatch(sortCasesByCounty(data));\n      done = data.length < pageSize;\n      startIndex += pageSize;\n      pageSize *= 2;\n      if (!done) {\n        dispatch(\n          usCasesByCountyStatus.requestPending(\n            startIndex / get(newCases, 'meta.totalCount', NaN)\n          )\n        );\n      }\n    }\n    dispatch(usCasesByCountyStatus.requestSucceeded());\n  } catch (e) {\n    dispatch(usCasesByCountyStatus.requestFailed(e));\n  }\n};\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport mapboxgl from 'mapbox-gl';\nimport { findLast, get } from 'lodash';\nimport { Flexbox, Text } from 'kvl-ui';\n\nimport {\n  setHold,\n  setSelectedFeature,\n  beginMapInitialization,\n  beginLoadingMap,\n  mapFinishedLoading,\n  beginLoadingSources,\n  sourcesFinishedLoading,\n} from '../../state/ui/map.js';\nimport { loadingStatus } from '../../state/util/loadingStatus.js';\n\nimport { LoadingIndicator } from '../presentation/LoadingIndicator.js';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoicnVva3ZsIiwiYSI6ImNrZDA3NW9oNTBhanYyeXBjOXBjazloazUifQ.qwtn31dojyeKrFMrcRAjBw';\n\nconst centroidState = (twoWeeksBefore) => (state, date) => {\n  const recentData = findLast(state, (status) => status.date <= date);\n  const twoWeeksPrior = findLast(\n    state,\n    (status) => status.date <= twoWeeksBefore\n  );\n  return {\n    firstCase: get(state, [1, 'date']) === date,\n    hotspot:\n      parseInt(get(recentData, 'cases', 0)) /\n        parseInt(get(twoWeeksPrior, 'cases', 0)) >\n        1.2 && parseInt(get(recentData, 'cases', 0)) > 100,\n  };\n};\n\nconst choroplethState = (state, date) => {\n  const recentData = findLast(state, (status) => status.date <= date);\n  return {\n    cases: parseInt(get(recentData, 'cases', 0)),\n    deaths: parseInt(get(recentData, 'deaths', 0)),\n  };\n};\n\nconst setFeatureState = (\n  map,\n  featureId,\n  mapSource,\n  sourceLayer,\n  state,\n  date,\n  stateFunc\n) => {\n  map.setFeatureState(\n    {\n      source: mapSource,\n      sourceLayer: sourceLayer,\n      id: parseInt(featureId),\n    },\n    stateFunc(state, date)\n  );\n};\n\nconst MapboxMap = ({\n  sources,\n  activeLayers,\n  layers,\n  date,\n  casesByCounty,\n  ...props\n}) => {\n  const dispatch = useDispatch();\n  const hold = useSelector((state) => state.ui.map.hold);\n  const selectedFeature = useSelector((state) => state.ui.map.selectedFeature);\n  const map = useSelector((state) => state.ui.map.map);\n  const initialized = useSelector(\n    (state) => state.ui.map.sourcesLoadStatus.status === loadingStatus.complete\n  );\n\n  const [hoveredFeatures, setHoveredFeatures] = useState([]);\n  const mapContainer = useRef(null);\n\n  useEffect(() => {\n    if (map && initialized) {\n      layers.forEach((layer) => {\n        if (map.getLayer(layer.id)) {\n          map.setLayoutProperty(\n            layer.id,\n            'visibility',\n            activeLayers.includes(layer.id) ? 'visible' : 'none'\n          );\n        }\n      });\n    }\n  }, [map, initialized, layers, activeLayers]);\n\n  useEffect(() => {\n    const lat = 39;\n    const lng = -95;\n    const zoom = 3;\n    dispatch(beginMapInitialization());\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [lng, lat],\n      zoom: zoom,\n      minZoom: 3,\n    });\n    dispatch(beginLoadingMap(map));\n  }, []);\n\n  useEffect(() => {\n    if (map) {\n      map.on('load', async () => {\n        dispatch(mapFinishedLoading());\n        dispatch(beginLoadingSources());\n        await Promise.all([\n          new Promise((resolve, reject) =>\n            map.loadImage('/img/coronavirus-green-128.png', (error, image) => {\n              if (error) reject(error);\n              map.addImage('corona-green', image);\n              resolve();\n            })\n          ),\n          new Promise((resolve, reject) =>\n            map.loadImage('/img/coronavirus-red-128.png', (error, image) => {\n              if (error) reject(error);\n              map.addImage('corona-red', image);\n              resolve();\n            })\n          ),\n        ]);\n\n        sources.forEach((source) => map.addSource(source.id, source.config));\n        const detectLoadedSources = () => {\n          const init = sources.reduce(\n            (loaded, source) => loaded && map.isSourceLoaded(source.id),\n            true\n          );\n          if (init) {\n            map.off('sourcedata', detectLoadedSources);\n            dispatch(sourcesFinishedLoading());\n          }\n        };\n        map.on('sourcedata', detectLoadedSources);\n      });\n    }\n  }, [map, sources, layers]);\n\n  useEffect(() => {\n    if (map && initialized) {\n      layers.forEach((layer) => {\n        if (map.getLayer(layer.id)) map.removeLayer(layer.id);\n        map.addLayer(layer);\n      });\n    }\n  }, [layers, map, initialized]);\n\n  useEffect(() => {\n    if (initialized && casesByCounty) {\n      const twoWeeksAgo = moment(date)\n        .subtract(2, 'weeks')\n        .format('YYYY-MM-DD');\n      for (const [key, value] of Object.entries(casesByCounty)) {\n        setFeatureState(\n          map,\n          key,\n          'us-counties',\n          'us-counties-500k-a4l482',\n          value,\n          date,\n          choroplethState\n        );\n        setFeatureState(\n          map,\n          key,\n          'us-county-centroids',\n          undefined,\n          value,\n          date,\n          centroidState(twoWeeksAgo)\n        );\n      }\n    }\n  }, [initialized, date, casesByCounty, map]);\n\n  const selectFeature = useCallback(\n    (theMap, featureId, selected, hold = false) => {\n      if (featureId != null) {\n        theMap.setFeatureState(\n          {\n            source: 'us-counties',\n            sourceLayer: 'us-counties-500k-a4l482',\n            id: featureId,\n          },\n          { active: selected, hold }\n        );\n      }\n    },\n    []\n  );\n\n  const selectNewFeature = useCallback(\n    (theMap, featureId, hold) => {\n      if (featureId !== selectedFeature) {\n        selectFeature(theMap, selectedFeature, false, hold);\n      }\n      if (featureId != null) {\n        selectFeature(theMap, featureId, true, hold);\n      }\n      dispatch(setSelectedFeature(featureId));\n    },\n    [dispatch, selectFeature, selectedFeature]\n  );\n\n  const onMouseUp = useCallback(\n    (e) => {\n      if (map && initialized) {\n        const theFeature = e.features.find(\n          (feature) => feature.layer.id === 'us-counties-base'\n        );\n        if (theFeature.id === undefined) {\n          selectNewFeature(map, null, false);\n          dispatch(setHold(false));\n        } else if (selectedFeature !== theFeature.id) {\n          selectNewFeature(map, parseInt(theFeature.id), true);\n          dispatch(setHold(true));\n        } else {\n          selectNewFeature(map, parseInt(theFeature.id), !hold);\n          dispatch(setHold(!hold));\n        }\n      }\n    },\n    [map, initialized, hold, selectNewFeature, dispatch, selectedFeature]\n  );\n\n  const onMouseMove = useCallback(\n    (e) => {\n      if (map && initialized && !hold) {\n        let removeFeatures = hoveredFeatures.slice(0, -1);\n        removeFeatures.forEach((feature) => selectFeature(map, feature, false));\n        let newArray = [...hoveredFeatures.slice(-1)];\n        setHoveredFeatures(newArray);\n        if (e.features.length > 0) {\n          const theFeature = e.features.find(\n            (feature) => feature.layer.id === 'us-counties-base'\n          );\n          setHoveredFeatures(newArray.concat([parseInt(theFeature.id)]));\n          selectNewFeature(map, parseInt(theFeature.id));\n        }\n      }\n    },\n    [\n      map,\n      initialized,\n      hold,\n      hoveredFeatures,\n      setHoveredFeatures,\n      selectNewFeature,\n      selectFeature,\n    ]\n  );\n\n  const onMouseLeave = useCallback(() => {\n    if (map && initialized && !hold) {\n      selectNewFeature(map, null);\n    }\n  }, [map, initialized, hold, selectNewFeature]);\n\n  useEffect(() => {\n    if (map && initialized) {\n      map.on('mouseup', 'us-counties-base', onMouseUp);\n      map.on('mousemove', 'us-counties-base', onMouseMove);\n      map.on('mouseleave', 'us-counties-base', onMouseLeave);\n    }\n    return () => {\n      if (map && initialized) {\n        map.off('mouseup', 'us-counties-base', onMouseUp);\n        map.off('mousemove', 'us-counties-base', onMouseMove);\n        map.off('mouseleave', 'us-counties-base', onMouseLeave);\n      }\n    };\n  }, [map, initialized, onMouseUp, onMouseMove, onMouseLeave]);\n\n  return <div ref={mapContainer} {...props} />;\n};\n\nMapboxMap.propTypes = {\n  activeLayers: PropTypes.array,\n  sources: PropTypes.array,\n  layers: PropTypes.array,\n  date: PropTypes.string,\n  casesByCounty: PropTypes.object,\n};\n\nexport default MapboxMap;\n","import styled from 'styled-components';\nimport Map from '../core/Map.js';\n\nconst FullscreenMap = styled(Map)`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default FullscreenMap;\n","import {\n  faSkullCrossbones,\n  faVirus,\n  faViruses,\n  faHeadSideCough,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport const sources = [\n  {\n    id: 'us-counties',\n    config: {\n      type: 'vector',\n      url: 'mapbox://ruokvl.0761cl0n',\n      promoteId: 'FEATURE_ID',\n    },\n  },\n  {\n    id: 'us-county-centroids',\n    config: {\n      type: 'geojson',\n      data: '/api/us-county-centroids',\n    },\n  },\n];\nexport const layers = [\n  {\n    legend: {\n      label: 'Deaths',\n      icon: faSkullCrossbones,\n    },\n    id: 'us-county-total-deaths',\n    type: 'fill',\n    source: 'us-counties',\n    'source-layer': 'us-counties-500k-a4l482',\n    paint: {\n      'fill-color': '#f00',\n      'fill-opacity': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'deaths'],\n        0,\n        0,\n        1,\n        0.1,\n        10,\n        0.2,\n        100,\n        0.4,\n        1000,\n        0.7,\n        2000,\n        0.8,\n        10000000,\n        0.8,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Cases',\n      icon: faHeadSideCough,\n    },\n    id: 'us-county-total-cases',\n    type: 'fill',\n    source: 'us-counties',\n    'source-layer': 'us-counties-500k-a4l482',\n    paint: {\n      'fill-color': '#00f',\n      'fill-opacity': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'cases'],\n        0,\n        0,\n        10,\n        0.1,\n        100,\n        0.2,\n        10000,\n        0.4,\n        100000,\n        0.7,\n        200000,\n        0.8,\n        10000000,\n        0.8,\n      ],\n    },\n  },\n  {\n    id: 'us-counties-base',\n    type: 'fill',\n    source: 'us-counties',\n    'source-layer': 'us-counties-500k-a4l482',\n    paint: {\n      'fill-color': 'transparent',\n    },\n  },\n  {\n    id: 'us-counties-outline-base',\n    type: 'line',\n    source: 'us-counties',\n    'source-layer': 'us-counties-500k-a4l482',\n    paint: {\n      'line-color': ['case', ['feature-state', 'hold'], '#0f0', '#e842dc'],\n      'line-width': ['interpolate', ['linear'], ['zoom'], 3, 2, 10, 4],\n      'line-opacity': ['to-number', ['feature-state', 'active']],\n    },\n  },\n  {\n    legend: {\n      label: 'Hotspots',\n      icon: faViruses,\n    },\n    id: 'us-hotspots',\n    type: 'symbol',\n    source: 'us-county-centroids',\n    layout: {\n      'icon-image': 'corona-red',\n      'icon-size': ['interpolate', ['linear'], ['zoom'], 3, 0.1, 20, 1],\n      'icon-ignore-placement': true,\n    },\n    paint: {\n      'icon-opacity': ['to-number', ['feature-state', 'hotspot']],\n      'icon-color': 'red',\n    },\n  },\n  {\n    legend: {\n      label: 'Onset',\n      icon: faVirus,\n    },\n    id: 'us-first-case',\n    type: 'symbol',\n    source: 'us-county-centroids',\n    layout: {\n      'icon-image': 'corona-green',\n      'icon-size': ['interpolate', ['linear'], ['zoom'], 3, 0.3, 20, 1],\n      'icon-ignore-placement': true,\n    },\n    paint: {\n      'icon-opacity': ['to-number', ['feature-state', 'firstCase']],\n      'icon-color': 'red',\n    },\n  },\n  {\n    id: 'us-county-names',\n    type: 'symbol',\n    source: 'us-county-centroids',\n    minzoom: 7,\n    layout: { 'text-field': ['get', 'NAME'], 'text-ignore-placement': true },\n    paint: {\n      'text-halo-color': '#fff',\n      'text-halo-width': 1,\n    },\n  },\n];\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { get, last } from 'lodash';\n\nimport { ControlPanel, About, AliveStatusWait } from './components/structural';\nimport { Flexbox } from 'kvl-ui';\n\nimport { initializeFeatureState } from './workflows/fetchCovidData.js';\n\nimport FullscreenMap from './components/presentation/FullscreenMap.js';\n\nimport { layers, sources } from './mapboxConfig.js';\n\nimport { setCurrent } from './state/core/time.js';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const aliveStatus = useSelector(\n    (state) => state.core.apiServerStatus.aliveCheck\n  );\n  const date = useSelector((state) => moment(state.core.time.current, 'x'));\n  const totals = useSelector((state) => state.core.usCovidData.totals);\n  const selectedFeature = useSelector((state) => state.ui.map.selectedFeature);\n  const casesByCounty = useSelector(\n    (state) => state.core.usCovidData.casesByCounty\n  );\n  const [activeLayers, setActiveLayers] = useState(\n    layers.map((layer) => layer.id)\n  );\n  const [showAbout, setShowAbout] = useState(false);\n\n  const onShowAbout = useCallback((show) => {\n    setShowAbout(show);\n  }, []);\n\n  const updateActiveLayers = useCallback(\n    (layerId) => {\n      const currentState = activeLayers.includes(layerId);\n      setActiveLayers(\n        currentState\n          ? activeLayers.filter((item) => item !== layerId)\n          : [...activeLayers, layerId]\n      );\n    },\n    [activeLayers]\n  );\n\n  useEffect(() => {\n    dispatch(initializeFeatureState());\n  }, [dispatch]);\n\n  const onSetDate = useCallback(\n    (newDate) => {\n      dispatch(setCurrent(newDate));\n    },\n    [dispatch]\n  );\n\n  const detailsData = selectedFeature\n    ? {\n        displayName: `${get(\n          last(casesByCounty[selectedFeature]),\n          'county'\n        )}, ${get(last(casesByCounty[selectedFeature]), 'state')}`,\n        data: casesByCounty[selectedFeature],\n      }\n    : { displayName: 'United States of America', data: totals };\n\n  return aliveStatus.success ? (\n    <>\n      <ControlPanel\n        layers={layers}\n        activeLayers={activeLayers}\n        updateActiveLayers={updateActiveLayers}\n        date={moment(date)}\n        onSetDate={onSetDate}\n        onShowAbout={() => onShowAbout(true)}\n        detailsData={detailsData}\n      />\n      <FullscreenMap\n        date={date.format('YYYY-MM-DD')}\n        sources={sources}\n        layers={layers}\n        activeLayers={activeLayers}\n        casesByCounty={casesByCounty}\n      />\n      {showAbout ? (\n        <Flexbox position=\"absolute\" zIndex={100}>\n          <About onHide={() => onShowAbout(false)} />\n        </Flexbox>\n      ) : null}\n    </>\n  ) : (\n    <AliveStatusWait status={aliveStatus} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { tick } from '../state/core/time.js';\n\nconst updateCurrentTime = (timestamp, previous) => (dispatch, getState) => {\n  const state = getState();\n  const time = state.core.time;\n  let delay = 100;\n  if (!time.pause) {\n    delay = 0;\n    if (!previous) {\n      previous = timestamp;\n    }\n    dispatch(tick(timestamp - previous));\n  }\n\n  window.requestAnimationFrame((next) =>\n    setTimeout(() => dispatch(updateCurrentTime(next, timestamp)), delay)\n  );\n};\n\nexport const start = () => (dispatch) =>\n  window.requestAnimationFrame((timestamp) =>\n    dispatch(updateCurrentTime(timestamp))\n  );\n","import { combineReducers } from '@reduxjs/toolkit';\nimport usCovidData from './usCovidData.js';\nimport time from './time.js';\nimport apiServerStatus from './apiServerStatus.js';\n\nexport default combineReducers({\n  usCovidData,\n  time,\n  apiServerStatus,\n});\n","import { combineReducers } from '@reduxjs/toolkit';\nimport map from './map.js';\n\nexport default combineReducers({\n  map,\n});\n","import { combineReducers } from '@reduxjs/toolkit';\nimport usCasesByCounty from './usCasesByCounty.js';\n\nexport default combineReducers({\n  usCasesByCounty,\n});\n","import { combineReducers } from '@reduxjs/toolkit';\nimport core from './core';\nimport ui from './ui';\nimport request from './request';\n\nexport default combineReducers({\n  core,\n  ui,\n  request,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { start as startTimeService } from './services/time.js';\n\nimport { Provider } from 'react-redux';\n\nimport configureAppStore from './state/configureAppStore.js';\n\nconst store = configureAppStore();\n\nstore.dispatch(startTimeService());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport monitorReducersEnhancer from './enhancers/monitorReducer.js';\nimport loggerMiddleware from './middleware/logger.js';\nimport rootReducer from './rootReducer.js';\n\nexport default function configureAppStore(preloadedState) {\n  const storeConfig = {\n    reducer: rootReducer,\n    middleware: [\n      ...getDefaultMiddleware({\n        serializableCheck: false,\n        immutableCheck: false,\n      }),\n    ],\n    preloadedState,\n    enhancers: [],\n  };\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./core', () => store.replaceReducer(rootReducer));\n    storeConfig.middleware.push(loggerMiddleware);\n    storeConfig.enhancers.push(monitorReducersEnhancer);\n  }\n\n  const store = configureStore(storeConfig);\n\n  return store;\n}\n"],"sourceRoot":""}