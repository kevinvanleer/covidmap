{"version":3,"sources":["components/presentation/Link.js","components/structural/About.js","components/presentation/FloatingPanel.js","components/presentation/ToggleButton.js","components/presentation/LoadingIndicator.js","state/util/loadingStatus.js","state/ui/controlPanel.js","components/structural/ControlPanel.js","components/presentation/Menu.js","state/core/time.js","components/structural/DateSelector.js","components/structural/Stats.js","components/core/d3AreaChart.js","components/core/d3BarChart.js","util/bezier.js","mapboxConfig.js","state/ui/map.js","components/structural/Details.js","components/structural/CompactLegend.js","components/presentation/LayerItem.js","components/presentation/Clickable.js","components/structural/MultiSelect.js","components/structural/Layers.js","components/structural/DrawerButton.js","components/structural/AliveStatusWait.js","components/structural/Legend.js","components/structural/LegendBox.js","state/core/usCovidData.js","state/core/worldCovidData.js","state/core/apiServerStatus.js","state/request/usCasesByCounty.js","workflows/fetchCovidData.js","components/core/Map.js","components/presentation/FullscreenMap.js","App.js","serviceWorker.js","state/enhancers/monitorReducer.js","state/middleware/logger.js","services/time.js","state/core/index.js","state/ui/index.js","state/request/index.js","state/rootReducer.js","index.js","state/configureAppStore.js"],"names":["Link","styled","a","props","color","defaultProps","About","onHide","flexDirection","backgroundColor","padding","maxWidth","margin","fontSize","height","style","overflow","href","id","onClick","FloatingPanel","Flexbox","zIndex","ToggleButton","icon","active","fixedWidth","LoadingIndicator","div","progress","loadingStatus","loadStatusDefaults","status","success","error","result","mql","window","matchMedia","controlPanelSlice","createSlice","name","initialState","layersHidden","matches","detailsHidden","collapsed","showAbout","reducers","collapse","state","action","payload","expand","showLayers","hideLayers","showDetails","hideDetails","setShowAbout","actions","ControlPanel","layers","activeLayers","onShowAbout","date","dispatch","useDispatch","useSelector","ui","controlPanel","mapLoading","map","mapLoadStatus","sourcesLoading","sourcesLoadStatus","dataProgress","request","usCasesByCounty","onToggleHideLayers","useCallback","onToggleHideDetails","onToggleCollapse","loadingMessage","width","right","top","maxHeight","alignItems","nowrap","flexGrow","marginBetween","faInfoCircle","faLayerGroup","faChartBar","horizontal","flexShrink","moment","Menu","updateCurrentTime","createAsyncThunk","timestamp","previous","time","getState","core","delay","pause","tick","requestAnimationFrame","next","setTimeout","timeSlice","min","parseInt","format","max","subtract","current","duration","rate","setCurrent","newTime","togglePlayPause","setMax","setMin","setRate","setPause","setDuration","DateSelector","withChart","timeState","useState","showTimeFilterMenu","setShowTimeFilterMenu","onSetCurrentTime","value","onSetDuration","onTogglePlayPause","onChange","faPlay","faPause","position","faFilter","bottom","left","handleClick","bold","asDays","StatsItem","label","popupDescription","showPopup","onShowPopup","middle","cursor","undefined","Intl","NumberFormat","toUpperCase","Stats","recentData","newCases","ongoingCases","population","ongoing","cases","deaths","deathRate","setShowPopup","key","newState","Object","keys","forEach","get","Math","round","AreaChart","data","currentDate","currentValue","showIntercept","d3svg","useRef","yTicks","casesData","assign","slice","y","useEffect","svg","d3","selectAll","remove","x","domain","range","yc","last","nice","curve","areaC","d","y0","y1","areaM","append","datum","attr","call","g","ticks","tickFormat","tickSizeOuter","select","clone","text","isEmpty","className","role","ref","pointerEvents","BarChart","dataDimensions","average","xLabel","yLabel","setActiveLayer","labelBars","axes","category","magnitude","dimensions","dimensionValues","magnitudeTicks","defaultMaxMagnitude","categoryScale","length","magnitudeScale","join","i","bandwidth","fontOffset","tickSize","offset","factorial","input","bezierTerm","t","pi","n","nCi","pow","cubicBezier","values","reduce","sum","cubicBezierFindY","anchorStart","controlStart","controlEnd","anchorEnd","tMax","tMin","bezierFunction","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","cubicBezier2D","increment","iterator","abs","cubicBezierDefaultControlPoints","worldTotalControlPoints","worldTotalAnchorPoints","usStateTotalAnchorPoints","usStateTotalUpperBound","usCountyTotalDeathsAnchorPoints","usCountyTotalCasesAnchorPoints","worldPerCapitaBezierControlPoints","worldPerCapitaAnchorPoints","perCapitaDeathsAnchorPoints","convertPoints","anchors","controls","getWorldPerCapitaLegendOpacity","getPerCapitaDeathsLegendOpacity","getUsCountyTotalCasesLegendOpacity","getUsCountyTotalDeathsLegendOpacity","getUsStateTotalLegendOpacity","getWorldLegendOpacity","getWorldPopLegendOpacity","usStateTotalGradient","opacity","worldPerCapitaGradient","perCapitaDeathsGradient","worldTotalsGradient","worldPopulationGradient","usMiscLegendConfig","covidVsFlu","mutex","gradient","fillColor","covidVsAvg","infectionRate","usLegendConfig","defaultDisabled","statePopulation","usStateTotalCases","usStateTotalDeaths","legendConfig","sourceAdmin0","source","sourceUsStates","sourceUsCounties","mouseLayers","generateBaseLayers","prefix","push","sourceLayer","layer","type","paint","worldLayers","legend","faHeadSideCough","faSkullCrossbones","faUsers","usLayersState","faBiohazard","zoomLevels","Number","NEGATIVE_INFINITY","usLayersCounty","POSITIVE_INFINITY","faViruses","layout","faVirus","minzoom","sources","config","url","promoteId","usLayers","getUsCommonLayers","filter","getWorldCommonLayers","layerGroups","us","world","mapSlice","hold","selectedFeature","layersLoadStatus","selectedLayerGroup","views","activeView","releaseHold","setHold","setSelectedFeature","beginMapInitialization","beginLoadingMap","mapFinishedLoading","beginLoadingSources","sourcesFinishedLoading","beginLoadingLayers","layersFinishedLoading","selectLayerGroup","setActiveLayers","setActiveView","toLowerCase","setMinZoom","flyTo","center","zoom","updateActiveLayers","layerId","currentState","includes","item","beingLoadingLayers","usPopEst2019","POPESTIMATE2019","Portal","children","container","ReactDOM","createPortal","getCasesPerDay","startIndex","endIndex","endDate","count","casesPerDay","start","end","fillArray","idx","dateArray","split","monthsShort","reverse","fillCasesPerDay","getNationalPerCapitaAverage","totals","findLast","thirty","NaN","Details","displayExpandedStats","setDisplayExpandedStats","globalTotals","worldCovidData","usData","usCovidData","stateAndCounty","usStatesData","byState","worldData","byCountry","selectedGroup","usPopulations","worldPopulations","backIcon","faFlagUsa","faGlobe","entity","useMemo","displayName","perCapitaComps","allPerCapita","entries","timeSeries","stateData","statePop","countryData","countryPop","country","sort","b","recentDataIndex","findLastIndex","yesterday","twoWeekLagIndex","twoWeekLagData","closeStats","faExpand","document","getElementById","justifyContent","faCompress","innerHeight","innerWidth","CompactLegend","step","number","Color","effectiveBackgroundColor","array","dim","darkTextContrast","contrast","lightTextContrast","alpha","centerAlign","LayerItem","title","size","Clickable","KvlClickable","MultiSelect","groups","onSelect","maxLength","group","border","Fragment","minWidth","vertical","Layers","zoomLevel","getZoom","filteredLayers","inRange","onUpdateActiveLayers","mutexLayers","newLayers","onSelectView","view","onSelectGroup","flexWrap","wrapMargin","DrawerButton","faPlusSquare","faMinusSquare","AliveStatusWait","Legend","LegendBox","legendLayers","usCovidDataSlice","casesByCounty","badRecords","load","addBoundaries","addBoundary","boundary","properties","FEATURE_ID","county","NAME","STATE","insertStatus","statusArray","appendStatus","appendBadRecords","setTotals","setPopulation","record","COUNTY","FIPS","setByState","fips","worldCovidDataSlice","apiServerStatusSlice","aliveCheck","pending","complete","object","aliveCheckPending","aliveCheckPassed","aliveCheckFailed","usCasesByCountySlice","requestPending","requestSucceeded","requestFailed","fetchUsCasesByCounty","pageSize","fetch","response","JSON","parse","fetchGlobalCovidTotals","json","fetchUsCovidByState","fetchWorldCovidData","fetchUsTotals","fetchWorldPopulation","fetchUsPopulation","fetchUsCovidBoundaries","resolution","fetchAliveCheck","sortWorldCasesByCountry","sorted","countryId","Country_code","Date_reported","Cumulative_cases","Cumulative_deaths","New_cases","newDeaths","New_deaths","Country","sortCasesByCounty","newStatus","countyId","isNaN","mapboxgl","accessToken","centroidState","twoWeeksBefore","twoWeeksPrior","firstCase","hotspot","perCapitaHotspot","choroplethState","beginRangeData","beginCases","beginDeaths","casesPerCapita","deathsPerCapita","setFeatureState","featureId","mapSource","stateFunc","selectFeature","theMap","sourceConfig","selected","MapboxMap","initialized","usPopulation","worldPopulation","mapContainer","filteredActiveLayers","getLayer","setLayoutProperty","Map","minZoom","maxPitch","dragRotate","touchPitch","pitchWithRotate","disable","touchZoomRotate","disableRotation","on","Promise","all","resolve","reject","loadImage","image","addImage","addSource","detectLoadedSources","loaded","isSourceLoaded","off","removeLayer","addLayer","twoWeeksAgo","selectNewFeature","newHold","onMouseMove","e","features","theFeature","find","feature","onMouseLeave","handlers","base","handler","event","FullscreenMap","App","aliveStatus","apiServerStatus","ReactGA","pageview","location","pathname","search","theMoment","dateRange","show","done","aliveResponse","ok","totalsPromise","populationPromise","worldDataPromise","worldPopulationPromise","globalCovidTotalsPromise","byStatePromise","boundaries","boundaryStates","worldDataLoad","worldSetTotals","worldSetPopulation","usCasesByCountyStatus","Console","console","Boolean","hostname","match","combineReducers","store","preloadedState","storeConfig","reducer","rootReducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","enhancers","devTools","actionSanitizer","stateSanitizer","uiState","mapState","coreState","worldCovidState","usCovidState","configureStore","configureAppStore","initialize","TagManager","gtmId","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.b7330e91.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Link = styled.a`\n  color: ${(props) => props.color};\n  text-decoration: none;\n\n  &:visited {\n    color: ${(props) => props.color};\n  }\n\n  &:hover {\n    color: cyan;\n  }\n\n  &:active {\n    color: #1790a7;\n  }\n\n  &:focus {\n    color: cyan;\n  }\n`;\n\nLink.defaultProps = {\n  color: '#38c9e4',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flexbox, Spacer, Text, Button } from 'kvl-react-ui';\n\nimport { Link } from '../presentation/Link';\n\nexport const About = ({ onHide }) => (\n  <Flexbox\n    flexDirection=\"column\"\n    backgroundColor=\"#444\"\n    color=\"#eee\"\n    padding=\"1em\"\n    maxWidth=\"80ch\"\n    margin=\"1em\"\n  >\n    <Text fontSize=\"heading\">About this visualization</Text>\n    <Spacer height=\"1.5em\" />\n    <div style={{ overflow: 'auto' }}>\n      <Text>\n        COVID-19 cases and deaths are displayed as blue and red choropleths as\n        reported by the New York Times. Onset, the date of the first case in\n        each county are represented by green icons. Hotspots are displays as red\n        icons. The geographic visuals are rendered with MapBox. The charts are\n        built with D3.\n      </Text>\n      <Spacer height=\"1em\" />\n      <Text fontSize=\"label\">Statistics explained</Text>\n      <Spacer height=\"0.2em\" />\n      <Text>\n        Hotspots by total cases: Hotspots are those counties that have at least\n        100 cases and in which total cases have increased 20% in the past two\n        weeks.\n      </Text>\n      <Spacer height=\"0.5em\" />\n      <Text>\n        Hotspots Per Capita: Hotspots are those counties in which at least 1% of\n        the population has been infected in the past two weeks.\n      </Text>\n      <Spacer height=\"0.5em\" />\n      <Text>\n        New cases are those reported on most recent day for the county,\n        typically yesterday.\n      </Text>\n      <Spacer height=\"0.5em\" />\n      <Text>\n        Ongoing cases is an estimate represented by cases reported within the\n        past two weeks.\n      </Text>\n      <Spacer height=\"0.5em\" />\n      <Text>\n        Death rate compares the current number of deaths to the total number of\n        cases two weeks prior.\n      </Text>\n      <Spacer height=\"1em\" />\n      <Text fontSize=\"label\">Data sources</Text>\n      <Spacer height=\"0.5em\" />\n      <Text>US 2010 census boundaries</Text>\n      <Link href=\"https://eric.clst.org/tech/usgeojson/\">\n        <Text fontSize=\"detail\">https://eric.clst.org/tech/usgeojson/</Text>\n      </Link>\n      <Spacer height=\"0.5em\" />\n      <Text>Global country boundaries: Data Packaged Core Datasets</Text>\n      <Link href=\"https://github.com/datasets/geo-countries\">\n        <Text fontSize=\"detail\">Find it on GitHub</Text>\n      </Link>\n      <Spacer height=\"0.5em\" />\n      <Text>2019 US Population Estimates: US Census Bureau</Text>\n      <Link href=\"https://www2.census.gov/programs-surveys/popest/datasets/2010-2019/counties/totals/co-est2019-alldata.csv\">\n        <Text fontSize=\"detail\">Download raw CSV file</Text>\n      </Link>\n      <Spacer height=\"0.5em\" />\n      <Text>Global Population Estimates: World Bank</Text>\n      <Link href=\"https://data.worldbank.org/indicator/SP.POP.TOTL\">\n        <Text fontSize=\"detail\">\n          https://data.worldbank.org/indicator/SP.POP.TOTL\n        </Text>\n      </Link>\n      <Spacer height=\"0.5em\" />\n      <Text>\n        US Cases and deaths, The New York Times, based on reports from state and\n        local health agencies:\n      </Text>\n      <Link href=\"https://github.com/nytimes/covid-19-data\">\n        <Text fontSize=\"detail\">https://github.com/nytimes/covid-19-data</Text>\n      </Link>\n      <Link href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\">\n        <Text fontSize=\"detail\">New York Times interactive tracking page</Text>\n      </Link>\n      <Spacer height=\"0.5em\" />\n      <Text>Global COVID-19 cases and deaths: World Health Organization</Text>\n      <Link href=\"https://covid19.who.int/WHO-COVID-19-global-data.csv\">\n        <Text fontSize=\"detail\">Download raw CSV file</Text>\n      </Link>\n      <Spacer height=\"0.5em\" />\n      <Text>Source code</Text>\n      <Link href=\"https://github.com/kevinvanleer/covidmap\">\n        <Text fontSize=\"detail\">https://github.com/kevinvanleer/covidmap</Text>\n      </Link>\n      <Link href=\"https://github.com/kevinvanleer/coviddata\">\n        <Text fontSize=\"detail\">https://github.com/kevinvanleer/coviddata</Text>\n      </Link>\n      <Spacer height=\"0.5em\" />\n      <Text fontSize=\"detail\">\n        Assembled by Kevin Van Leer. Feedback welcome at:\n      </Text>\n      <Link href=\"mailto:kevin.vanleer@gmail.com\">kevin.vanleer@gmail.com</Link>\n      <Spacer height=\"1em\" />\n    </div>\n    <Spacer height=\"1em\" />\n    <Button id=\"covidmap-about-hide-self\" onClick={onHide}>\n      <Text color=\"#eee\">Dismiss</Text>\n    </Button>\n  </Flexbox>\n);\n\nAbout.propTypes = { onHide: PropTypes.func };\n","import styled from 'styled-components';\nimport { Flexbox } from 'kvl-react-ui';\n\nexport const FloatingPanel = styled(Flexbox)`\n  position: absolute;\n  & > * {\n    flex-shrink: 0;\n  }\n`;\n\nFloatingPanel.defaultProps = {\n  zIndex: 10,\n  flexDirection: 'column',\n  backgroundColor: '#444',\n  color: '#eee',\n  padding: '1em',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { SquareButton } from 'kvl-react-ui';\n\nexport const ToggleButton = ({ id, onClick, icon, active }) => (\n  <SquareButton\n    id={id}\n    onClick={onClick}\n    backgroundColor={active ? '#777' : '#333'}\n  >\n    <FontAwesomeIcon icon={icon} color={active ? '#eee' : '#777'} fixedWidth />\n  </SquareButton>\n);\n\nToggleButton.propTypes = {\n  id: PropTypes.string,\n  onClick: PropTypes.func,\n  icon: PropTypes.object,\n  active: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nexport const LoadingIndicator = styled.div`\n  transform-origin: bottom left;\n  ${({ progress }) =>\n    progress === 0\n      ? `animation: pulse 2s ease infinite;`\n      : `transform: scale(${1 - progress});\n        transition: transform 1s ease-in-out;`}\n\n  @keyframes pulse {\n    0%,\n    100% {\n      transform: scale(1);\n    }\n    25% {\n      transform: scale(1.02);\n    }\n    75% {\n      transform: scale(0.98);\n    }\n  }\n`;\n","export const loadingStatus = {\n  pending: 'LOADING_PENDING',\n  loading: 'LOADING_LOADING',\n  complete: 'LOADING_COMPLETE',\n};\n\nexport const loadStatusDefaults = {\n  status: null,\n  success: null,\n  error: null,\n  result: null,\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nlet mql = window.matchMedia('(max-width: 600px)');\n\nconst controlPanelSlice = createSlice({\n  name: 'controlPanel',\n  initialState: {\n    layersHidden: mql.matches,\n    detailsHidden: mql.matches,\n    collapsed: mql.matches,\n    showAbout: false,\n  },\n  reducers: {\n    collapse: (state, action) => {\n      if (\n        !action.payload &&\n        state.collapsed &&\n        state.layersHidden &&\n        state.detailsHidden\n      ) {\n        state.layersHidden = false;\n        state.detailsHidden = false;\n      }\n      state.collapsed = action.payload;\n    },\n    expand: (state) => {\n      if (state.collapsed && state.layersHidden && state.detailsHidden) {\n        state.layersHidden = false;\n        state.detailsHidden = false;\n      }\n      state.collapsed = false;\n    },\n    showLayers: (state) => {\n      state.layersHidden = false;\n    },\n    hideLayers: (state, action) => {\n      if (action.payload && state.detailsHidden) {\n        state.collapsed = true;\n      }\n      state.layersHidden = action.payload;\n    },\n    showDetails: (state) => {\n      state.detailsHidden = false;\n    },\n    hideDetails: (state, action) => {\n      if (action.payload && state.layersHidden) {\n        state.collapsed = true;\n      }\n      state.detailsHidden = action.payload;\n    },\n    setShowAbout: (state, action) => {\n      state.showAbout = action.payload;\n    },\n  },\n});\n\nexport const {\n  collapse,\n  expand,\n  hideLayers,\n  showLayers,\n  hideDetails,\n  showDetails,\n  setShowAbout,\n} = controlPanelSlice.actions;\nexport default controlPanelSlice.reducer;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {\n  faInfoCircle,\n  faLayerGroup,\n  faChartBar,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  Flexbox,\n  Spacer,\n  Text,\n  SquareButton,\n  Divider,\n  Icon,\n} from 'kvl-react-ui';\nimport { Details, Layers, DateSelector, DrawerButton } from '.';\nimport { FloatingPanel } from '../presentation/FloatingPanel';\nimport { ToggleButton } from '../presentation/ToggleButton';\nimport { LoadingIndicator } from '../presentation/LoadingIndicator';\nimport { loadingStatus } from '../../state/util/loadingStatus.js';\nimport {\n  hideLayers,\n  hideDetails,\n  collapse,\n} from '../../state/ui/controlPanel.js';\n\nexport const ControlPanel = ({ layers, activeLayers, onShowAbout, date }) => {\n  const dispatch = useDispatch();\n  const collapsed = useSelector((state) => state.ui.controlPanel.collapsed);\n  const layersHidden = useSelector(\n    (state) => state.ui.controlPanel.layersHidden\n  );\n  const detailsHidden = useSelector(\n    (state) => state.ui.controlPanel.detailsHidden\n  );\n  const mapLoading = useSelector(\n    (state) => state.ui.map.mapLoadStatus.status !== loadingStatus.complete\n  );\n  const sourcesLoading = useSelector(\n    (state) => state.ui.map.sourcesLoadStatus.status !== loadingStatus.complete\n  );\n  const dataProgress = useSelector(\n    (state) => state.request.usCasesByCounty.progress\n  );\n\n  const onToggleHideLayers = useCallback(\n    () => dispatch(hideLayers(!layersHidden)),\n    [layersHidden, dispatch]\n  );\n\n  const onToggleHideDetails = useCallback(\n    () => dispatch(hideDetails(!detailsHidden)),\n    [detailsHidden, dispatch]\n  );\n\n  const onToggleCollapse = useCallback(() => dispatch(collapse(!collapsed)), [\n    collapsed,\n    dispatch,\n  ]);\n\n  let loadingMessage = null;\n  let progress = sourcesLoading || mapLoading ? 0 : dataProgress;\n  if (dataProgress < 1) loadingMessage = 'Downloading pandemic statistics...';\n  if (dataProgress === 0) loadingMessage = 'Requesting pandemic statistics...';\n  if (sourcesLoading) loadingMessage = 'Downloading boundary tiles...';\n  if (mapLoading) loadingMessage = 'Initializing base map...';\n\n  return (\n    <FloatingPanel\n      width=\"min-content\"\n      right=\"1em\"\n      top=\"1em\"\n      maxHeight=\"calc(100% - 4em)\"\n      maxWidth=\"calc(100% - 4em)\"\n      backgroundColor=\"rgba(68,68,68,0.85)\"\n      zIndex={100}\n    >\n      <Flexbox alignItems=\"center\">\n        <Text nowrap fontSize=\"heading\">\n          COVID-19\n        </Text>\n        <Spacer width=\"1em\" flexGrow={1} />\n        <Flexbox marginBetween=\"0.2em\" alignItems=\"center\">\n          <SquareButton\n            id=\"covidmap-show-about-box\"\n            onClick={onShowAbout}\n            backgroundColor=\"#777\"\n          >\n            <Icon color=\"#eee\" icon={faInfoCircle} fixedWidth />\n          </SquareButton>\n          <Spacer width=\"0.1em\" flexGrow={1} />\n          <ToggleButton\n            id=\"button-covidmap-control-panel-hide-layers\"\n            flexGrow={0}\n            onClick={onToggleHideLayers}\n            icon={faLayerGroup}\n            active={!layersHidden}\n            backgroundColor=\"#777\"\n          />\n          <ToggleButton\n            id=\"button-covidmap-control-panel-hide-details\"\n            flexGrow={0}\n            onClick={onToggleHideDetails}\n            icon={faChartBar}\n            active={!detailsHidden}\n            backgroundColor=\"#777\"\n          />\n          <Spacer width=\"0.1em\" flexGrow={1} />\n          <DrawerButton\n            id=\"button-covidmap-control-panel-collapse\"\n            flexGrow={0}\n            color=\"white\"\n            onClick={onToggleCollapse}\n            collapsed={collapsed}\n            backgroundColor=\"#777\"\n          />\n        </Flexbox>\n      </Flexbox>\n      <Divider horizontal margin=\"0.5em 0\" />\n      <Flexbox\n        flexDirection=\"column\"\n        style={{ flexShrink: 1 }}\n        overflow=\"hidden auto\"\n      >\n        {!layersHidden ? (\n          <div>\n            <Layers\n              layers={layers}\n              activeLayers={activeLayers}\n              collapsed={collapsed}\n            />\n            <Divider horizontal margin=\"0.5em 0\" />\n          </div>\n        ) : null}\n        {!detailsHidden ? (\n          <div>\n            <Details date={moment(date)} collapsed={collapsed} />\n          </div>\n        ) : (\n          <Spacer width=\"325px\" />\n        )}\n      </Flexbox>\n      <DateSelector />\n      {loadingMessage ? (\n        <Flexbox flexDirection=\"column\">\n          <Spacer height=\"1em\" />\n          <LoadingIndicator progress={progress}>\n            {loadingMessage}\n          </LoadingIndicator>\n        </Flexbox>\n      ) : null}\n    </FloatingPanel>\n  );\n};\n\nControlPanel.propTypes = {\n  layers: PropTypes.array,\n  activeLayers: PropTypes.array,\n  onShowAbout: PropTypes.func,\n  date: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { Flexbox } from 'kvl-react-ui';\n\nexport const Menu = styled(Flexbox)`\n  text-decoration: none;\n  cursor: pointer;\n\n  & > *:hover {\n    background-color: #777;\n  }\n`;\n\nMenu.defaultProps = {\n  flexDirection: 'column',\n};\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport moment from 'moment';\n\nconst updateCurrentTime = createAsyncThunk(\n  'time/updateCurrentTime',\n  ({ timestamp, previous }, { dispatch, getState }) => {\n    const state = getState();\n    const time = state.core.time;\n    let delay = 100;\n    if (!time.pause) {\n      delay = 0;\n      if (!previous) {\n        previous = timestamp;\n      }\n      dispatch(tick(timestamp - previous));\n    }\n\n    window.requestAnimationFrame((next) =>\n      setTimeout(() => dispatch(updateCurrentTime(next, timestamp)), delay)\n    );\n  }\n);\n\nexport const start = createAsyncThunk('time/startPlayback', ({ dispatch }) =>\n  window.requestAnimationFrame((timestamp) =>\n    dispatch(updateCurrentTime(timestamp))\n  )\n);\n\nconst timeSlice = createSlice({\n  name: 'time',\n  initialState: {\n    min: parseInt(moment('2020-01-01').format('x')),\n    max: parseInt(moment().subtract(1, 'days').format('x')),\n    current: parseInt(moment().subtract(1, 'days').format('x')),\n    duration: null,\n    pause: true,\n    rate: 0,\n  },\n  reducers: {\n    setCurrent: (state, action) => {\n      state.current = parseInt(action.payload);\n    },\n    tick: (state, action) => {\n      let newTime;\n      if (state.current >= state.max) {\n        newTime = state.min;\n      } else {\n        newTime = state.current + action.payload * state.rate;\n        if (newTime > state.max) {\n          newTime = state.max;\n        }\n      }\n      state.current = newTime;\n    },\n    togglePlayPause: (state) => {\n      state.pause = !state.pause;\n      state.rate = state.pause ? 0 : 864000;\n    },\n    setMax: (state, action) => {\n      state.max = action.payload;\n    },\n    setMin: (state, action) => {\n      state.min = action.payload;\n    },\n    setRate: (state, action) => {\n      state.rate = action.payload;\n    },\n    setPause: (state, action) => {\n      state.pause = action.pause;\n    },\n    setDuration: (state, action) => {\n      state.duration = action.payload;\n    },\n  },\n});\n\nexport const {\n  setCurrent,\n  tick,\n  setMax,\n  setMin,\n  setRate,\n  setPause,\n  setDuration,\n  togglePlayPause,\n} = timeSlice.actions;\nexport default timeSlice.reducer;\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Slider from 'rc-slider';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faFilter } from '@fortawesome/free-solid-svg-icons';\nimport { ToggleButton } from '../presentation/ToggleButton';\nimport { Menu } from '../presentation/Menu';\nimport 'rc-slider/assets/index.css';\n\nimport { Text, Flexbox, SquareButton, Spacer, Popup } from 'kvl-react-ui';\nimport {\n  togglePlayPause,\n  setDuration,\n  setCurrent,\n} from '../../state/core/time.js';\n\nexport const DateSelector = ({ withChart }) => {\n  const dispatch = useDispatch();\n  const timeState = useSelector((state) => state.core.time);\n  const [showTimeFilterMenu, setShowTimeFilterMenu] = useState(false);\n\n  const onSetCurrentTime = useCallback((value) => dispatch(setCurrent(value)), [\n    dispatch,\n  ]);\n\n  const onSetDuration = useCallback(\n    (duration) => dispatch(setDuration(duration)),\n    [dispatch]\n  );\n\n  const onTogglePlayPause = useCallback(() => dispatch(togglePlayPause()), [\n    dispatch,\n  ]);\n\n  return (\n    <Flexbox margin={withChart ? '0 0 0 30px' : '0'} flexDirection=\"column\">\n      <Slider\n        min={timeState.min}\n        max={timeState.max}\n        onChange={onSetCurrentTime}\n        value={timeState.current}\n      />\n      <Flexbox>\n        <SquareButton\n          id=\"button-legend-play-pause\"\n          onClick={onTogglePlayPause}\n          backgroundColor=\"#777\"\n        >\n          <FontAwesomeIcon\n            color=\"#eee\"\n            icon={timeState.rate === 0 ? faPlay : faPause}\n          />\n        </SquareButton>\n        <Spacer width=\"1em\" />\n        <Flexbox position=\"relative\">\n          <ToggleButton\n            id=\"button-legend-time-filter\"\n            onClick={() => setShowTimeFilterMenu(!showTimeFilterMenu)}\n            active={!showTimeFilterMenu}\n            icon={faFilter}\n          />\n          {showTimeFilterMenu ? (\n            <Popup\n              backgroundColor=\"#222\"\n              bottom=\"36px\"\n              left=\"36px\"\n              flexDirection=\"column\"\n              padding=\"0.5em 0\"\n              handleClick={() => {}}\n            >\n              <Menu>\n                <Text\n                  onClick={() => {\n                    onSetDuration(moment.duration(7, 'days'));\n                    setShowTimeFilterMenu(false);\n                  }}\n                  bold={timeState.duration?.asDays() === 7}\n                  padding=\"0.5em 1em\"\n                  nowrap\n                >\n                  7 days\n                </Text>\n                <Text\n                  onClick={() => {\n                    onSetDuration(moment.duration(14, 'days'));\n                    setShowTimeFilterMenu(false);\n                  }}\n                  bold={timeState.duration?.asDays() === 14}\n                  padding=\"0.5em 1em\"\n                  nowrap\n                >\n                  14 days\n                </Text>\n                <Text\n                  onClick={() => {\n                    onSetDuration(moment.duration(30, 'days'));\n                    setShowTimeFilterMenu(false);\n                  }}\n                  bold={timeState.duration?.asDays() === 30}\n                  padding=\"0.5em 1em\"\n                  nowrap\n                >\n                  30 days\n                </Text>\n                <Text\n                  onClick={() => {\n                    onSetDuration(null);\n                    setShowTimeFilterMenu(false);\n                  }}\n                  bold={timeState.duration === null}\n                  padding=\"0.5em 1em\"\n                  nowrap\n                >\n                  off\n                </Text>\n              </Menu>\n            </Popup>\n          ) : null}\n        </Flexbox>\n        <Spacer flexGrow={1} />\n        <Text>{moment(timeState.current, 'x').format('YYYY-MM-DD')}</Text>\n      </Flexbox>\n    </Flexbox>\n  );\n};\n\nDateSelector.propTypes = {\n  setDate: PropTypes.func,\n  withChart: PropTypes.bool,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport { Text, Flexbox, Spacer, Popup } from 'kvl-react-ui';\n\nconst labelFontSize = '0.6em';\n\nconst StatsItem = ({\n  label,\n  value,\n  popupDescription,\n  showPopup,\n  onShowPopup,\n  bottom,\n  right,\n  middle,\n}) => (\n  <Flexbox\n    flexDirection=\"column\"\n    onClick={() => onShowPopup(!showPopup)}\n    style={{ cursor: 'help' }}\n  >\n    {showPopup ? (\n      <Popup\n        left={middle ? '6ch' : right ? undefined : '0'}\n        right={right ? '0' : undefined}\n        bottom={bottom ? '2em' : '4em'}\n        handleClick={() => onShowPopup(false)}\n      >\n        <Flexbox backgroundColor=\"#222\" padding=\"0.5em\">\n          <Text maxWidth=\"30ch\" fontSize=\"detail\">\n            {popupDescription}\n          </Text>\n        </Flexbox>\n      </Popup>\n    ) : null}\n    <Text fontSize=\"detail\" bold>{`${\n      new Intl.NumberFormat('en-US').format(value) !== 'NaN'\n        ? new Intl.NumberFormat('en-US').format(value)\n        : value\n    }`}</Text>\n    <Text fontSize={labelFontSize}>{label.toUpperCase()}</Text>\n  </Flexbox>\n);\n\nStatsItem.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.any,\n  popupDescription: PropTypes.string,\n  showPopup: PropTypes.bool,\n  onShowPopup: PropTypes.func,\n  bottom: PropTypes.bool,\n  right: PropTypes.bool,\n  middle: PropTypes.bool,\n};\n\nexport const Stats = ({\n  collapsed,\n  recentData,\n  newCases,\n  ongoingCases,\n  population,\n}) => {\n  const [showPopup, setShowPopup] = useState({\n    population: false,\n    ongoing: false,\n    cases: false,\n    deaths: false,\n    newCases: false,\n    deathRate: false,\n  });\n\n  const onShowPopup = (key, value) => {\n    let newState = { ...showPopup };\n    if (value === false) {\n      newState[key] = false;\n    } else {\n      Object.keys(newState).forEach((key) => {\n        newState[key] = false;\n      });\n      newState[key] = true;\n    }\n    setShowPopup(newState);\n  };\n\n  return !collapsed ? (\n    <>\n      <Flexbox position=\"relative\">\n        <Flexbox flexDirection=\"column\">\n          <StatsItem\n            value={get(population, 'POPESTIMATE2019', 0)}\n            label=\"population\"\n            popupDescription=\"2019 population estimate provided by the United States Census Bureau\"\n            showPopup={showPopup.population}\n            onShowPopup={(newState) => onShowPopup('population', newState)}\n          />\n          <Spacer height=\"0.5em\" />\n          <StatsItem\n            value={ongoingCases}\n            label=\"ongoing cases\"\n            popupDescription=\"Cases reported within 14 days of the displayed date\"\n            showPopup={showPopup.ongoing}\n            onShowPopup={() => onShowPopup('ongoing', !showPopup.ongoing)}\n            bottom\n          />\n        </Flexbox>\n        <Spacer width=\"0.1em\" flexGrow=\"1\" />\n        <Flexbox flexDirection=\"column\">\n          <StatsItem\n            value={get(recentData, 'deaths', 0)}\n            label=\"total deaths\"\n            popupDescription=\"Total deaths as reported by The New York Times on the displayed date\"\n            showPopup={showPopup.deaths}\n            onShowPopup={() => onShowPopup('deaths', !showPopup.deaths)}\n            middle\n          />\n          <Spacer height=\"0.5em\" />\n          <StatsItem\n            value={get(recentData, 'cases', 0)}\n            label=\"total cases\"\n            popupDescription=\"Total cases as reported by The New York Times on the displayed date\"\n            showPopup={showPopup.cases}\n            onShowPopup={() => onShowPopup('cases', !showPopup.cases)}\n            bottom\n            middle\n          />\n        </Flexbox>\n        <Spacer width=\"0.1em\" flexGrow=\"1\" />\n        <Flexbox flexDirection=\"column\">\n          <StatsItem\n            value={Math.round(\n              (get(recentData, 'deaths', 0) /\n                get(population, 'POPESTIMATE2019', 0)) *\n                1e5\n            )}\n            label=\"Deaths per 100k\"\n            popupDescription=\"Number of deaths that have occurred, normalized to a population of 100,000 individuals\"\n            showPopup={showPopup.deathRate}\n            onShowPopup={() => onShowPopup('deathRate', !showPopup.deathRate)}\n            right\n          />\n          <Spacer height=\"0.5em\" />\n          <StatsItem\n            value={newCases}\n            label=\"New cases\"\n            popupDescription=\"Cases reported on the displayed date\"\n            showPopup={showPopup.newCases}\n            onShowPopup={() => onShowPopup('newCases', !showPopup.newCases)}\n            bottom\n            right\n          />\n        </Flexbox>\n      </Flexbox>\n    </>\n  ) : null;\n};\n\nStats.propTypes = {\n  collapsed: PropTypes.bool,\n  population: PropTypes.object,\n  recentData: PropTypes.object,\n  newCases: PropTypes.number,\n  ongoingCases: PropTypes.number,\n};\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport { last, get, isEmpty } from 'lodash';\n\nconst AreaChart = ({\n  height,\n  width,\n  data,\n  currentDate,\n  currentValue,\n  showIntercept,\n}) => {\n  const d3svg = useRef(null);\n\n  const yTicks = height * (7 / 200);\n\n  const casesData = Object.assign(\n    data.slice(1).map(({ date, cases, deaths }) => ({\n      date: moment(date),\n      cases: cases,\n      deaths: deaths,\n    })),\n    { y: 'Cases' }\n  );\n\n  useEffect(() => {\n    const margin = { top: 20, right: 0, bottom: 30, left: 30 };\n    if (data && d3svg.current) {\n      let svg = d3.select(d3svg.current);\n      svg.selectAll('*').remove();\n      let x = d3\n        .scaleTime()\n        //.domain(d3.extent(casesData, (d) => d.date))\n        .domain([\n          moment('2020-01-01', 'YYYY-MM-DD'),\n          moment().subtract(1, 'days'),\n        ])\n        .range([margin.left, width - margin.right]);\n\n      let yc = d3\n        .scaleLinear()\n        .domain([0, Math.max(get(last(casesData), 'cases', 0), 10)])\n        .nice()\n        .range([height - margin.bottom, margin.top]);\n\n      /*\n      let ym = d3\n        .scaleLinear()\n        .domain([0, last(mortalityData).value])\n        .nice()\n        .range([height - margin.bottom, margin.top]);\n        */\n\n      let xAxis = (g) =>\n        g\n          .attr('transform', `translate(0,${height - margin.bottom})`)\n          .call(\n            d3\n              .axisBottom(x)\n              .ticks(5)\n              .tickFormat(d3.timeFormat('%b'))\n              .tickSizeOuter(0)\n          );\n\n      let ycAxis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .call(d3.axisLeft(yc).ticks(yTicks, 's'))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .select('.tick:last-of-type text')\n              .clone()\n              .attr('x', 3)\n              .attr('text-anchor', 'start')\n              .attr('font-weight', 'bold')\n              .text(casesData.y)\n          );\n      /*\n      let ymAxis = (g) =>\n        g\n          .attr('transform', `translate(${width - margin.right},0)`)\n          .call(d3.axisRight(ym))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .select('.tick:last-of-type text')\n              .clone()\n              .attr('x', 3)\n              .attr('text-anchor', 'start')\n              .attr('font-weight', 'bold')\n              .text(mortalityData.y)\n          );\n          */\n\n      let curve = d3.curveStep;\n      let areaC = d3\n        .area()\n        .curve(curve)\n        .x((d) => x(d.date))\n        .y0(yc(0))\n        .y1((d) => yc(d.cases));\n      let areaM = d3\n        .area()\n        .curve(curve)\n        .x((d) => x(d.date))\n        .y0(yc(0))\n        .y1((d) => yc(d.deaths));\n\n      svg\n        .append('path')\n        .datum(casesData)\n        .attr('fill', 'steelblue')\n        .attr('d', areaC);\n      svg.append('path').datum(casesData).attr('fill', 'red').attr('d', areaM);\n      svg.append('g').call(xAxis);\n      svg.append('g').call(ycAxis);\n      //svg.append('g').call(ymAxis);\n\n      const markerColor = '#ccc';\n      if (currentDate && !isEmpty(data)) {\n        const radius = 2;\n        svg\n          .append('line')\n          .attr('x1', x(currentDate))\n          .attr('x2', x(currentDate))\n          .attr('y1', height - margin.bottom)\n          .attr('y2', yc(currentValue) + radius)\n          .style('stroke-width', 1)\n          .style('stroke', markerColor)\n          .style('fill', 'none');\n        svg\n          .append('circle')\n          .attr('cx', x(currentDate))\n          .attr('cy', yc(currentValue))\n          .attr('r', radius)\n          .style('stroke-width', 1)\n          .style('stroke', markerColor)\n          .style('fill', 'none');\n      }\n\n      if (showIntercept && casesData[0]) {\n        svg\n          .append('line')\n          .attr('x1', x(casesData[0].date))\n          .attr('x2', x(casesData[0].date))\n          .attr('y1', height - margin.bottom)\n          .attr('y2', height / 2)\n          .style('stroke-width', 1)\n          .style('stroke', markerColor)\n          .style('fill', 'none');\n        svg\n          .append('text')\n          .attr('x', x(casesData[0].date))\n          .attr('y', height / 2 - 5)\n          .text(casesData[0].date.format('MMM D'))\n          .attr('text-anchor', 'middle')\n          .attr('font-family', 'sans-serif')\n          .attr('font-size', '10px')\n          .attr('fill', '#eee');\n      }\n      if (isEmpty(data)) {\n        svg\n          .append('text')\n          .attr('x', width / 2)\n          .attr('y', height / 2)\n          .text('No data')\n          .attr('text-anchor', 'middle')\n          .attr('font-family', 'sans-serif')\n          .attr('font-size', '20px')\n          .attr('fill', '#eee');\n      }\n    }\n  }, [\n    data,\n    casesData,\n    height,\n    width,\n    yTicks,\n    currentDate,\n    currentValue,\n    showIntercept,\n  ]);\n\n  return (\n    <svg\n      className=\"area-chart-container\"\n      width={width}\n      height={height}\n      role=\"img\"\n      ref={d3svg}\n      pointerEvents=\"none\"\n    ></svg>\n  );\n};\n\nAreaChart.propTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number,\n  data: PropTypes.array,\n  currentDate: PropTypes.object,\n  currentValue: PropTypes.number,\n  showIntercept: PropTypes.bool,\n};\n\nAreaChart.defaultProps = {\n  height: 200,\n  width: 300,\n  data: [],\n  currentValue: 0,\n};\n\nexport default AreaChart;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { isEmpty } from 'lodash';\n\nconst BarChart = ({\n  data,\n  dataDimensions,\n  average,\n  xLabel,\n  yLabel,\n  height,\n  width,\n  color,\n  activeLayers,\n  setActiveLayer,\n  horizontal,\n  labelBars,\n}) => {\n  const d3svg = useRef(null);\n\n  useEffect(() => {\n    const axes = horizontal\n      ? { category: 'y', magnitude: 'x' }\n      : { category: 'x', magnitude: 'y' };\n    const dimensions = horizontal\n      ? { category: 'height', magnitude: 'width' }\n      : { category: 'width', magnitude: 'height' };\n    const dimensionValues = horizontal\n      ? { category: height, magnitude: width }\n      : { category: width, magnitude: height };\n    const magnitudeTicks = horizontal ? (width * 7) / 300 : (height * 7) / 200;\n    const defaultMaxMagnitude = average ? Math.max(average * 1.5, 10) : 10;\n    const margin = labelBars\n      ? { top: 5, right: 0, bottom: 30, left: 10 }\n      : { top: 20, right: 0, bottom: 30, left: 30 };\n    if (data && d3svg.current) {\n      let svg = d3.select(d3svg.current);\n      svg.selectAll('*').remove();\n\n      let categoryScale = d3\n        .scaleBand()\n        .domain(d3.range(data.length))\n        .range(\n          horizontal\n            ? [margin.top, height - margin.bottom]\n            : [margin.left, width - margin.right]\n        )\n        .padding(0.1);\n\n      let magnitudeScale = d3\n        .scaleLinear()\n        .domain([\n          0,\n          isEmpty(data)\n            ? defaultMaxMagnitude\n            : Math.max(\n                d3.max(data, (d) => d[dataDimensions.magnitude]),\n                defaultMaxMagnitude\n              ),\n        ])\n        .nice()\n        .range(\n          horizontal\n            ? [margin.left, width - margin.right - margin.left]\n            : [height - margin.bottom, margin.top]\n        );\n\n      let categoryAxis = (g) =>\n        horizontal\n          ? labelBars\n            ? g.attr('transform', `translate(${margin.left},0)`).call(\n                d3\n                  .axisLeft(categoryScale)\n                  .tickFormat(() => null)\n                  .tickSize(0)\n              )\n            : g\n                .attr('transform', `translate(${margin.left},0)`)\n                .call(\n                  d3\n                    .axisLeft(categoryScale)\n                    .tickFormat((i) => data[i][dataDimensions.category])\n                    .tickSizeOuter(0)\n                )\n                .call((g) =>\n                  g\n                    .select('.tick:first-of-type text')\n                    .clone()\n                    .attr('x', -10)\n                    .attr('text-anchor', 'end')\n                    .attr('font-weight', 'bold')\n                    .text(xLabel)\n                )\n          : g\n              .attr('transform', `translate(0,${height - margin.bottom})`)\n              .call(\n                d3\n                  .axisBottom(categoryScale)\n                  .tickFormat((i) => data[i][dataDimensions.category])\n                  .tickSizeOuter(0)\n              )\n              .call((g) =>\n                g\n                  .select('.tick:first-of-type text')\n                  .clone()\n                  .attr('x', -10)\n                  .attr('text-anchor', 'end')\n                  .attr('font-weight', 'bold')\n                  .text(xLabel)\n              );\n\n      let magnitudeAxis = (g) =>\n        horizontal\n          ? g\n              .attr('transform', `translate(0,${height - margin.bottom})`)\n              .call(\n                d3\n                  .axisBottom(magnitudeScale)\n                  .ticks(magnitudeTicks, d3.format('s'))\n              )\n              .call((g) => g.select('.domain').remove())\n              .call((g) =>\n                g\n                  .select('.tick:last-of-type text')\n                  .clone()\n                  .attr('x', -width / 2)\n                  .attr('y', 20)\n                  .attr('text-anchor', 'start')\n                  .attr('font-weight', 'bold')\n                  .text(yLabel)\n              )\n          : g\n              .attr('transform', `translate(${margin.left},0)`)\n              .call(\n                d3\n                  .axisLeft(magnitudeScale)\n                  .ticks(magnitudeTicks, d3.format('s'))\n              )\n              .call((g) => g.select('.domain').remove())\n              .call((g) =>\n                g\n                  .select('.tick:last-of-type text')\n                  .clone()\n                  .attr('x', 3)\n                  .attr('text-anchor', 'start')\n                  .attr('font-weight', 'bold')\n                  .text(yLabel)\n              );\n\n      svg\n        .append('g')\n        .selectAll('rect')\n        .data(data)\n        .join('rect')\n        .attr('fill', color)\n        .attr(axes.category, (d, i) => categoryScale(i))\n        .attr(axes.magnitude, (d) =>\n          horizontal\n            ? magnitudeScale(0)\n            : magnitudeScale(d[dataDimensions.magnitude])\n        )\n        .attr(dimensions.magnitude, (d) =>\n          horizontal\n            ? magnitudeScale(d[dataDimensions.magnitude]) - margin.left\n            : magnitudeScale(0) - magnitudeScale(d[dataDimensions.magnitude])\n        )\n        .attr(dimensions.category, categoryScale.bandwidth());\n      if (labelBars) {\n        const fontSize = categoryScale.bandwidth() * 0.7;\n        const fontOffset = (categoryScale.bandwidth() + fontSize) / 2 - 2;\n        svg\n          .append('g')\n          .selectAll('rect')\n          .data(data)\n          .join('text')\n          .attr(axes.category, (d, i) => categoryScale(i) + fontOffset)\n          .attr(axes.magnitude, margin.left + 5)\n          .text((d) => d[dataDimensions.category].toUpperCase())\n          .attr('text-anchor', 'left')\n          .attr('font-family', 'sans-serif')\n          .attr('font-size', fontSize)\n          .attr('fill', '#eee');\n      }\n      svg.append('g').call(categoryAxis);\n      svg.append('g').call(magnitudeAxis);\n\n      if (isEmpty(data)) {\n        svg\n          .append('text')\n          .attr(axes.category, dimensionValues.category / 2)\n          .attr(axes.magnitude, dimensionValues.magnitude / 2)\n          .text('No data')\n          .attr('text-anchor', 'middle')\n          .attr('font-family', 'sans-serif')\n          .attr('font-size', '20px')\n          .attr('fill', '#eee');\n      }\n\n      if (average !== undefined) {\n        const offset = height - margin.bottom - margin.top + 5;\n        svg\n          .append('line')\n          .attr('x1', margin.left)\n          .attr('x2', width - margin.right)\n          .attr('y1', magnitudeScale(average))\n          .attr('y2', magnitudeScale(average))\n          .style('stroke-width', 1)\n          .style('stroke', '#ccc')\n          .style('fill', 'none');\n        svg\n          .append('text')\n          .attr(axes.category, margin.left)\n          .attr(\n            axes.magnitude,\n            magnitudeScale(average) +\n              (magnitudeScale(average) < offset ? 10 : -5)\n          )\n          .text('30-DAY US AVERAGE')\n          .attr('text-anchor', 'left')\n          .attr('font-family', 'sans-serif')\n          .attr('font-size', '8px')\n          .attr('fill', '#ccc');\n      }\n    }\n  }, [\n    data,\n    color,\n    activeLayers,\n    setActiveLayer,\n    horizontal,\n    labelBars,\n    height,\n    width,\n    xLabel,\n    yLabel,\n    average,\n    dataDimensions,\n  ]);\n\n  return (\n    <svg\n      className=\"area-chart-container\"\n      width={width}\n      height={height}\n      role=\"img\"\n      ref={d3svg}\n    ></svg>\n  );\n};\n\nBarChart.propTypes = {\n  data: PropTypes.array,\n  dataDimensions: PropTypes.object,\n  color: PropTypes.string,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  average: PropTypes.number,\n  xLabel: PropTypes.string,\n  yLabel: PropTypes.string,\n  activeLayers: PropTypes.array,\n  setActiveLayer: PropTypes.func,\n  labelBars: PropTypes.bool,\n  horizontal: PropTypes.bool,\n};\n\nBarChart.defaultProps = {\n  data: [],\n  setActiveLayer: () => null,\n  color: 'steelblue',\n  height: 200,\n  width: 300,\n  dataDimensions: { category: 'date', magnitude: 'value' },\n};\n\nexport default BarChart;\n","export const factorial = (input) => {\n  if (input === 0) {\n    return 1;\n  } else {\n    return input * factorial(input - 1);\n  }\n};\n\nexport const nCi = (n, i) => {\n  return factorial(n) / (factorial(i) * factorial(n - i));\n};\n\nexport const bezierTerm = (t, i, pi) =>\n  nCi(3, i) * Math.pow(1 - t, 3 - i) * Math.pow(t, i) * pi;\n\nexport const cubicBezier = (values) => (t) => {\n  return values.reduce((sum, pi, i) => sum + bezierTerm(t, i, pi));\n};\n\nexport const cubicBezier2D = (\n  anchorStart,\n  controlStart,\n  controlEnd,\n  anchorEnd\n) => (t) => {\n  const { x: p0x, y: p0y } = anchorStart;\n  const { x: p1x, y: p1y } = controlStart;\n  const { x: p2x, y: p2y } = controlEnd;\n  const { x: p3x, y: p3y } = anchorEnd;\n\n  return {\n    x: cubicBezier([p0x, p1x, p2x, p3x])(t),\n    y: cubicBezier([p0y, p1y, p2y, p3y])(t),\n  };\n};\n\nexport const cubicBezierFindY = (\n  anchorStart,\n  controlStart,\n  controlEnd,\n  anchorEnd\n) => (x) => {\n  let t = 0.5;\n  let tMax = 1;\n  let tMin = 0;\n  let found = false;\n\n  const bezierFunction = cubicBezier2D(\n    anchorStart,\n    controlStart,\n    controlEnd,\n    anchorEnd\n  );\n\n  const increment = (result) => {\n    if (x > result) {\n      tMin = t;\n      return t + (tMax - t) / 2;\n    } else {\n      tMax = t;\n      return t - (t - tMin) / 2;\n    }\n  };\n\n  let iterator = 0;\n  while (!found) {\n    const result = bezierFunction(t);\n\n    if (Math.abs(result.x - x) < 1e-6 || iterator > 1e5) {\n      return result.y;\n    } else {\n      t = increment(result.x);\n    }\n    iterator++;\n  }\n};\n","import {\n  faSkullCrossbones,\n  faVirus,\n  faViruses,\n  faHeadSideCough,\n  faBiohazard,\n  faUsers,\n} from '@fortawesome/free-solid-svg-icons';\n\n/*\nconst fluCasesEst2019 = 35.5e6;\nconst fluDeathsEst2019 = 34200;\nconst fluCasesPerCapita = 35.5 / 328.2;\nconst fluDeathsPerCapita = 34200 / 328.2e6;\n*/\n\nimport { cubicBezierFindY } from './util/bezier.js';\n\nconst casesColor = '#00f';\nconst deathsColor = '#f00';\nconst populationColor = '#0f0';\nconst invalidColor = '#777';\n\nconst usCountyTotalDeathsUpperBound = 1e4;\nconst usCountyTotalCasesUpperBound = 5e5;\nconst usStateTotalUpperBound = 5e6;\nconst worldPerCapitaCasesUpperBound = 0.2;\nconst worldPerCapitaDeathsUpperBound = 0.005;\n\nconst cubicBezierDefaultControlPoints = [0.0, 1.0, 0.2, 0.9];\nconst worldTotalControlPoints = cubicBezierDefaultControlPoints;\nconst worldTotalAnchorPoints = [0, 0, 1e7, 0.8, 1e10, 0.8];\n\nconst usStateTotalAnchorPoints = [\n  0,\n  0,\n  usStateTotalUpperBound,\n  0.8,\n  usStateTotalUpperBound * 10,\n  0.8,\n];\n\nconst usCountyTotalDeathsAnchorPoints = [\n  0,\n  0,\n  usCountyTotalDeathsUpperBound,\n  0.8,\n];\nconst usCountyTotalCasesAnchorPoints = [\n  0,\n  0,\n  usCountyTotalCasesUpperBound,\n  0.8,\n];\n\nconst worldPerCapitaBezierControlPoints = [0.0, 0.5, 0.3, 0.6];\nconst worldPerCapitaAnchorPoints = [\n  0,\n  0,\n  worldPerCapitaCasesUpperBound,\n  0.8,\n  1,\n  0.8,\n];\nconst perCapitaDeathsAnchorPoints = [\n  0,\n  0,\n  worldPerCapitaDeathsUpperBound,\n  0.8,\n  1,\n  0.8,\n];\n\nconst convertPoints = (anchors, controls) => {\n  return [\n    { x: anchors[0], y: anchors[1] },\n    { x: controls[0] * anchors[2], y: controls[1] * anchors[3] },\n    { x: controls[2] * anchors[2], y: controls[3] * anchors[3] },\n    { x: anchors[2], y: anchors[3] },\n  ];\n};\n\nconst getWorldPerCapitaLegendOpacity = cubicBezierFindY(\n  ...convertPoints(\n    worldPerCapitaAnchorPoints,\n    worldPerCapitaBezierControlPoints\n  )\n);\n\nconst getPerCapitaDeathsLegendOpacity = cubicBezierFindY(\n  ...convertPoints(\n    perCapitaDeathsAnchorPoints,\n    worldPerCapitaBezierControlPoints\n  )\n);\n\nconst getUsCountyTotalCasesLegendOpacity = cubicBezierFindY(\n  ...convertPoints(\n    usCountyTotalCasesAnchorPoints,\n    worldPerCapitaBezierControlPoints\n  )\n);\n\nconst getUsCountyTotalDeathsLegendOpacity = cubicBezierFindY(\n  ...convertPoints(\n    usCountyTotalDeathsAnchorPoints,\n    worldPerCapitaBezierControlPoints\n  )\n);\n\nconst getUsStateTotalLegendOpacity = cubicBezierFindY(\n  ...convertPoints(usStateTotalAnchorPoints, cubicBezierDefaultControlPoints)\n);\nconst getWorldLegendOpacity = cubicBezierFindY(\n  { x: 0, y: 0 },\n  { x: 0, y: 0.8 },\n  { x: 2e6, y: 0.72 },\n  { x: 1e7, y: 0.8 }\n);\nconst getWorldPopLegendOpacity = cubicBezierFindY(\n  { x: 0, y: 0 },\n  { x: 0, y: 0.8 },\n  { x: 3e8, y: 0.48 },\n  { x: 1e9, y: 0.8 }\n);\n\nconst usStateTotalGradient = [\n  {\n    magnitude: 5e3,\n    opacity: getUsStateTotalLegendOpacity(5e3),\n  },\n  {\n    magnitude: 5e4,\n    opacity: getUsStateTotalLegendOpacity(5e4),\n  },\n  {\n    magnitude: 5e5,\n    opacity: getUsStateTotalLegendOpacity(5e5),\n  },\n  {\n    magnitude: 5e6,\n    opacity: 0.8,\n  },\n];\n\nconst worldPerCapitaGradient = [\n  {\n    magnitude: '2%',\n    opacity: getWorldPerCapitaLegendOpacity(0.02),\n  },\n  {\n    magnitude: '5%',\n    opacity: getWorldPerCapitaLegendOpacity(0.05),\n  },\n  {\n    magnitude: '10%',\n    opacity: getWorldPerCapitaLegendOpacity(0.1),\n  },\n  {\n    magnitude: '20%',\n    opacity: getWorldPerCapitaLegendOpacity(0.2),\n  },\n];\n\nconst perCapitaDeathsGradient = [\n  {\n    magnitude: '.01%',\n    opacity: getPerCapitaDeathsLegendOpacity(0.0001),\n  },\n  {\n    magnitude: '.05%',\n    opacity: getPerCapitaDeathsLegendOpacity(0.0005),\n  },\n  {\n    magnitude: '.1%',\n    opacity: getPerCapitaDeathsLegendOpacity(0.001),\n  },\n  {\n    magnitude: '.5%',\n    opacity: getPerCapitaDeathsLegendOpacity(0.005),\n  },\n];\n\nconst worldTotalsGradient = [\n  {\n    magnitude: 1e4,\n    opacity: getWorldLegendOpacity(1e4),\n  },\n  {\n    magnitude: 1e5,\n    opacity: getWorldLegendOpacity(1e5),\n  },\n  {\n    magnitude: 1e6,\n    opacity: getWorldLegendOpacity(1e6),\n  },\n  {\n    magnitude: 1e7,\n    opacity: 0.8,\n  },\n];\n\nconst worldPopulationGradient = [\n  {\n    magnitude: 1e6,\n    opacity: getWorldPopLegendOpacity(1e6),\n  },\n  {\n    magnitude: 1e7,\n    opacity: getWorldPopLegendOpacity(1e7),\n  },\n  {\n    magnitude: 1e8,\n    opacity: getWorldPopLegendOpacity(1e8),\n  },\n  {\n    magnitude: 1e9,\n    opacity: 0.8,\n  },\n];\n\nconst usMiscLegendConfig = {\n  covidVsFlu: {\n    mutex: true,\n    gradient: [\n      {\n        magnitude: 'FLU',\n        opacity: 0.8,\n        fillColor: '#3bebff',\n      },\n      {\n        magnitude: '',\n        opacity: 0.4,\n        fillColor: '#3bebff',\n      },\n      {\n        magnitude: '0',\n        fillColor: '#ffd400',\n        opacity: 0,\n      },\n      {\n        magnitude: '',\n        fillColor: '#ffd400',\n        opacity: 0.4,\n      },\n      {\n        magnitude: 'CVD',\n        fillColor: '#ffd400',\n        opacity: 0.8,\n      },\n    ],\n  },\n  covidVsAvg: {\n    mutex: true,\n    gradient: [\n      {\n        magnitude: 'LOW',\n        opacity: 0.8,\n        fillColor: '#3bebff',\n      },\n      {\n        magnitude: '',\n        opacity: 0.4,\n        fillColor: '#3bebff',\n      },\n      {\n        magnitude: 'AVG',\n        fillColor: '#ffd400',\n        opacity: 0,\n      },\n      {\n        magnitude: '',\n        fillColor: '#ffd400',\n        opacity: 0.4,\n      },\n      {\n        magnitude: 'HIGH',\n        fillColor: '#ffd400',\n        opacity: 0.8,\n      },\n    ],\n  },\n  infectionRate: {\n    fillColor: '#ff9a00',\n    gradient: [\n      {\n        magnitude: '1%',\n        opacity: 0.1,\n      },\n      {\n        magnitude: '5%',\n        opacity: 0.5,\n      },\n      {\n        magnitude: '10%',\n        opacity: 0.7,\n      },\n      {\n        magnitude: '20%',\n        opacity: 0.8,\n      },\n    ],\n  },\n};\n\nconst usLegendConfig = {\n  ...usMiscLegendConfig,\n  population: {\n    defaultDisabled: true,\n    fillColor: populationColor,\n    gradient: [\n      {\n        magnitude: 1e4,\n        opacity: getWorldLegendOpacity(1e4),\n      },\n      {\n        magnitude: 1e5,\n        opacity: getWorldLegendOpacity(1e5),\n      },\n      {\n        magnitude: 1e6,\n        opacity: getWorldLegendOpacity(1e6),\n      },\n      {\n        magnitude: 1e7,\n        opacity: 0.8,\n      },\n    ],\n  },\n  statePopulation: {\n    defaultDisabled: true,\n    fillColor: populationColor,\n    gradient: [\n      {\n        magnitude: 1e4,\n        opacity: getWorldLegendOpacity(1e4),\n      },\n      {\n        magnitude: 1e5,\n        opacity: getWorldLegendOpacity(1e5),\n      },\n      {\n        magnitude: 1e6,\n        opacity: getWorldLegendOpacity(1e6),\n      },\n      {\n        magnitude: 5e8,\n        opacity: 0.8,\n      },\n    ],\n  },\n  usStateTotalCases: {\n    fillColor: casesColor,\n    gradient: usStateTotalGradient,\n  },\n  usStateTotalDeaths: {\n    fillColor: deathsColor,\n    gradient: usStateTotalGradient,\n  },\n  deaths: {\n    fillColor: deathsColor,\n    gradient: [\n      {\n        magnitude: 10,\n        opacity: getUsCountyTotalDeathsLegendOpacity(10),\n      },\n      {\n        magnitude: 100,\n        opacity: getUsCountyTotalDeathsLegendOpacity(100),\n      },\n      {\n        magnitude: 1000,\n        opacity: getUsCountyTotalDeathsLegendOpacity(1000),\n      },\n      {\n        magnitude: 10000,\n        opacity: getUsCountyTotalDeathsLegendOpacity(10000),\n      },\n    ],\n  },\n  cases: {\n    fillColor: casesColor,\n    gradient: [\n      {\n        magnitude: 100,\n        opacity: getUsCountyTotalCasesLegendOpacity(100),\n      },\n      {\n        magnitude: 1000,\n        opacity: getUsCountyTotalCasesLegendOpacity(1000),\n      },\n      {\n        magnitude: 10000,\n        opacity: getUsCountyTotalCasesLegendOpacity(10000),\n      },\n      {\n        magnitude: 100000,\n        opacity: getUsCountyTotalCasesLegendOpacity(100000),\n      },\n    ],\n  },\n};\n\nconst legendConfig = {\n  ...usMiscLegendConfig,\n  ...usLegendConfig,\n};\n\nexport const sourceAdmin0 = {\n  source: 'admin-levels',\n  'source-layer': 'admin0',\n};\n\nexport const sourceUsStates = {\n  source: 'us-admin-levels',\n  'source-layer': 'admin1',\n};\n\nexport const sourceUsCounties = {\n  source: 'us-admin-levels',\n  'source-layer': 'admin2',\n};\n\nexport const mouseLayers = [];\n\nconst generateBaseLayers = (source, prefix) => {\n  mouseLayers.push({\n    source: {\n      source: source.source,\n      sourceLayer: source['source-layer'],\n    },\n    layer: `${prefix}-base`,\n  });\n  return [\n    {\n      id: `${prefix}-base`,\n      type: 'fill',\n      ...source,\n      paint: {\n        'fill-color': 'transparent',\n      },\n    },\n    {\n      id: `${prefix}-outline-base`,\n      type: 'line',\n      ...source,\n      paint: {\n        'line-color': [\n          'case',\n          ['feature-state', 'hold'],\n          populationColor,\n          '#e842dc',\n        ],\n        'line-width': ['interpolate', ['linear'], ['zoom'], 3, 2, 10, 4],\n        'line-opacity': ['to-number', ['feature-state', 'active']],\n      },\n    },\n  ];\n};\n\nconst worldLayers = [\n  {\n    id: 'world-per-capita-cases',\n    type: 'fill',\n    ...sourceAdmin0,\n    legend: {\n      label: 'Cases',\n      icon: faHeadSideCough,\n      fillColor: casesColor,\n      gradient: worldPerCapitaGradient,\n    },\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'casesPerCapita'], null],\n        invalidColor,\n        casesColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldPerCapitaBezierControlPoints],\n        ['feature-state', 'casesPerCapita'],\n        ...worldPerCapitaAnchorPoints,\n      ],\n    },\n  },\n  {\n    id: 'world-per-capita-deaths',\n    legend: {\n      label: 'Deaths',\n      icon: faSkullCrossbones,\n      fillColor: deathsColor,\n      gradient: perCapitaDeathsGradient,\n    },\n    type: 'fill',\n    ...sourceAdmin0,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'deathsPerCapita'], null],\n        invalidColor,\n        deathsColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldPerCapitaBezierControlPoints],\n        ['feature-state', 'deathsPerCapita'],\n        ...perCapitaDeathsAnchorPoints,\n      ],\n    },\n  },\n  {\n    id: 'world-cases',\n    type: 'fill',\n    ...sourceAdmin0,\n    legend: {\n      label: 'Cases',\n      icon: faHeadSideCough,\n      fillColor: casesColor,\n      gradient: worldTotalsGradient,\n    },\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'cases'], null],\n        invalidColor,\n        casesColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldTotalControlPoints],\n        ['feature-state', 'cases'],\n        ...worldTotalAnchorPoints,\n      ],\n    },\n  },\n  {\n    id: 'world-deaths',\n    legend: {\n      label: 'Deaths',\n      icon: faSkullCrossbones,\n      fillColor: deathsColor,\n      gradient: worldTotalsGradient,\n    },\n    type: 'fill',\n    ...sourceAdmin0,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'deaths'], null],\n        invalidColor,\n        deathsColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldTotalControlPoints],\n        ['feature-state', 'deaths'],\n        ...worldTotalAnchorPoints,\n      ],\n    },\n  },\n  ...generateBaseLayers(sourceAdmin0, 'countries'),\n  {\n    legend: {\n      label: 'Population',\n      icon: faUsers,\n      defaultDisabled: true,\n      fillColor: populationColor,\n      gradient: worldPopulationGradient,\n    },\n    id: 'world-country-population',\n    type: 'fill',\n    ...sourceAdmin0,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'population'], null],\n        invalidColor,\n        populationColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', 0.0, 1.0, 0.3, 0.6],\n        ['feature-state', 'population'],\n        0,\n        0,\n        1e9,\n        0.8,\n        1e14,\n        0.8,\n      ],\n    },\n  },\n];\n\nconst usLayersState = [\n  {\n    legend: {\n      label: 'Cases vs Avg',\n      icon: faBiohazard,\n      ...legendConfig.covidVsAvg,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-cases-vs-avg',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'casesPerCapita'],\n        0,\n        ['rgba', 58, 235, 255, 0.8],\n        0.0018,\n        ['rgba', 58, 235, 255, 0.8],\n        0.01799,\n        ['rgba', 58, 235, 255, 0],\n        0.018,\n        ['rgba', 255, 212, 0, 0],\n        0.18,\n        ['rgba', 255, 212, 0, 0.8],\n        1,\n        ['rgba', 255, 212, 0, 0.8],\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Deaths vs Avg',\n      icon: faBiohazard,\n      ...legendConfig.covidVsAvg,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-deaths-vs-avg',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'deathsPerCapita'],\n        0,\n        ['rgba', 58, 235, 255, 0.8],\n        5.6e-5,\n        ['rgba', 58, 235, 255, 0.8],\n        5.599e-4,\n        ['rgba', 58, 235, 255, 0],\n        5.6e-4,\n        ['rgba', 255, 212, 0, 0],\n        5.6e-3,\n        ['rgba', 255, 212, 0, 0.8],\n        1,\n        ['rgba', 255, 212, 0, 0.8],\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Deaths vs Flu',\n      icon: faBiohazard,\n      ...legendConfig.covidVsFlu,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-deaths-vs-flu',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'deathsPerCapita'],\n        0,\n        ['rgba', 58, 235, 255, 0.8],\n        1e-5,\n        ['rgba', 58, 235, 255, 0.8],\n        9e-5,\n        ['rgba', 58, 235, 255, 0],\n        1e-4,\n        ['rgba', 255, 212, 0, 0],\n        1e-3,\n        ['rgba', 255, 212, 0, 0.8],\n        1,\n        ['rgba', 255, 212, 0, 0.8],\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Cases vs Flu',\n      icon: faBiohazard,\n      ...legendConfig.covidVsFlu,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-cases-vs-flu',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'casesPerCapita'],\n        0,\n        ['rgba', 58, 235, 255, 0.8],\n        0.01,\n        ['rgba', 58, 235, 255, 0.8],\n        0.09,\n        ['rgba', 58, 235, 255, 0],\n        0.1,\n        ['rgba', 255, 212, 0, 0],\n        0.2,\n        ['rgba', 255, 212, 0, 0.8],\n        1,\n        ['rgba', 255, 212, 0, 0.8],\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Infection rate',\n      icon: faBiohazard,\n      ...legendConfig.infectionRate,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-infection-rate',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': legendConfig.infectionRate.fillColor,\n      'fill-opacity': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'casesPerCapita'],\n        0,\n        0,\n        0.01,\n        0.1,\n        0.02,\n        0.2,\n        0.05,\n        0.5,\n        0.1,\n        0.7,\n        0.2,\n        0.8,\n        1,\n        0.8,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Deaths',\n      icon: faSkullCrossbones,\n      fillColor: deathsColor,\n      gradient: perCapitaDeathsGradient,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-per-capita-deaths',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'deathsPerCapita'], null],\n        invalidColor,\n        deathsColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldPerCapitaBezierControlPoints],\n        ['feature-state', 'deathsPerCapita'],\n        ...perCapitaDeathsAnchorPoints,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Cases',\n      icon: faHeadSideCough,\n      fillColor: casesColor,\n      gradient: worldPerCapitaGradient,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-per-capita-cases',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'casesPerCapita'], null],\n        invalidColor,\n        casesColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldPerCapitaBezierControlPoints],\n        ['feature-state', 'casesPerCapita'],\n        ...worldPerCapitaAnchorPoints,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Deaths',\n      icon: faSkullCrossbones,\n      ...legendConfig.usStateTotalDeaths,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-total-deaths',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'deaths'], null],\n        invalidColor,\n        deathsColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...cubicBezierDefaultControlPoints],\n        ['feature-state', 'deaths'],\n        ...usStateTotalAnchorPoints,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Cases',\n      icon: faHeadSideCough,\n      ...legendConfig.usStateTotalCases,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-total-cases',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'cases'], null],\n        invalidColor,\n        casesColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...cubicBezierDefaultControlPoints],\n        ['feature-state', 'cases'],\n        ...usStateTotalAnchorPoints,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Population',\n      icon: faUsers,\n      ...legendConfig.statePopulation,\n      defaultDisabled: true,\n      zoomLevels: [Number.NEGATIVE_INFINITY, 4],\n    },\n    id: 'us-state-population',\n    type: 'fill',\n    ...sourceUsStates,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'population'], null],\n        invalidColor,\n        populationColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', 0.0, 1.0, 0.2, 0.9],\n        ['feature-state', 'population'],\n        0,\n        0,\n        5e8,\n        0.8,\n        1e10,\n        0.8,\n      ],\n    },\n  },\n  ...generateBaseLayers(sourceUsStates, 'us-states'),\n  /*{\n    legend: {\n      label: 'Hotspots',\n      icon: faViruses,\n    },\n    id: 'us-hotspots',\n    type: 'symbol',\n    source: 'us-state-centroids',\n    layout: {\n      'icon-image': 'corona-red',\n      'icon-size': ['interpolate', ['linear'], ['zoom'], 3, 0.1, 20, 1],\n      'icon-ignore-placement': true,\n    },\n    paint: {\n      'icon-opacity': ['to-number', ['feature-state', 'hotspot']],\n      'icon-color': 'red',\n    },\n  },\n  {\n    legend: {\n      label: 'Hotspots',\n      icon: faViruses,\n    },\n    id: 'us-per-capita-hotspots',\n    type: 'symbol',\n    source: 'us-state-centroids',\n    layout: {\n      'icon-image': 'corona-red',\n      'icon-size': ['interpolate', ['linear'], ['zoom'], 3, 0.1, 20, 1],\n      'icon-ignore-placement': true,\n    },\n    paint: {\n      'icon-opacity': ['to-number', ['feature-state', 'perCapitaHotspot']],\n      'icon-color': 'red',\n    },\n  },\n  {\n    legend: {\n      label: 'Onset',\n      icon: faVirus,\n    },\n    id: 'us-first-case',\n    type: 'symbol',\n    source: 'us-state-centroids',\n    layout: {\n      'icon-image': 'corona-green',\n      'icon-size': ['interpolate', ['linear'], ['zoom'], 3, 0.2, 20, 1],\n      'icon-ignore-placement': true,\n    },\n    paint: {\n      'icon-opacity': ['to-number', ['feature-state', 'firstCase']],\n      'icon-color': 'red',\n    },\n  },\n  {\n    id: 'us-state-names',\n    type: 'symbol',\n    source: 'us-state-centroids',\n    minzoom: 7,\n    layout: { 'text-field': ['get', 'NAME'], 'text-ignore-placement': true },\n    paint: {\n      'text-halo-color': '#fff',\n      'text-halo-width': 1,\n    },\n  },*/\n];\nconst usLayersCounty = [\n  {\n    legend: {\n      label: 'Cases vs Avg',\n      icon: faBiohazard,\n      ...legendConfig.covidVsAvg,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-cases-vs-avg',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'casesPerCapita'],\n        0,\n        ['rgba', 58, 235, 255, 0.8],\n        0.0018,\n        ['rgba', 58, 235, 255, 0.8],\n        0.01799,\n        ['rgba', 58, 235, 255, 0],\n        0.018,\n        ['rgba', 255, 212, 0, 0],\n        0.18,\n        ['rgba', 255, 212, 0, 0.8],\n        1,\n        ['rgba', 255, 212, 0, 0.8],\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Deaths vs Avg',\n      icon: faBiohazard,\n      ...legendConfig.covidVsAvg,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-deaths-vs-avg',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'deathsPerCapita'],\n        0,\n        ['rgba', 58, 235, 255, 0.8],\n        5.6e-5,\n        ['rgba', 58, 235, 255, 0.8],\n        5.599e-4,\n        ['rgba', 58, 235, 255, 0],\n        5.6e-4,\n        ['rgba', 255, 212, 0, 0],\n        5.6e-3,\n        ['rgba', 255, 212, 0, 0.8],\n        1,\n        ['rgba', 255, 212, 0, 0.8],\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Deaths vs Flu',\n      icon: faBiohazard,\n      ...legendConfig.covidVsFlu,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-deaths-vs-flu',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'deathsPerCapita'],\n        0,\n        ['rgba', 58, 235, 255, 0.8],\n        1e-5,\n        ['rgba', 58, 235, 255, 0.8],\n        9e-5,\n        ['rgba', 58, 235, 255, 0],\n        1e-4,\n        ['rgba', 255, 212, 0, 0],\n        1e-3,\n        ['rgba', 255, 212, 0, 0.8],\n        1,\n        ['rgba', 255, 212, 0, 0.8],\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Cases vs Flu',\n      icon: faBiohazard,\n      ...legendConfig.covidVsFlu,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-cases-vs-flu',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'casesPerCapita'],\n        0,\n        ['rgba', 58, 235, 255, 0.8],\n        0.01,\n        ['rgba', 58, 235, 255, 0.8],\n        0.09,\n        ['rgba', 58, 235, 255, 0],\n        0.1,\n        ['rgba', 255, 212, 0, 0],\n        0.2,\n        ['rgba', 255, 212, 0, 0.8],\n        1,\n        ['rgba', 255, 212, 0, 0.8],\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Infection rate',\n      icon: faBiohazard,\n      ...legendConfig.infectionRate,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-infection-rate',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': legendConfig.infectionRate.fillColor,\n      'fill-opacity': [\n        'interpolate',\n        ['linear'],\n        ['feature-state', 'casesPerCapita'],\n        0,\n        0,\n        0.01,\n        0.1,\n        0.02,\n        0.2,\n        0.05,\n        0.5,\n        0.1,\n        0.7,\n        0.2,\n        0.8,\n        1,\n        0.8,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Deaths',\n      icon: faSkullCrossbones,\n      fillColor: deathsColor,\n      gradient: perCapitaDeathsGradient,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-per-capita-deaths',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'deathsPerCapita'], null],\n        invalidColor,\n        deathsColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldPerCapitaBezierControlPoints],\n        ['feature-state', 'deathsPerCapita'],\n        ...perCapitaDeathsAnchorPoints,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Cases',\n      icon: faHeadSideCough,\n      fillColor: casesColor,\n      gradient: worldPerCapitaGradient,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-per-capita-cases',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'casesPerCapita'], null],\n        invalidColor,\n        casesColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldPerCapitaBezierControlPoints],\n        ['feature-state', 'casesPerCapita'],\n        ...worldPerCapitaAnchorPoints,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Deaths',\n      icon: faSkullCrossbones,\n      ...legendConfig.deaths,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-total-deaths',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'deaths'], null],\n        invalidColor,\n        deathsColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldPerCapitaBezierControlPoints],\n        ['feature-state', 'deaths'],\n        ...usCountyTotalDeathsAnchorPoints,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Cases',\n      icon: faHeadSideCough,\n      ...legendConfig.cases,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-total-cases',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'cases'], null],\n        invalidColor,\n        casesColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', ...worldPerCapitaBezierControlPoints],\n        ['feature-state', 'cases'],\n        ...usCountyTotalCasesAnchorPoints,\n      ],\n    },\n  },\n  {\n    legend: {\n      label: 'Population',\n      icon: faUsers,\n      ...legendConfig.population,\n      zoomLevels: [4, Number.POSITIVE_INFINITY],\n    },\n    id: 'us-county-population',\n    type: 'fill',\n    ...sourceUsCounties,\n    paint: {\n      'fill-color': [\n        'case',\n        ['==', ['feature-state', 'population'], null],\n        invalidColor,\n        populationColor,\n      ],\n      'fill-opacity': [\n        'interpolate',\n        ['cubic-bezier', 0.0, 1.0, 0.2, 0.9],\n        ['feature-state', 'population'],\n        0,\n        0,\n        1e7,\n        0.8,\n        1e10,\n        0.8,\n      ],\n    },\n  },\n  ...generateBaseLayers(sourceUsCounties, 'us-counties'),\n  {\n    legend: {\n      label: 'Hotspots',\n      icon: faViruses,\n    },\n    id: 'us-hotspots',\n    type: 'symbol',\n    source: 'us-county-centroids',\n    layout: {\n      'icon-image': 'corona-red',\n      'icon-size': ['interpolate', ['linear'], ['zoom'], 3, 0.1, 20, 1],\n      'icon-ignore-placement': true,\n    },\n    paint: {\n      'icon-opacity': ['to-number', ['feature-state', 'hotspot']],\n      'icon-color': 'red',\n    },\n  },\n  {\n    legend: {\n      label: 'Hotspots',\n      icon: faViruses,\n    },\n    id: 'us-per-capita-hotspots',\n    type: 'symbol',\n    source: 'us-county-centroids',\n    layout: {\n      'icon-image': 'corona-red',\n      'icon-size': ['interpolate', ['linear'], ['zoom'], 3, 0.1, 20, 1],\n      'icon-ignore-placement': true,\n    },\n    paint: {\n      'icon-opacity': ['to-number', ['feature-state', 'perCapitaHotspot']],\n      'icon-color': 'red',\n    },\n  },\n  {\n    legend: {\n      label: 'Onset',\n      icon: faVirus,\n    },\n    id: 'us-first-case',\n    type: 'symbol',\n    source: 'us-county-centroids',\n    layout: {\n      'icon-image': 'corona-green',\n      'icon-size': ['interpolate', ['linear'], ['zoom'], 3, 0.2, 20, 1],\n      'icon-ignore-placement': true,\n    },\n    paint: {\n      'icon-opacity': ['to-number', ['feature-state', 'firstCase']],\n      'icon-color': 'red',\n    },\n  },\n  {\n    id: 'us-county-names',\n    type: 'symbol',\n    source: 'us-county-centroids',\n    minzoom: 7,\n    layout: { 'text-field': ['get', 'NAME'], 'text-ignore-placement': true },\n    paint: {\n      'text-halo-color': '#fff',\n      'text-halo-width': 1,\n    },\n  },\n];\n\nexport const sources = [\n  {\n    id: 'admin-levels',\n    config: {\n      type: 'vector',\n      url: 'mapbox://ruokvl.admin-levels',\n      promoteId: 'ISO_A2',\n    },\n  },\n  {\n    id: 'us-admin-levels',\n    config: {\n      type: 'vector',\n      url: 'mapbox://ruokvl.us-admin-levels',\n    },\n  },\n  {\n    id: 'us-county-centroids',\n    config: {\n      type: 'geojson',\n      data: '/api/us-county-centroids',\n    },\n  },\n];\n\nconst usLayers = [...usLayersState, ...usLayersCounty];\nexport const layers = [...worldLayers, ...usLayers];\n\nconst getUsCommonLayers = () =>\n  usLayers\n    .filter((layer) => layer.legend === undefined)\n    .map((layer) => layer.id);\n\nconst getWorldCommonLayers = () =>\n  worldLayers\n    .filter((layer) => layer.legend === undefined)\n    .map((layer) => layer.id);\n\nexport const getUniversalLayers = () =>\n  layers.filter((layer) => layer.legend === undefined).map((layer) => layer.id);\n\nexport const layerGroups = {\n  us: [\n    {\n      name: 'Per Capita',\n      layers: [\n        'us-county-per-capita-deaths',\n        'us-county-per-capita-cases',\n        'us-state-per-capita-deaths',\n        'us-state-per-capita-cases',\n        'us-per-capita-hotspots',\n        'us-first-case',\n        'us-county-population',\n        'us-state-population',\n        ...getUsCommonLayers(),\n      ],\n    },\n    {\n      name: 'Total',\n      layers: [\n        'us-county-total-deaths',\n        'us-county-total-cases',\n        'us-state-total-deaths',\n        'us-state-total-cases',\n        'us-hotspots',\n        'us-first-case',\n        ...getUsCommonLayers(),\n      ],\n    },\n    {\n      name: 'Misc',\n      layers: [\n        'us-county-infection-rate',\n        'us-county-cases-vs-flu',\n        'us-county-cases-vs-avg',\n        'us-county-deaths-vs-flu',\n        'us-county-deaths-vs-avg',\n        'us-per-capita-hotspots',\n        'us-county-population',\n        'us-state-infection-rate',\n        'us-state-cases-vs-flu',\n        'us-state-cases-vs-avg',\n        'us-state-deaths-vs-flu',\n        'us-state-deaths-vs-avg',\n        'us-per-capita-hotspots',\n        'us-state-population',\n        ...getUsCommonLayers(),\n      ],\n    },\n  ],\n  world: [\n    {\n      name: 'Per Capita',\n      layers: [\n        'world-per-capita-deaths',\n        'world-per-capita-cases',\n        'world-country-population',\n        ...getWorldCommonLayers(),\n      ],\n    },\n    {\n      name: 'Total',\n      layers: [\n        'world-deaths',\n        'world-cases',\n        'world-country-population',\n        ...getWorldCommonLayers(),\n      ],\n    },\n  ],\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { loadingStatus, loadStatusDefaults } from '../util/loadingStatus.js';\nimport { layerGroups, layers } from '../../mapboxConfig.js';\n\nconst mapSlice = createSlice({\n  name: 'map',\n  initialState: {\n    hold: false,\n    selectedFeature: null,\n    mapLoadStatus: { ...loadStatusDefaults },\n    sourcesLoadStatus: { ...loadStatusDefaults },\n    layersLoadStatus: { ...loadStatusDefaults },\n    map: null,\n    layerGroups: layerGroups['us'],\n    layers: layers,\n    selectedLayerGroup: layerGroups['us'][0],\n    views: Object.keys(layerGroups).map((key) => ({ name: key })),\n    activeView: { name: 'us' },\n    activeLayers: layers\n      .filter(\n        (layer) => !layer?.legend?.mutex && !layer?.legend?.defaultDisabled\n      )\n      .map((layer) => layer.id),\n  },\n  reducers: {\n    hold: (state) => {\n      state.hold = true;\n    },\n    releaseHold: (state) => {\n      state.hold = false;\n    },\n    setHold: (state, action) => {\n      state.hold = action.payload;\n    },\n    setSelectedFeature: (state, action) => {\n      state.selectedFeature = action.payload;\n    },\n    beginMapInitialization: (state) => {\n      state.mapLoadStatus.status = loadingStatus.pending;\n      state.sourcesLoadStatus.status = loadingStatus.pending;\n      state.layersLoadStatus.status = loadingStatus.pending;\n    },\n    beginLoadingMap: (state, action) => {\n      state.map = action.payload;\n      state.mapLoadStatus.status = loadingStatus.loading;\n    },\n    mapFinishedLoading: (state) => {\n      state.mapLoadStatus.status = loadingStatus.complete;\n    },\n    beginLoadingSources: (state) => {\n      state.sourcesLoadStatus.status = loadingStatus.loading;\n    },\n    sourcesFinishedLoading: (state) => {\n      state.sourcesLoadStatus.status = loadingStatus.complete;\n    },\n    beginLoadingLayers: (state) => {\n      state.layersLoadStatus.status = loadingStatus.loading;\n    },\n    layersFinishedLoading: (state) => {\n      state.layersLoadStatus.status = loadingStatus.complete;\n    },\n    selectLayerGroup: (state, action) => {\n      state.selectedLayerGroup = action.payload;\n    },\n    setActiveLayers: (state, action) => {\n      state.activeLayers = action.payload;\n    },\n    setActiveView: (state, action) => {\n      state.activeView = action.payload;\n      if (action.payload.name.toLowerCase() === 'world') {\n        state.map.setMinZoom(0);\n        state.map.flyTo({\n          center: [10, 25],\n          zoom: 1.7,\n        });\n      } else {\n        state.map.flyTo({\n          center: [-95, 39],\n          zoom: 4,\n        });\n        state.map.setMinZoom(3);\n      }\n      state.layerGroups = layerGroups[action.payload.name];\n      state.selectedLayerGroup = layerGroups[action.payload.name][0];\n      state.hold = false;\n    },\n    updateActiveLayers: (state, action) => {\n      const layerId = action.payload;\n      const currentState = state.activeLayers.includes(layerId);\n      state.activeLayers = currentState\n        ? state.activeLayers.filter((item) => item !== layerId)\n        : [...state.activeLayers, layerId];\n    },\n  },\n});\n\nexport const {\n  setHold,\n  hold,\n  releaseHold,\n  setSelectedFeature,\n  beginMapInitialization,\n  beginLoadingMap,\n  mapFinishedLoading,\n  beginLoadingSources,\n  sourcesFinishedLoading,\n  beingLoadingLayers,\n  layersFinishedLoading,\n  selectLayerGroup,\n  setActiveLayers,\n  setActiveView,\n  updateActiveLayers,\n} = mapSlice.actions;\nexport default mapSlice.reducer;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { get, findLast, findLastIndex, last } from 'lodash';\nimport { Flexbox, Spacer, Text, SquareButton } from 'kvl-react-ui';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFlagUsa,\n  faGlobe,\n  faExpand,\n  faCompress,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { Stats } from './Stats.js';\nimport AreaChart from '../core/d3AreaChart.js';\nimport BarChart from '../core/d3BarChart.js';\n\nimport { releaseHold, setSelectedFeature } from '../../state/ui/map.js';\n\nconst usPopEst2019 = { POPESTIMATE2019: 328239523 };\nconst globalPopEst2019 = 7.713e9;\n\nconst fillCasesPerDay = (endDate, count) => {\n  let fillArray = [];\n  for (let idx = 0; idx < count; ++idx) {\n    let thisDate = moment(endDate).subtract(idx, 'days');\n    let dateArray = thisDate.format('YYYY-MM-DD').split('-');\n    fillArray.push({\n      date:\n        dateArray[2] === '01' && idx !== count - 1\n          ? moment.monthsShort(parseInt(dateArray[1]) - 1)\n          : dateArray[2],\n      value: 0,\n    });\n  }\n  return fillArray.reverse();\n};\n\nconst Portal = ({ children, container }) =>\n  ReactDOM.createPortal(children, container);\n\nconst getCasesPerDay = (\n  data,\n  startIndex,\n  endIndex,\n  population,\n  endDate,\n  count\n) => {\n  let casesPerDay = [];\n  const start = startIndex >= 1 ? startIndex : 1;\n  const end = endIndex >= 1 ? endIndex : 1;\n\n  if (startIndex < 1 && count > 0) {\n    casesPerDay = fillCasesPerDay(moment(endDate), count - end);\n  }\n  if (endIndex >= 0) {\n    for (let idx = start; idx <= end; ++idx) {\n      let dateArray = get(data, [idx, 'date']).split('-');\n\n      casesPerDay.push({\n        date:\n          dateArray[2] === '01' && idx !== start\n            ? moment.monthsShort(parseInt(dateArray[1]) - 1)\n            : dateArray[2],\n        value:\n          Math.max(\n            (idx === 0\n              ? data[idx].cases\n              : data[idx].cases - data[idx - 1].cases) /\n              get(population, 'POPESTIMATE2019'),\n            0\n          ) * 1e5,\n      });\n    }\n  }\n  return casesPerDay;\n};\n\nconst getNationalPerCapitaAverage = (date, totals, population) => {\n  if (totals) {\n    const last = findLast(\n      totals,\n      (status) => status.date <= moment(date).format('YYYY-MM-DD')\n    );\n    const thirty = findLast(\n      totals,\n      (status) =>\n        status.date <= moment(date).subtract(30, 'days').format('YYYY-MM-DD')\n    );\n    const casesPerDay = (get(last, 'cases', 0) - get(thirty, 'cases', 0)) / 30;\n    return (casesPerDay / population) * 1e5;\n  }\n  return NaN;\n};\n\nexport const Details = ({ date, collapsed }) => {\n  const [displayExpandedStats, setDisplayExpandedStats] = useState(false);\n  const dispatch = useDispatch();\n  const globalTotals = useSelector((state) => state.core.worldCovidData.totals);\n  const usData = useSelector((state) => state.core.usCovidData.stateAndCounty);\n  const usStatesData = useSelector((state) => state.core.usCovidData.byState);\n  const worldData = useSelector((state) => state.core.worldCovidData.byCountry);\n  const selectedGroup = useSelector((state) => state.ui.map.selectedLayerGroup);\n  const selectedFeature = useSelector((state) => state.ui.map.selectedFeature);\n  const usPopulations = useSelector(\n    (state) => state.core.usCovidData.population\n  );\n  const worldPopulations = useSelector(\n    (state) => state.core.worldCovidData.population\n  );\n  const totals = useSelector((state) => state.core.usCovidData.totals);\n  const activeView = useSelector((state) => state.ui.map.activeView);\n  let population = usPopEst2019;\n  let backIcon = faFlagUsa;\n\n  if (activeView.name.toLowerCase() === 'world') {\n    population = {\n      POPESTIMATE2019: get(\n        worldPopulations,\n        [selectedFeature, 'population'],\n        globalPopEst2019\n      ),\n    };\n    backIcon = faGlobe;\n  } else {\n    population = selectedFeature\n      ? usPopulations[selectedFeature]\n      : usPopEst2019;\n  }\n\n  let entity = useMemo(() => {\n    let entity = selectedFeature\n      ? {\n          displayName:\n            selectedFeature < 1000\n              ? get(last(usData[selectedFeature]), 'state', 'Unknown')\n              : `${get(\n                  last(usData[selectedFeature]),\n                  'county',\n                  'Unknown'\n                )}, ${get(last(usData[selectedFeature]), 'state', 'Unknown')}`,\n          data: usData[selectedFeature],\n        }\n      : { displayName: 'United States of America', data: totals };\n    if (activeView.name.toLowerCase() === 'world') {\n      entity = selectedFeature\n        ? {\n            displayName: `${get(\n              last(get(worldData, [selectedFeature])),\n              'country',\n              get(worldPopulations, [selectedFeature, 'name'], 'Unknown')\n            )}`,\n            data: get(worldData, [selectedFeature], []),\n          }\n        : { displayName: 'Global', data: globalTotals };\n    }\n    return entity;\n  }, [\n    selectedFeature,\n    usData,\n    worldData,\n    activeView,\n    globalTotals,\n    totals,\n    worldPopulations,\n  ]);\n  let xLabel = useMemo(() => moment(date).subtract(14, 'days').format('MMM'), [\n    date,\n  ]);\n\n  const perCapitaComps = useMemo(() => {\n    const allPerCapita = [];\n    Object.entries(usStatesData).forEach(([id, timeSeries]) => {\n      const stateData = findLast(\n        timeSeries,\n        (status) => status.date <= date.format('YYYY-MM-DD')\n      );\n      if (stateData) {\n        const statePop = get(usPopulations, [id, 'POPESTIMATE2019']);\n        if (statePop) {\n          allPerCapita.push({\n            id,\n            name:\n              activeView.name.toLowerCase() === 'world'\n                ? `${stateData.state}, US`\n                : stateData.state,\n            deaths: (stateData.deaths / statePop) * 1e6,\n            cases: (stateData.cases / statePop) * 1e6,\n          });\n        }\n      }\n    });\n    if (activeView.name.toLowerCase() === 'world') {\n      Object.entries(worldData).forEach(([id, timeSeries]) => {\n        const countryData = findLast(\n          timeSeries,\n          (status) => status.date <= date.format('YYYY-MM-DD')\n        );\n        if (countryData) {\n          const countryPop = get(worldPopulations, [id, 'population']);\n          if (countryPop) {\n            allPerCapita.push({\n              id,\n              name: countryData.country,\n              deaths: (countryData.deaths / countryPop) * 1e6,\n              cases: (countryData.cases / countryPop) * 1e6,\n            });\n          }\n        }\n      });\n    }\n    return allPerCapita.sort((a, b) => b.deaths - a.deaths);\n  }, [\n    activeView,\n    usStatesData,\n    usPopulations,\n    worldData,\n    worldPopulations,\n    date,\n  ]);\n\n  const data = entity.data;\n  const recentDataIndex = useMemo(\n    () =>\n      findLastIndex(data, (status) => status.date <= date.format('YYYY-MM-DD')),\n    [data, date]\n  );\n  const recentData = get(data, [recentDataIndex], { deaths: 0, cases: 0 });\n  const yesterday = useMemo(\n    () =>\n      findLast(\n        data,\n        (status) =>\n          status.date <= moment(date).subtract(1, 'days').format('YYYY-MM-DD')\n      ),\n    [data, date]\n  );\n  const twoWeekLagIndex = useMemo(\n    () =>\n      findLastIndex(\n        data,\n        (status) =>\n          status.date <= moment(date).subtract(2, 'weeks').format('YYYY-MM-DD')\n      ),\n    [data, date]\n  );\n  const twoWeekLagData = get(data, [twoWeekLagIndex], null);\n\n  const newCases = get(recentData, 'cases', 0) - get(yesterday, 'cases', 0);\n\n  const ongoingCases =\n    get(recentData, 'cases', 0) - get(twoWeekLagData, 'cases', 0);\n\n  const casesPerDay = useMemo(\n    () =>\n      getCasesPerDay(\n        data,\n        twoWeekLagIndex,\n        recentDataIndex,\n        population,\n        date,\n        15\n      ),\n    [data, twoWeekLagIndex, recentDataIndex, population, date]\n  );\n\n  const closeStats = useCallback(() => {\n    dispatch(releaseHold());\n    dispatch(setSelectedFeature(null));\n  }, [dispatch]);\n\n  return recentData ? (\n    <Flexbox flexDirection=\"column\">\n      <Flexbox>\n        <Flexbox flexDirection=\"column\" flexGrow={1}>\n          <Flexbox>\n            <Flexbox flexDirection=\"column\" flexGrow={1}>\n              <Text bold fontSize=\"label\">\n                {entity.displayName}\n              </Text>\n              <Text fontSize=\"detail\">\n                {recentData.date\n                  ? `reporting on ${recentData.date}`\n                  : 'no reported cases'}\n              </Text>\n            </Flexbox>\n            {selectedFeature != null ? (\n              <SquareButton\n                id=\"covid19-button-close-stats\"\n                onClick={closeStats}\n                backgroundColor=\"#777\"\n              >\n                <FontAwesomeIcon color=\"#eee\" icon={backIcon} fixedWidth />\n              </SquareButton>\n            ) : (\n              <SquareButton\n                id=\"covid19-button-expand-stats\"\n                onClick={() => setDisplayExpandedStats(true)}\n                backgroundColor=\"#777\"\n              >\n                <FontAwesomeIcon color=\"#eee\" icon={faExpand} fixedWidth />\n              </SquareButton>\n            )}\n          </Flexbox>\n          <Spacer height=\"0.5em\" />\n          <Stats\n            population={population}\n            collapsed={collapsed}\n            entity={entity}\n            recentData={recentData}\n            newCases={newCases}\n            ongoingCases={ongoingCases}\n          />\n        </Flexbox>\n      </Flexbox>\n      {!selectedFeature && selectedGroup.name.toLowerCase() === 'per capita' ? (\n        <BarChart\n          horizontal\n          labelBars\n          data={perCapitaComps\n            .slice(0, 10)\n            .filter((entity) => entity.deaths >= 1)}\n          dataDimensions={{ category: 'name', magnitude: 'deaths' }}\n          height={collapsed ? 100 : undefined}\n          color=\"#ce2029\"\n          width={325}\n          yLabel=\"deaths in 100k\"\n        />\n      ) : null}\n      {selectedFeature && selectedGroup.name.toLowerCase() === 'per capita' ? (\n        <BarChart\n          data={casesPerDay}\n          average={getNationalPerCapitaAverage(\n            date,\n            totals,\n            parseInt(get(usPopEst2019, 'POPESTIMATE2019'))\n          )}\n          height={collapsed ? 100 : undefined}\n          width={325}\n          yLabel=\"cases in 100k\"\n          xLabel={xLabel}\n        />\n      ) : null}\n      {selectedGroup.name.toLowerCase() !== 'per capita' ? (\n        <AreaChart\n          data={entity.data}\n          currentDate={date}\n          height={collapsed ? 100 : undefined}\n          width={325}\n          currentValue={parseInt(get(recentData, 'cases', 0))}\n          showIntercept={true}\n        />\n      ) : null}\n      {displayExpandedStats ? (\n        <Portal container={document.getElementById('root')}>\n          <Flexbox\n            position=\"absolute\"\n            backgroundColor=\"rgba(0,0,0,0.8)\"\n            top=\"0\"\n            bottom=\"0\"\n            left=\"0\"\n            right=\"0\"\n            zIndex=\"1000\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            color=\"#eee\"\n          >\n            <Flexbox flexDirection=\"column\">\n              <Flexbox>\n                <Flexbox flexDirection=\"column\" flexGrow={1}>\n                  <Text bold fontSize=\"label\">\n                    {entity.displayName}: Deaths per capita\n                  </Text>\n                  <Text fontSize=\"detail\">\n                    {recentData.date\n                      ? `reporting on ${recentData.date}`\n                      : 'no reported cases'}\n                  </Text>\n                </Flexbox>\n                <Spacer flexGrow={1} />\n                <SquareButton\n                  id=\"covid19-button-collapse-stats\"\n                  onClick={() => setDisplayExpandedStats(false)}\n                  backgroundColor=\"#777\"\n                >\n                  <FontAwesomeIcon color=\"#eee\" icon={faCompress} fixedWidth />\n                </SquareButton>\n              </Flexbox>\n              <Spacer height=\"0.5em\" />\n              <Stats\n                population={population}\n                collapsed={collapsed}\n                entity={entity}\n                recentData={recentData}\n                newCases={newCases}\n                ongoingCases={ongoingCases}\n              />\n              <Spacer height=\"0.5em\" />\n              <BarChart\n                horizontal\n                labelBars\n                data={perCapitaComps\n                  .slice(0, 51)\n                  .filter((entity) => entity.deaths >= 1)}\n                dataDimensions={{ category: 'name', magnitude: 'deaths' }}\n                height={Math.min(window.innerHeight - 150, 1080)}\n                color=\"#ce2029\"\n                width={Math.min(\n                  window.innerWidth - window.innerWidth * 0.05,\n                  1920\n                )}\n                yLabel=\"deaths in 1M\"\n              />\n            </Flexbox>\n          </Flexbox>\n        </Portal>\n      ) : null}\n    </Flexbox>\n  ) : null;\n};\n\nDetails.propTypes = {\n  date: PropTypes.object,\n  collapsed: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Color from 'color';\n\nimport { Flexbox, Text } from 'kvl-react-ui';\n\nconst prettyPrint = (number) => {\n  if (number >= 1e9) {\n    return `${number / 1e9}B`;\n  }\n  if (number >= 1e6) {\n    return `${number / 1e6}M`;\n  }\n  if (number >= 1e3) {\n    return `${number / 1e3}k`;\n  }\n  return number;\n};\n\nconst boxDimension = '1.5rem';\n\nexport const CompactLegend = ({ fillColor, gradient }) => {\n  const darkText = '#111';\n  const lightText = '#eee';\n\n  return (\n    <Flexbox flexDirection=\"row\" backgroundColor=\"#eee\">\n      {gradient.map((step, idx) => {\n        const backgroundColor = Color(step.fillColor || fillColor);\n        const effectiveBackgroundColor = Color(\n          backgroundColor.array().map((dim) => 238 - step.opacity * (238 - dim))\n        );\n        const darkTextContrast = effectiveBackgroundColor.contrast(\n          Color(darkText)\n        );\n        const lightTextContrast = effectiveBackgroundColor.contrast(\n          Color(lightText)\n        );\n        return (\n          <Text\n            key={`${step.magnitude}-${idx}`}\n            height=\"0.6rem\"\n            width={boxDimension}\n            backgroundColor={backgroundColor.alpha(step.opacity)}\n            alignItems=\"center\"\n            fontSize=\"0.5rem\"\n            color={darkTextContrast > lightTextContrast ? darkText : lightText}\n            centerAlign\n            flexGrow={1}\n          >\n            {prettyPrint(step.magnitude)}\n          </Text>\n        );\n      })}\n    </Flexbox>\n  );\n};\n\nCompactLegend.propTypes = {\n  fillColor: PropTypes.string,\n  gradient: PropTypes.array,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Flexbox, Spacer, Text, SquareButton } from 'kvl-react-ui';\nimport { CompactLegend as Legend } from '../structural/CompactLegend.js';\n\nexport const LayerItem = styled(\n  ({ className, onClick, config, active, collapsed }) => (\n    <Flexbox flexGrow={collapsed ? 0 : 1} alignItems=\"center\" onClick={onClick}>\n      <SquareButton\n        id={`covidmap-button-layer-item-${config.label.toLowerCase()}`}\n        onClick={onClick}\n        backgroundColor={active ? '#777' : '#333'}\n        title={config.label}\n      >\n        <FontAwesomeIcon\n          size={collapsed ? 'sm' : 'lg'}\n          icon={config.icon}\n          color={active ? '#eee' : '#777'}\n          fixedWidth\n        />\n      </SquareButton>\n      {!collapsed ? (\n        <>\n          <Spacer width=\"0.5em\" />\n          <Flexbox flexDirection=\"column\">\n            <Text fontSize=\"label\" bold={active} className={className}>\n              {config.label}\n            </Text>\n            {config.gradient && <Legend {...config} />}\n          </Flexbox>\n        </>\n      ) : null}\n    </Flexbox>\n  )\n)`\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nimport { Clickable as KvlClickable } from 'kvl-react-ui';\n\nexport const Clickable = styled(KvlClickable)`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  align-items: center;\n  text-align: center;\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  flex-grow: ${(props) => props.flexGrow};\n  text-decoration: none;\n  appearance: none;\n  padding: unset;\n  box-sizing: unset;\n\n  background-color: unset;\n  color: unset;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flexbox, Text, Divider } from 'kvl-react-ui';\nimport { Clickable } from '../presentation/Clickable';\n\nexport const MultiSelect = ({ groups, selectedGroup, onSelect }) => {\n  let maxLength = 0;\n\n  groups.forEach(\n    (group) => (maxLength = Math.max(group.name.length, maxLength))\n  );\n  return (\n    <Flexbox style={{ border: '1px solid #777' }} flexGrow={1}>\n      {groups.map((group, idx) => (\n        <React.Fragment key={`${group.name}-${idx}`}>\n          <Clickable\n            id={`covidmap-multiselect-item-${group.name.toLowerCase()}`}\n            onClick={() => onSelect(group)}\n            flexGrow={1}\n          >\n            <Flexbox\n              flexGrow={1}\n              minWidth={`${maxLength}ch`}\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              backgroundColor={selectedGroup.name === group.name && '#777'}\n            >\n              <Text centerAlign padding=\"0.2em\" fontSize=\"detail\">\n                {group.name.toUpperCase()}\n              </Text>\n            </Flexbox>\n          </Clickable>\n          {idx !== groups.length - 1 && <Divider vertical />}\n        </React.Fragment>\n      ))}\n    </Flexbox>\n  );\n};\n\nMultiSelect.propTypes = {\n  groups: PropTypes.array,\n  selectedGroup: PropTypes.object,\n  onSelect: PropTypes.func,\n};\n","import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, inRange } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Flexbox, Spacer } from 'kvl-react-ui';\n\nimport { LayerItem } from '../presentation/LayerItem.js';\nimport { MultiSelect } from './MultiSelect.js';\n\nimport {\n  updateActiveLayers,\n  setActiveLayers,\n  selectLayerGroup,\n  setActiveView,\n} from '../../state/ui/map.js';\n\nexport const Layers = ({ layers, activeLayers, collapsed }) => {\n  const dispatch = useDispatch();\n  const selectedGroup = useSelector((state) => state.ui.map.selectedLayerGroup);\n  const activeView = useSelector((state) => state.ui.map.activeView);\n  const views = useSelector((state) => state.ui.map.views);\n  const groups = useSelector((state) => state.ui.map.layerGroups);\n  const map = useSelector((state) => state.ui.map.map);\n  const zoomLevel = map ? map.getZoom() : 0;\n  const filteredLayers = useMemo(\n    () =>\n      layers.filter(\n        (layer) =>\n          selectedGroup.layers.includes(layer.id) &&\n          inRange(\n            zoomLevel,\n            ...get(layer, 'legend.zoomLevels', [\n              Number.NEGATIVE_INFINITY,\n              Number.POSITIVE_INFINITY,\n            ])\n          )\n      ),\n    [layers, zoomLevel, selectedGroup.layers]\n  );\n\n  const onUpdateActiveLayers = useCallback(\n    (layer) => {\n      if (layer?.legend?.mutex && !activeLayers.includes(layer.id)) {\n        const mutexLayers = filteredLayers\n          .filter((layer) => layer?.legend?.mutex)\n          .map((layer) => layer.id);\n        const newLayers = activeLayers.filter(\n          (layer) => !mutexLayers.includes(layer)\n        );\n        dispatch(setActiveLayers(newLayers));\n      }\n      dispatch(updateActiveLayers(layer.id));\n    },\n    [dispatch, activeLayers, filteredLayers]\n  );\n\n  const onSelectView = useCallback(\n    (view) => {\n      dispatch(setActiveView(view));\n    },\n    [dispatch]\n  );\n  const onSelectGroup = useCallback(\n    (group) => {\n      dispatch(selectLayerGroup(group));\n    },\n    [dispatch]\n  );\n\n  return (\n    <Flexbox flexDirection=\"column\">\n      {!collapsed ? (\n        <>\n          <MultiSelect\n            groups={views}\n            selectedGroup={activeView}\n            onSelect={onSelectView}\n          />\n          <MultiSelect\n            groups={groups || []}\n            selectedGroup={selectedGroup}\n            onSelect={onSelectGroup}\n          />\n          <Spacer height=\"0.7em\" />\n        </>\n      ) : null}\n      <Flexbox flexWrap=\"wrap\" wrapMargin=\"0.5em\">\n        {filteredLayers.map((layer) =>\n          layer.legend === undefined ? null : (\n            <LayerItem\n              key={layer.id}\n              onClick={() => onUpdateActiveLayers(layer)}\n              config={layer.legend}\n              active={activeLayers.includes(layer.id)}\n              collapsed={collapsed}\n            />\n          )\n        )}\n      </Flexbox>\n    </Flexbox>\n  );\n};\n\nLayers.propTypes = {\n  layers: PropTypes.array,\n  activeLayers: PropTypes.array,\n  collapsed: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { SquareButton } from 'kvl-react-ui';\n\nexport const DrawerButton = ({ collapsed, ...props }) => (\n  <SquareButton {...props}>\n    <FontAwesomeIcon\n      color=\"#eee\"\n      icon={collapsed ? faPlusSquare : faMinusSquare}\n      fixedWidth\n    />\n  </SquareButton>\n);\n\nDrawerButton.propTypes = {\n  collapsed: PropTypes.bool,\n  setCollapsed: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flexbox, Text } from 'kvl-react-ui';\n\nexport const AliveStatusWait = ({ status }) => (\n  <Flexbox\n    backgroundColor=\"#222\"\n    position=\"absolute\"\n    top=\"0\"\n    bottom=\"0\"\n    left=\"0\"\n    right=\"0\"\n  >\n    <Text\n      position=\"absolute\"\n      margin=\"0 auto\"\n      top=\"50%\"\n      zIndex={100}\n      width=\"100%\"\n      centerAlign\n      fontSize=\"title\"\n      color=\"#eee\"\n    >\n      {status.error\n        ? `API server failed to respond`\n        : `Waiting for API server to wake up...`}\n    </Text>\n  </Flexbox>\n);\n\nAliveStatusWait.propTypes = {\n  status: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Flexbox, Text } from 'kvl-react-ui';\n\nconst prettyPrint = (number) => {\n  if (number >= 1e9) {\n    return `${number / 1e9}B`;\n  }\n  if (number >= 1e6) {\n    return `${number / 1e6}M`;\n  }\n  if (number >= 1e3) {\n    return `${number / 1e3}k`;\n  }\n  return number;\n};\n\nconst boxDimension = '1.5rem';\n\nexport const Legend = ({ fillColor, gradient }) => (\n  <Flexbox flexDirection=\"column\" color=\"#222\" backgroundColor=\"#eee\">\n    <Flexbox flexDirection=\"row\">\n      {gradient.map((step) => (\n        <Flexbox\n          key={step.magnitude}\n          height={boxDimension}\n          width={boxDimension}\n          backgroundColor={step.color || fillColor}\n          opacity={step.opacity}\n        />\n      ))}\n    </Flexbox>\n    <Flexbox flexDirection=\"row\">\n      {gradient.map((step) => (\n        <Text\n          key={step.magnitude}\n          fontSize=\"0.6rem\"\n          color=\"#222\"\n          centerAlign\n          width={boxDimension}\n        >\n          {prettyPrint(step.magnitude)}\n        </Text>\n      ))}\n    </Flexbox>\n  </Flexbox>\n);\n\nLegend.propTypes = {\n  fillColor: PropTypes.string,\n  gradient: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { get, inRange } from 'lodash';\nimport { Legend } from '.';\nimport { FloatingPanel } from '../presentation/FloatingPanel';\n\nexport const LegendBox = ({ activeLayers }) => {\n  const layers = useSelector((state) => state.ui.map.layers);\n  const selectedGroup = useSelector((state) => state.ui.map.selectedLayerGroup);\n  const map = useSelector((state) => state.ui.map.map);\n  const zoomLevel = map ? map.getZoom() : 0;\n  const legendLayers = layers.filter(\n    (layer) =>\n      selectedGroup.layers.includes(layer.id) &&\n      activeLayers.includes(layer.id) &&\n      get(layer, 'legend.gradient') &&\n      inRange(\n        zoomLevel,\n        ...get(layer, 'legend.zoomLevels', [\n          Number.NEGATIVE_INFINITY,\n          Number.POSITIVE_INFINITY,\n        ])\n      )\n  );\n  const width = 48 * legendLayers.length;\n\n  return (\n    <FloatingPanel\n      flexDirection=\"row\"\n      width=\"min-content\"\n      backgroundColor=\"transparent\"\n      zIndex={50}\n      position=\"absolute\"\n      right={`calc(50% - ${width}px)`}\n      bottom=\"0\"\n      padding=\"0\"\n      marginBetween=\"1.5em\"\n    >\n      {legendLayers.map((layer) => (\n        <Legend\n          key={layer.legend.label}\n          fillColor={layer.legend.fillColor}\n          gradient={layer.legend.gradient}\n        />\n      ))}\n    </FloatingPanel>\n  );\n};\n\nLegendBox.propTypes = {\n  activeLayers: PropTypes.array,\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst usCovidDataSlice = createSlice({\n  name: 'usCovidData',\n  initialState: {\n    totals: [\n      {\n        date: undefined,\n        cases: 0,\n        deaths: 0,\n      },\n    ],\n    casesByCounty: {},\n    byState: {},\n    stateAndCounty: {},\n    badRecords: [],\n    population: {},\n  },\n  reducers: {\n    load: (state, action) => {\n      state.casesByCounty = action.payload;\n      state.stateAndCounty = { ...state.byState, ...state.casesByCounty };\n    },\n    addBoundaries: (state, action) => {\n      state.casesByCounty = { ...state.casesByCounty, ...action.payload };\n      state.stateAndCounty = { ...state.byState, ...state.casesByCounty };\n    },\n    addBoundary: (state, action) => {\n      const boundary = action.payload;\n      state.casesByCounty[parseInt(boundary.properties.FEATURE_ID)] = [\n        {\n          date: undefined,\n          cases: 0,\n          deaths: 0,\n          county: boundary.properties.NAME,\n          state: boundary.properties.STATE,\n        },\n      ];\n      state.stateAndCounty = { ...state.byState, ...state.casesByCounty };\n    },\n    insertStatus: (state, action) => {\n      Object.entries(action.payload).forEach(([id, statusArray]) => {\n        if (id in state.casesByCounty) {\n          state.casesByCounty[id] = [\n            state.casesByCounty[id][0],\n            ...statusArray,\n            ...state.casesByCounty[id].slice(1),\n          ];\n        } else {\n          state.casesByCounty[id] = statusArray;\n        }\n      });\n      state.stateAndCounty = { ...state.byState, ...state.casesByCounty };\n    },\n    appendStatus: (state, action) => {\n      Object.entries(action.payload).forEach(([id, statusArray]) => {\n        if (id in state.casesByCounty) {\n          state.casesByCounty[id] = [\n            ...state.casesByCounty[id],\n            ...statusArray,\n          ];\n        } else {\n          state.casesByCounty[id] = statusArray;\n        }\n      });\n    },\n    appendBadRecords: (state, action) => {\n      state.badRecords = action.payload;\n    },\n    setTotals: (state, action) => {\n      state.totals = [\n        {\n          date: undefined,\n          cases: 0,\n          deaths: 0,\n        },\n        ...action.payload.data,\n      ];\n    },\n    setPopulation: (state, action) => {\n      let newState = {};\n      action.payload.population.forEach(\n        (record) =>\n          (newState[\n            record.COUNTY === '000'\n              ? parseInt(record.STATE)\n              : parseInt(record.FIPS)\n          ] = record)\n      );\n      state.population = newState;\n    },\n    setByState: (state, action) => {\n      const newState = {};\n      action.payload.data.forEach((record) => {\n        const id = parseInt(record.fips);\n        if (id in newState) {\n          newState[id].push(record);\n        } else {\n          newState[id] = [record];\n        }\n      });\n      state.byState = newState;\n      state.stateAndCounty = { ...newState, ...state.casesByCounty };\n    },\n  },\n});\n\nexport const {\n  load,\n  appendStatus,\n  insertStatus,\n  appendBadRecords,\n  addBoundary,\n  addBoundaries,\n  setTotals,\n  setPopulation,\n  setByState,\n} = usCovidDataSlice.actions;\nexport default usCovidDataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst worldCovidDataSlice = createSlice({\n  name: 'worldCovidData',\n  initialState: {\n    byCountry: {},\n    population: {},\n    totals: null,\n  },\n  reducers: {\n    load: (state, action) => {\n      state.byCountry = action.payload;\n    },\n    setPopulation: (state, action) => {\n      state.population = action.payload;\n    },\n    setTotals: (state, action) => {\n      state.totals = action.payload;\n    },\n  },\n});\n\nexport const { load, setTotals, setPopulation } = worldCovidDataSlice.actions;\nexport default worldCovidDataSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst apiServerStatusSlice = createSlice({\n  name: 'apiServerStatus',\n  initialState: {\n    aliveCheck: {\n      pending: null,\n      error: null,\n      complete: null,\n      success: null,\n      result: null,\n      object: null,\n    },\n  },\n  reducers: {\n    aliveCheckPending: (state) => {\n      state.aliveCheck = {\n        pending: true,\n        error: null,\n        complete: false,\n        success: null,\n        result: null,\n        object: null,\n      };\n    },\n    aliveCheckPassed: (state, action) => {\n      state.aliveCheck = {\n        pending: false,\n        error: false,\n        complete: true,\n        success: true,\n        result: action.payload,\n        object: null,\n      };\n    },\n    aliveCheckFailed: (state, action) => {\n      state.aliveCheck = {\n        pending: false,\n        error: true,\n        complete: true,\n        success: false,\n        result: action.payload,\n        object: null,\n      };\n    },\n  },\n});\n\nexport const {\n  aliveCheckPending,\n  aliveCheckPassed,\n  aliveCheckFailed,\n} = apiServerStatusSlice.actions;\nexport default apiServerStatusSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst usCasesByCountySlice = createSlice({\n  name: 'usCasesByCounty',\n  initialState: {\n    pending: null,\n    error: null,\n    complete: null,\n    success: null,\n    result: null,\n    object: null,\n    progress: null,\n  },\n  reducers: {\n    requestPending: (state, action) => {\n      state.pending = true;\n      state.error = null;\n      state.complete = false;\n      state.success = null;\n      state.result = null;\n      state.object = null;\n      state.progress = action.payload || 0;\n    },\n    requestSucceeded: (state, action) => {\n      state.pending = false;\n      state.error = false;\n      state.complete = true;\n      state.success = true;\n      state.result = action.payload;\n      state.object = null;\n      state.progress = 1;\n    },\n    requestFailed: (state, action) => {\n      state.pending = false;\n      state.error = true;\n      state.complete = true;\n      state.success = false;\n      state.result = action.payload;\n      state.object = null;\n      state.progress = null;\n    },\n  },\n});\n\nexport const {\n  requestPending,\n  requestSucceeded,\n  requestFailed,\n} = usCasesByCountySlice.actions;\n\nexport default usCasesByCountySlice.reducer;\n","import { get } from 'lodash';\nimport {\n  addBoundaries,\n  insertStatus,\n  appendBadRecords,\n  setTotals,\n  setPopulation,\n  setByState,\n} from '../state/core/usCovidData.js';\nimport {\n  load as worldDataLoad,\n  setPopulation as worldSetPopulation,\n  setTotals as worldSetTotals,\n} from '../state/core/worldCovidData.js';\nimport {\n  aliveCheckPending,\n  aliveCheckPassed,\n  aliveCheckFailed,\n} from '../state/core/apiServerStatus.js';\n\nimport * as usCasesByCountyStatus from '../state/request/usCasesByCounty.js';\n\nexport const fetchUsCasesByCounty = async (startIndex, pageSize, reverse) => {\n  const response = await fetch(\n    `/api/us-cases-by-county?startIndex=${startIndex}&pageSize=${pageSize}&reverse=${reverse}`\n  );\n\n  //HACK: csvtojson adds comma to last json array element, remove it\n  let text = await response.text();\n  if (text[text.length - 4] === ',') text = text.slice(0, -4) + text.slice(-3);\n  return JSON.parse(text);\n};\n\nexport const fetchGlobalCovidTotals = async () => {\n  return (await fetch('/api/global-covid-totals')).json();\n};\n\nexport const fetchUsCovidByState = async () => {\n  return (await fetch('/api/us-covid-by-state')).json();\n};\n\nexport const fetchWorldCovidData = async () => {\n  return fetch('/api/global-covid-by-country');\n};\n\nexport const fetchUsTotals = async () => {\n  const response = await fetch(`/api/us-totals`);\n  return response.json();\n};\n\nexport const fetchWorldPopulation = async () => {\n  const response = await fetch(`/resources/world-population-est-2019.json`);\n  return response.json();\n};\n\nexport const fetchUsPopulation = async () => {\n  const response = await fetch(`/resources/us-estimated-population-2019.json`);\n  return response.json();\n};\n\nexport const fetchUsCovidBoundaries = async (resolution) => {\n  const response = await fetch(`/api/us-counties?resolution=${resolution}`);\n  return response.json();\n};\n\nexport const fetchAliveCheck = async () => {\n  return fetch(`/api/alive`);\n};\n\nconst sortWorldCasesByCountry = (data) => {\n  const sorted = {};\n  data.forEach((status) => {\n    const countryId = status.Country_code;\n    if (countryId in sorted) {\n      sorted[countryId].push({\n        date: status.Date_reported,\n        cases: status.Cumulative_cases,\n        deaths: status.Cumulative_deaths,\n        newCases: status.New_cases,\n        newDeaths: status.New_deaths,\n        country: status.Country,\n      });\n    } else {\n      sorted[countryId] = [\n        {\n          date: status.Date_reported,\n          cases: status.Cumulative_cases,\n          deaths: status.Cumulative_deaths,\n          newCases: status.New_cases,\n          newDeaths: status.New_deaths,\n          country: status.Country,\n        },\n      ];\n    }\n  });\n  return sorted;\n};\n\nconst sortCasesByCounty = (newCases) => async (dispatch) => {\n  let badRecords = [];\n  let newStatus = {};\n\n  newCases.forEach((status) => {\n    const countyId = parseInt(status.fips);\n\n    if (isNaN(countyId)) {\n      badRecords.push(status);\n    } else {\n      const countyId = parseInt(status.fips);\n\n      if (countyId in newStatus) {\n        newStatus[countyId].push({\n          date: status.date,\n          cases: status.cases,\n          deaths: status.deaths,\n          county: status.county,\n          state: status.state,\n        });\n      } else {\n        newStatus[countyId] = [\n          {\n            date: status.date,\n            cases: status.cases,\n            deaths: status.deaths,\n            county: status.county,\n            state: status.state,\n          },\n        ];\n      }\n    }\n  });\n\n  dispatch(insertStatus(newStatus));\n  dispatch(appendBadRecords(badRecords));\n};\n\nexport const initializeFeatureState = () => async (dispatch) => {\n  let done = false;\n  let startIndex = 0;\n  //HACK: We're getting the results from a stream now\n  let pageSize = 1e12;\n\n  dispatch(aliveCheckPending());\n  try {\n    const aliveResponse = await fetchAliveCheck();\n    if (aliveResponse.ok) {\n      dispatch(aliveCheckPassed(await aliveResponse.text()));\n    } else {\n      dispatch(aliveCheckFailed(aliveResponse.error(aliveResponse.error())));\n    }\n  } catch (e) {\n    dispatch(aliveCheckFailed(e));\n  }\n\n  const totalsPromise = fetchUsTotals();\n  const populationPromise = fetchUsPopulation();\n  const worldDataPromise = fetchWorldCovidData();\n  const worldPopulationPromise = fetchWorldPopulation();\n  const globalCovidTotalsPromise = fetchGlobalCovidTotals();\n  const byStatePromise = fetchUsCovidByState();\n\n  const boundaries = await fetchUsCovidBoundaries('20m');\n  const boundaryStates = {};\n  boundaries.features.forEach((boundary) => {\n    boundaryStates[parseInt(boundary.properties.FEATURE_ID)] = [\n      {\n        date: undefined,\n        cases: 0,\n        deaths: 0,\n        county: boundary.properties.NAME,\n        state: boundary.properties.STATE,\n      },\n    ];\n  });\n  dispatch(addBoundaries(boundaryStates));\n  dispatch(\n    worldDataLoad(\n      sortWorldCasesByCountry((await (await worldDataPromise).json()).data)\n    )\n  );\n\n  dispatch(setByState(await byStatePromise));\n\n  dispatch(setTotals(await totalsPromise));\n  dispatch(setPopulation(await populationPromise));\n\n  dispatch(worldSetTotals(await globalCovidTotalsPromise));\n  dispatch(worldSetPopulation(await worldPopulationPromise));\n\n  try {\n    dispatch(usCasesByCountyStatus.requestPending(0));\n    while (!done) {\n      const newCases = await fetchUsCasesByCounty(startIndex, pageSize, true);\n      const data = newCases.data || newCases;\n      dispatch(sortCasesByCounty(data));\n      done = data.length < pageSize;\n      startIndex += pageSize;\n      pageSize *= 2;\n      if (!done) {\n        dispatch(\n          usCasesByCountyStatus.requestPending(\n            startIndex / get(newCases, 'meta.totalCount', NaN)\n          )\n        );\n      }\n    }\n    dispatch(usCasesByCountyStatus.requestSucceeded());\n  } catch (e) {\n    dispatch(usCasesByCountyStatus.requestFailed(e));\n  }\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport mapboxgl from 'mapbox-gl';\nimport { findLast, get } from 'lodash';\n\nimport {\n  setHold,\n  setSelectedFeature,\n  beginMapInitialization,\n  beginLoadingMap,\n  mapFinishedLoading,\n  beginLoadingSources,\n  sourcesFinishedLoading,\n} from '../../state/ui/map.js';\nimport { loadingStatus } from '../../state/util/loadingStatus.js';\n\nimport {\n  sourceAdmin0,\n  sourceUsCounties,\n  sourceUsStates,\n  mouseLayers,\n} from '../../mapboxConfig.js';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoicnVva3ZsIiwiYSI6ImNrZDA3NW9oNTBhanYyeXBjOXBjazloazUifQ.qwtn31dojyeKrFMrcRAjBw';\n\nconst centroidState = (twoWeeksBefore, population) => (state, date) => {\n  const recentData = findLast(state, (status) => status.date <= date.end);\n  const twoWeeksPrior = findLast(\n    state,\n    (status) => status.date <= twoWeeksBefore\n  );\n  return {\n    firstCase: get(state, [1, 'date']) === date.end,\n    hotspot:\n      parseInt(get(recentData, 'cases', 0)) /\n        parseInt(get(twoWeeksPrior, 'cases', 0)) >\n        1.2 && parseInt(get(recentData, 'cases', 0)) > 100,\n    perCapitaHotspot:\n      (parseInt(get(recentData, 'cases', 0)) -\n        parseInt(get(twoWeeksPrior, 'cases', 0))) /\n        parseInt(population) >\n      0.01,\n  };\n};\n\nconst choroplethState = (population) => (state, date) => {\n  const recentData = findLast(state, (status) => status.date <= date.end);\n  const beginRangeData = date.start\n    ? findLast(state, (status) => status.date <= date.start)\n    : null;\n  const beginCases = date.start ? parseInt(get(beginRangeData, 'cases', 0)) : 0;\n  const beginDeaths = date.start\n    ? parseInt(get(beginRangeData, 'deaths', 0))\n    : 0;\n  const cases = parseInt(get(recentData, 'cases', 0)) - beginCases;\n  const deaths = parseInt(get(recentData, 'deaths', 0)) - beginDeaths;\n\n  return {\n    casesPerCapita: population > 0 ? cases / population : 0,\n    deathsPerCapita: population > 0 ? deaths / population : 0,\n    cases: cases,\n    deaths: deaths,\n    deathRate: deaths / cases,\n    population: population,\n  };\n};\n\nconst setFeatureState = (\n  map,\n  featureId,\n  mapSource,\n  sourceLayer,\n  state,\n  date,\n  stateFunc\n) => {\n  map.setFeatureState(\n    {\n      source: mapSource,\n      sourceLayer: sourceLayer,\n      id: featureId,\n    },\n    stateFunc(state, date)\n  );\n};\n\nconst selectFeature = (\n  theMap,\n  sourceConfig,\n  featureId,\n  selected,\n  hold = false\n) => {\n  if (featureId != null) {\n    theMap.setFeatureState(\n      {\n        ...sourceConfig.source,\n        id: featureId,\n      },\n      { active: selected, hold }\n    );\n  }\n};\n\nconst MapboxMap = ({ sources, activeLayers, layers, date, ...props }) => {\n  const dispatch = useDispatch();\n  const map = useSelector((state) => state.ui.map.map);\n  const initialized = useSelector(\n    (state) => state.ui.map.sourcesLoadStatus.status === loadingStatus.complete\n  );\n  const usPopulation = useSelector(\n    (state) => state.core.usCovidData.population\n  );\n  const worldPopulation = useSelector(\n    (state) => state.core.worldCovidData.population\n  );\n  const selectedGroup = useSelector((state) => state.ui.map.selectedLayerGroup);\n  const usData = useSelector((state) => state.core.usCovidData.stateAndCounty);\n  const worldData = useSelector((state) => state.core.worldCovidData.byCountry);\n  const activeView = useSelector((state) => state.ui.map.activeView);\n  const population =\n    activeView.name.toLowerCase() === 'world' ? worldPopulation : usPopulation;\n\n  const mapContainer = useRef(null);\n\n  const filteredActiveLayers = activeLayers.filter((layer) =>\n    selectedGroup.layers.includes(layer)\n  );\n  useEffect(() => {\n    if (map && initialized) {\n      layers.forEach((layer) => {\n        if (map.getLayer(layer.id)) {\n          map.setLayoutProperty(\n            layer.id,\n            'visibility',\n            filteredActiveLayers.includes(layer.id) && worldData && usData\n              ? 'visible'\n              : 'none'\n          );\n        }\n      });\n    }\n  }, [map, initialized, layers, filteredActiveLayers, worldData, usData]);\n\n  useEffect(() => {\n    const lat = 39;\n    const lng = -95;\n    const zoom = 3;\n    dispatch(beginMapInitialization());\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [lng, lat],\n      zoom: zoom,\n      minZoom: 3,\n      maxPitch: 0,\n      dragRotate: false,\n      touchPitch: false,\n      pitchWithRotate: false,\n    });\n    map.dragRotate.disable();\n    map.touchZoomRotate.disableRotation();\n    dispatch(beginLoadingMap(map));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (map) {\n      map.on('load', async () => {\n        dispatch(mapFinishedLoading());\n        dispatch(beginLoadingSources());\n        await Promise.all([\n          new Promise((resolve, reject) =>\n            map.loadImage('/img/coronavirus-green-128.png', (error, image) => {\n              if (error) reject(error);\n              map.addImage('corona-green', image);\n              resolve();\n            })\n          ),\n          new Promise((resolve, reject) =>\n            map.loadImage('/img/coronavirus-red-128.png', (error, image) => {\n              if (error) reject(error);\n              map.addImage('corona-red', image);\n              resolve();\n            })\n          ),\n        ]);\n\n        sources.forEach((source) => map.addSource(source.id, source.config));\n        const detectLoadedSources = () => {\n          const init = sources.reduce(\n            (loaded, source) => loaded && map.isSourceLoaded(source.id),\n            true\n          );\n          if (init) {\n            map.off('sourcedata', detectLoadedSources);\n            dispatch(sourcesFinishedLoading());\n          }\n        };\n        map.on('sourcedata', detectLoadedSources);\n      });\n    }\n  }, [map, sources, layers, dispatch]);\n\n  useEffect(() => {\n    if (map && initialized) {\n      layers.forEach((layer) => {\n        if (map.getLayer(layer.id)) map.removeLayer(layer.id);\n        map.addLayer(layer);\n        map.setLayoutProperty(layer.id, 'visibility', 'none');\n      });\n    }\n  }, [layers, map, initialized]);\n\n  useEffect(() => {\n    if (initialized && worldData) {\n      /*const twoWeeksAgo = moment(date)\n        .subtract(2, 'weeks')\n        .format('YYYY-MM-DD');*/\n      for (const [key, value] of Object.entries(worldData)) {\n        setFeatureState(\n          map,\n          key,\n          ...Object.values(sourceAdmin0),\n          value,\n          date,\n          choroplethState(\n            parseInt(get(population, [key, 'POPESTIMATE2019'], 0))\n          )\n        );\n        /*setFeatureState(\n          map,\n          key,\n          'us-county-centroids',\n          undefined,\n          value,\n          date,\n          centroidState(\n            twoWeeksAgo,\n            parseInt(get(population, [key, 'POPESTIMATE2019'], 0))\n          )\n        );*/\n      }\n    }\n  }, [initialized, date, worldData, map, population]);\n\n  useEffect(() => {\n    if (initialized && usData) {\n      const twoWeeksAgo = moment(date.end)\n        .subtract(2, 'weeks')\n        .format('YYYY-MM-DD');\n      for (const [key, value] of Object.entries(usData)) {\n        if (key.length <= 2) {\n          setFeatureState(\n            map,\n            key,\n            ...Object.values(sourceUsStates),\n            value,\n            date,\n            choroplethState(\n              parseInt(get(population, [key, 'POPESTIMATE2019'], 0))\n            )\n          );\n        } else {\n          setFeatureState(\n            map,\n            key,\n            ...Object.values(sourceUsCounties),\n            value,\n            date,\n            choroplethState(\n              parseInt(get(population, [key, 'POPESTIMATE2019'], 0))\n            )\n          );\n          setFeatureState(\n            map,\n            key,\n            'us-county-centroids',\n            undefined,\n            value,\n            date,\n            centroidState(\n              twoWeeksAgo,\n              parseInt(get(population, [key, 'POPESTIMATE2019'], 0))\n            )\n          );\n        }\n      }\n    }\n  }, [initialized, date, usData, map, population]);\n\n  useEffect(() => {\n    let selectedFeature = null;\n    let hold = null;\n    const selectNewFeature = (theMap, sourceConfig, featureId, newHold) => {\n      if (featureId !== selectedFeature) {\n        selectFeature(theMap, sourceConfig, selectedFeature, false, newHold);\n        selectedFeature = featureId;\n        dispatch(setSelectedFeature(featureId));\n      }\n      if (featureId != null) {\n        selectFeature(theMap, sourceConfig, featureId, true, newHold);\n      }\n    };\n\n    const onMouseUp = (sourceConfig) => (e) => {\n      if (map && initialized) {\n        const theFeature = e.features.find(\n          (feature) => feature.layer.id === sourceConfig.layer\n        );\n        if (theFeature.id === undefined) {\n          selectNewFeature(map, sourceConfig, null, false);\n          dispatch(setHold(false));\n          hold = false;\n        } else if (selectedFeature !== theFeature.id) {\n          selectNewFeature(map, sourceConfig, theFeature.id, true);\n          dispatch(setHold(true));\n          hold = true;\n        } else {\n          selectNewFeature(map, sourceConfig, theFeature.id, !hold);\n          dispatch(setHold(!hold));\n          hold = !hold;\n        }\n      }\n    };\n\n    const onMouseMove = (sourceConfig) => (e) => {\n      if (map && initialized && !hold) {\n        if (e.features.length > 0) {\n          const theFeature = e.features.find(\n            (feature) => feature.layer.id === sourceConfig.layer\n          );\n          selectNewFeature(map, sourceConfig, theFeature.id);\n        }\n      }\n    };\n\n    const onMouseLeave = (sourceConfig) => () => {\n      if (map && initialized && !hold) {\n        selectNewFeature(map, sourceConfig, null);\n      }\n    };\n\n    const handlers = [];\n    mouseLayers.forEach((base) => {\n      if (map && initialized) {\n        let handler = {\n          event: 'mouseup',\n          layer: base.layer,\n          handler: onMouseUp(base),\n        };\n        map.on(handler.event, handler.layer, handler.handler);\n        handlers.push({ ...handler });\n\n        handler = {\n          event: 'mousemove',\n          layer: base.layer,\n          handler: onMouseMove(base),\n        };\n        map.on(handler.event, handler.layer, handler.handler);\n        handlers.push({ ...handler });\n\n        handler = {\n          event: 'mouseleave',\n          layer: base.layer,\n          handler: onMouseLeave(base),\n        };\n        map.on(handler.event, handler.layer, handler.handler);\n        handlers.push({ ...handler });\n      }\n    });\n    return () => {\n      handlers.forEach((handler) => {\n        map.off(handler.event, handler.layer, handler.handler);\n      });\n    };\n  }, [map, initialized, dispatch]);\n\n  return <div ref={mapContainer} {...props} />;\n};\n\nMapboxMap.propTypes = {\n  activeLayers: PropTypes.array,\n  sources: PropTypes.array,\n  layers: PropTypes.array,\n  date: PropTypes.object,\n};\n\nexport default MapboxMap;\n","import styled from 'styled-components';\nimport Map from '../core/Map.js';\n\nconst FullscreenMap = styled(Map)`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default FullscreenMap;\n","import React, { useEffect, useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport ReactGA from 'react-ga';\n\nimport {\n  ControlPanel,\n  About,\n  AliveStatusWait,\n  LegendBox,\n} from './components/structural';\nimport { Flexbox } from 'kvl-react-ui';\n\nimport { initializeFeatureState } from './workflows/fetchCovidData.js';\n\nimport FullscreenMap from './components/presentation/FullscreenMap.js';\n\nimport { layers, sources } from './mapboxConfig.js';\n\nimport { setShowAbout } from './state/ui/controlPanel.js';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const aliveStatus = useSelector(\n    (state) => state.core.apiServerStatus.aliveCheck\n  );\n  const collapsed = useSelector((state) => state.ui.controlPanel.collapsed);\n  const showAbout = useSelector((state) => state.ui.controlPanel.showAbout);\n  const layersHidden = useSelector(\n    (state) => state.ui.controlPanel.layersHidden\n  );\n  const date = useSelector((state) => state.core.time.current);\n  const duration = useSelector((state) => state.core.time.duration);\n  const activeLayers = useSelector((state) => state.ui.map.activeLayers);\n\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.pageview(window.location.pathname + window.location.search);\n    }\n  }, []);\n\n  const theMoment = useMemo(() => moment(date, 'x'), [date]);\n  const dateRange = useMemo(\n    () => ({\n      start: duration\n        ? moment(theMoment).subtract(duration).format('YYYY-MM-DD')\n        : null,\n      end: theMoment.format('YYYY-MM-DD'),\n    }),\n    [theMoment, duration]\n  );\n\n  const onShowAbout = useCallback(\n    (show) => {\n      dispatch(setShowAbout(show));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    dispatch(initializeFeatureState());\n  }, [dispatch]);\n\n  return aliveStatus.success ? (\n    <>\n      <ControlPanel\n        layers={layers}\n        activeLayers={activeLayers}\n        date={theMoment}\n        onShowAbout={() => onShowAbout(true)}\n      />\n      <FullscreenMap\n        date={dateRange}\n        sources={sources}\n        layers={layers}\n        activeLayers={activeLayers}\n      />\n      {collapsed || layersHidden ? (\n        <LegendBox activeLayers={activeLayers} />\n      ) : null}\n      {showAbout ? (\n        <Flexbox position=\"absolute\" zIndex={100} maxHeight=\"100%\">\n          <About onHide={() => onShowAbout(false)} />\n        </Flexbox>\n      ) : null}\n    </>\n  ) : (\n    <AliveStatusWait status={aliveStatus} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst Console = console;\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          Console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              Console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              Console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      Console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      Console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        Console.error(error.message);\n      });\n  }\n}\n","const Console = console;\n\nconst round = (number) => Math.round(number * 100) / 100;\n\nconst monitorReducerEnhancer = (createStore) => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now();\n    const newState = reducer(state, action);\n    const end = performance.now();\n    const diff = round(end - start);\n\n    Console.log('reducer process time:', diff);\n\n    return newState;\n  };\n\n  return createStore(monitoredReducer, initialState, enhancer);\n};\n\nexport default monitorReducerEnhancer;\n","const Console = console;\n\nconst logger = (store) => (next) => (action) => {\n  Console.group(action.type);\n  Console.info('dispatching', action);\n  let result = next(action);\n  Console.log('next state', store.getState());\n  Console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { tick } from '../state/core/time.js';\n\nconst updateCurrentTime = (timestamp, previous) => (dispatch, getState) => {\n  const state = getState();\n  const time = state.core.time;\n  let delay = 100;\n  if (!time.pause) {\n    delay = 0;\n    if (!previous) {\n      previous = timestamp;\n    }\n    dispatch(tick(timestamp - previous));\n  }\n\n  window.requestAnimationFrame((next) =>\n    setTimeout(() => dispatch(updateCurrentTime(next, timestamp)), delay)\n  );\n};\n\nexport const start = () => (dispatch) =>\n  window.requestAnimationFrame((timestamp) =>\n    dispatch(updateCurrentTime(timestamp))\n  );\n","import { combineReducers } from '@reduxjs/toolkit';\nimport usCovidData from './usCovidData.js';\nimport worldCovidData from './worldCovidData.js';\nimport time from './time.js';\nimport apiServerStatus from './apiServerStatus.js';\n\nexport default combineReducers({\n  usCovidData,\n  worldCovidData,\n  time,\n  apiServerStatus,\n});\n","import { combineReducers } from '@reduxjs/toolkit';\nimport map from './map.js';\nimport controlPanel from './controlPanel.js';\n\nexport default combineReducers({\n  map,\n  controlPanel,\n});\n","import { combineReducers } from '@reduxjs/toolkit';\nimport usCasesByCounty from './usCasesByCounty.js';\n\nexport default combineReducers({\n  usCasesByCounty,\n});\n","import { combineReducers } from '@reduxjs/toolkit';\nimport core from './core';\nimport ui from './ui';\nimport request from './request';\n\nexport default combineReducers({\n  core,\n  ui,\n  request,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport TagManager from 'react-gtm-module';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { start as startTimeService } from './services/time.js';\n\nimport { Provider } from 'react-redux';\n\nimport configureAppStore from './state/configureAppStore.js';\n\nconst store = configureAppStore();\n\nstore.dispatch(startTimeService());\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-55310450-2');\n  TagManager.initialize({ gtmId: 'GTM-W923ZS3' });\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport monitorReducersEnhancer from './enhancers/monitorReducer.js';\nimport loggerMiddleware from './middleware/logger.js';\nimport rootReducer from './rootReducer.js';\nimport { get } from 'lodash';\n\nconst actionSanitizer = (action) =>\n  action.type === 'usCovidData/insertStatus' ||\n  action.type === 'usCovidData/appendBadRecords' ||\n  action.type === 'usCovidData/addBoundaries' ||\n  action.type === 'usCovidData/setTotals' ||\n  action.type === 'usCovidData/setPopulation' ||\n  action.type === 'worldCovidData/load' ||\n  action.type === 'worldCovidData/setTotals' ||\n  action.type === 'worldCovidData/setPopulation'\n    ? {\n        ...action,\n        payload: {\n          keys: Object.keys(action.payload),\n          length: get(Object.keys(action.payload), 'length'),\n        },\n      }\n    : action;\n\nconst stateSanitizer = (state) => {\n  let uiState = state.ui;\n  if (state.ui.map.map) {\n    const mapState = {\n      ...state.ui.map,\n      map: '<<MAP_OBJECT>>',\n    };\n    uiState = { ...state.ui, map: mapState };\n  }\n\n  let coreState = { ...state.core };\n  if (state.core.worldCovidData) {\n    const worldCovidState = {\n      ...state.core.worldCovidData,\n      byCountry: {\n        keys: Object.keys(get(state, 'core.worldCovidData.byCountry')),\n      },\n      population: {\n        keys: Object.keys(get(state, 'core.worldCovidData.population')),\n      },\n      totals: { length: get(state, 'core.worldCovidData.totals.length') },\n    };\n    coreState.worldCovidData = {\n      ...worldCovidState,\n    };\n  }\n  if (state.core.usCovidData) {\n    const usCovidState = {\n      ...state.core.usCovidData,\n      casesByCounty: {\n        keys: Object.keys(get(state, 'core.usCovidData.casesByCounty')),\n      },\n      byState: {\n        keys: Object.keys(get(state, 'core.usCovidData.byState')),\n      },\n      stateAndCounty: {\n        keys: Object.keys(get(state, 'core.usCovidData.stateAndCounty')),\n      },\n      badRecords: { length: get(state, 'core.usCovidData.badRecords.length') },\n      totals: { length: get(state, 'core.usCovidData.totals.length') },\n      population: {\n        keys: Object.keys(get(state, 'core.usCovidData.population')),\n      },\n    };\n    coreState.usCovidData = { ...usCovidState };\n  }\n  return {\n    ...state,\n    core: coreState,\n    ui: uiState,\n  };\n};\n\nexport default function configureAppStore(preloadedState) {\n  const storeConfig = {\n    reducer: rootReducer,\n    middleware: [\n      ...getDefaultMiddleware({\n        serializableCheck: false,\n        immutableCheck: false,\n      }),\n    ],\n    preloadedState,\n    enhancers: [],\n    devTools: {\n      actionSanitizer: (action) => actionSanitizer(action),\n      stateSanitizer: (state) => stateSanitizer(state),\n    },\n  };\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./core', () => store.replaceReducer(rootReducer));\n    storeConfig.middleware.push(loggerMiddleware);\n    storeConfig.enhancers.push(monitorReducersEnhancer);\n  }\n\n  const store = configureStore(storeConfig);\n\n  return store;\n}\n"],"sourceRoot":""}